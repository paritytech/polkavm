// RO data = 3912/3912 bytes
// RW data = 24/4144 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [82, 0, 255, 255, 106, 0, 255, 255, 124, 0, 255, 255, 142, 0, 255, 255, 166, 0, 255, 255, 190, 0, 255, 255, 212, 0, 255, 255, 224, 0, 255, 255, 236, 0, 255, 255, 254, 0, 255, 255, 0, 16, 0, 0, 0, 0, 0, 0, 252, 255, 255, 255, 255, 255, 255, 255, 250, 255, 255, 255, 255, 255, 255, 255, 101, 120, 112, 117, 110, 103, 101, 32, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 32, 111, 117, 116, 112, 117, 116, 61, 247, 255, 255, 255, 255, 255, 255, 255, 110, 117, 109, 95, 99, 104, 105, 108, 100, 95, 118, 109, 61, 32, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 112, 111, 107, 101, 32, 109, 61, 32, 115, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 44, 32, 103, 111, 116, 32, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 32, 115, 101, 103, 95, 98, 117, 102, 61, 101, 120, 112, 111, 114, 116, 32, 105, 61, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 90, 69, 82, 79, 44, 32, 103, 111, 116, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 101, 106, 101, 99, 116, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 105, 110, 102, 111, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 105, 110, 115, 101, 114, 116, 32, 116, 44, 32, 103, 111, 116, 32, 121, 105, 101, 108, 100, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 97, 115, 115, 105, 103, 110, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 110, 101, 119, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 41, 44, 32, 103, 111, 116, 32, 117, 112, 103, 114, 97, 100, 101, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 91, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 40, 41, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 104, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 117, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 104, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 129, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 149, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 163, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 170, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 180, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 193, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 203, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 206, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 209, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 222, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 229, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 244, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 249, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 244, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 25, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 42, 1, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 69, 1, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 90, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 101, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 114, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 123, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 244, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 132, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 150, 1, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 197, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 243, 1, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 12, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 2, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 55, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 75, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 95, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 124, 2, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 12, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 146, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 175, 2, 1, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 213, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 12, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 242, 2, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 14, 3, 1, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 52, 3, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 12, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 82, 3, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 55, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 106, 3, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 134, 3, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 161, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 12, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 179, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 55, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 197, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 242, 3, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 18, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 12, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 134, 3, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 36, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 53, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 81, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 134, 3, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 36, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 101, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 116, 4, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 138, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 157, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 12, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 174, 4, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 205, 4, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 177, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 231, 4, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 4, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 12, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 13, 5, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 55, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 174, 4, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 226, 3, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 60, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 80, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 89, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 54, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 56, 1, 0, 0, 0, 0, 0, 0, 62, 1, 0, 0, 0, 0, 0, 0, 70, 1, 0, 0, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 122, 1, 0, 0, 0, 0, 0, 0, 105, 6, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 122, 6, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 5278
// Code size = 16527 bytes

      :                          @0
     0: 28 61 03 00 00           jump @60
      :                          @1
     5: 28 63 0e 00 00           jump @196
      :                          @2
    10: 28 4c 2b                 jump @591
      :                          @3 [@dyn 1]
    13: 33 09 02                 a2 = 0x2
    16: 64 87                    a0 = a1
    18: 33 08 67 06 01           a1 = 0x10667
    23: 28 ad 34                 jump @795
      :                          @4 [@dyn 2]
    26: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    30: 7b 10 80 00              u64 [sp + 0x80] = ra
    34: 64 82                    t0 = a1
    36: 80 88 34                 a1 = u32 [a1 + 0x34]
    39: 84 89 10                 a2 = a1 & 0x10
    42: 52 09 1b                 jump @7 if a2 != 0
      :                          @5
    45: 84 88 20                 a1 = a1 & 0x20
    48: 52 08 5c                 jump @11 if a1 != 0
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 08 01                 a1 = 0x1
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 d4 30                 jump @731
      :                          @7
    69: 7c 77                    a0 = u8 [a0]
    71: 33 0a 81 00              a3 = 0x81
    75: 95 18 7f                 a1 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @8
    82: 64 ab                    a4 = a3
    84: 84 7a 0f                 a3 = a0 & 0xf
    87: 97 77 38                 a0 = a0 << 0x38
    90: 98 77 3c                 a0 = a0 >> 0x3c
    93: 88 ac 0a                 a5 = a3 <u 0xa
    96: 33 09 30                 a2 = 0x30
    99: da c3 09                 a2 = t1 if a5 == 0
   102: be a9 09                 i32 a2 = a2 + a3
   105: 78 89                    u8 [a1] = a2
   107: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   110: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
   113: 52 07 e1                 jump @8 if a0 != 0
      :                          @9
   116: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   119: 56 27 80 00 72           jump @17 if a0 >u 128
      :                          @10
   124: 9a ac 81 00              a5 = 0x81 - a3
   128: 64 1b                    a4 = sp
   130: c8 7b 0b                 a4 = a4 + a0
   133: 33 09 9d 05 01           a2 = 0x1059d
   138: 28 48                    jump @15
      :                          @11
   140: 7c 77                    a0 = u8 [a0]
   142: 33 0a 81 00              a3 = 0x81
   146: 95 18 7f                 a1 = sp + 0x7f
   149: 33 03 37                 t1 = 0x37
   152: 01                       fallthrough
      :                          @12
   153: 64 ab                    a4 = a3
   155: 84 7a 0f                 a3 = a0 & 0xf
   158: 97 77 38                 a0 = a0 << 0x38
   161: 98 77 3c                 a0 = a0 >> 0x3c
   164: 88 ac 0a                 a5 = a3 <u 0xa
   167: 33 09 30                 a2 = 0x30
   170: da c3 09                 a2 = t1 if a5 == 0
   173: be a9 09                 i32 a2 = a2 + a3
   176: 78 89                    u8 [a1] = a2
   178: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   181: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
   184: 52 07 e1                 jump @12 if a0 != 0
      :                          @13
   187: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   190: 56 27 80 00 2b           jump @17 if a0 >u 128
      :                          @14
   195: 9a ac 81 00              a5 = 0x81 - a3
   199: 64 1b                    a4 = sp
   201: c8 7b 0b                 a4 = a4 + a0
   204: 33 09 9d 05 01           a2 = 0x1059d
   209: 01                       fallthrough
      :                          @15
   210: 33 08 01                 a1 = 0x1
   213: 33 0a 02                 a3 = 0x2
   216: 64 27                    a0 = t0
   218: 50 10 06 5f 31           ra = 6, jump @741
      :                          @16 [@dyn 3]
   223: 82 10 80 00              ra = u64 [sp + 0x80]
   227: 95 11 88 00              sp = sp + 0x88
   231: 32 00                    ret
      :                          @17
   233: 00                       trap
      :                          @18 [@dyn 4]
   234: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   238: 7b 10 80 00              u64 [sp + 0x80] = ra
   242: 64 82                    t0 = a1
   244: 80 88 34                 a1 = u32 [a1 + 0x34]
   247: 84 89 10                 a2 = a1 & 0x10
   250: 52 09 28                 jump @21 if a2 != 0
      :                          @19
   253: 84 88 20                 a1 = a1 & 0x20
   256: 52 08 68                 jump @25 if a1 != 0
      :                          @20
   259: 81 77                    a0 = i32 [a0]
   261: 89 79                    a2 = a0 <s 0
   263: 85 98 01                 a1 = a2 ^ 0x1
   266: 97 7a 20                 a3 = a0 << 0x20
   269: 98 aa 20                 a3 = a3 >> 0x20
   272: 9a 77                    a0 = -a0
   274: da 9a 07                 a0 = a3 if a2 == 0
   277: 64 29                    a2 = t0
   279: 82 10 80 00              ra = u64 [sp + 0x80]
   283: 95 11 88 00              sp = sp + 0x88
   287: 28 f7 2f                 jump @731
      :                          @21
   290: 81 7a                    a3 = i32 [a0]
   292: 33 08 81 00              a1 = 0x81
   296: 95 17 7f                 a0 = sp + 0x7f
   299: 33 03 57                 t1 = 0x57
   302: 01                       fallthrough
      :                          @22
   303: 64 8b                    a4 = a1
   305: 8b ac 04                 i32 a5 = a3 >> 0x4
   308: 84 aa 0f                 a3 = a3 & 0xf
   311: 88 a8 0a                 a1 = a3 <u 0xa
   314: 33 09 30                 a2 = 0x30
   317: da 83 09                 a2 = t1 if a1 == 0
   320: be a9 09                 i32 a2 = a2 + a3
   323: 78 79                    u8 [a0] = a2
   325: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   328: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   331: 64 ca                    a3 = a5
   333: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   336: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   339: 56 27 80 00 71           jump @31 if a0 >u 128
      :                          @24
   344: 9a 8c 81 00              a5 = 0x81 - a1
   348: 64 1b                    a4 = sp
   350: c8 7b 0b                 a4 = a4 + a0
   353: 33 09 9d 05 01           a2 = 0x1059d
   358: 28 47                    jump @29
      :                          @25
   360: 81 7a                    a3 = i32 [a0]
   362: 33 08 81 00              a1 = 0x81
   366: 95 17 7f                 a0 = sp + 0x7f
   369: 33 03 37                 t1 = 0x37
   372: 01                       fallthrough
      :                          @26
   373: 64 8b                    a4 = a1
   375: 8b ac 04                 i32 a5 = a3 >> 0x4
   378: 84 aa 0f                 a3 = a3 & 0xf
   381: 88 a8 0a                 a1 = a3 <u 0xa
   384: 33 09 30                 a2 = 0x30
   387: da 83 09                 a2 = t1 if a1 == 0
   390: be a9 09                 i32 a2 = a2 + a3
   393: 78 79                    u8 [a0] = a2
   395: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   398: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   401: 64 ca                    a3 = a5
   403: 52 0c e2                 jump @26 if a5 != 0
      :                          @27
   406: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   409: 56 27 80 00 2b           jump @31 if a0 >u 128
      :                          @28
   414: 9a 8c 81 00              a5 = 0x81 - a1
   418: 64 1b                    a4 = sp
   420: c8 7b 0b                 a4 = a4 + a0
   423: 33 09 9d 05 01           a2 = 0x1059d
   428: 01                       fallthrough
      :                          @29
   429: 33 08 01                 a1 = 0x1
   432: 33 0a 02                 a3 = 0x2
   435: 64 27                    a0 = t0
   437: 50 10 0a 84 30           ra = 10, jump @741
      :                          @30 [@dyn 5]
   442: 82 10 80 00              ra = u64 [sp + 0x80]
   446: 95 11 88 00              sp = sp + 0x88
   450: 32 00                    ret
      :                          @31
   452: 00                       trap
      :                          @32 [@dyn 6]
   453: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   457: 7b 10 80 00              u64 [sp + 0x80] = ra
   461: 64 82                    t0 = a1
   463: 80 88 34                 a1 = u32 [a1 + 0x34]
   466: 84 89 10                 a2 = a1 & 0x10
   469: 52 09 1b                 jump @35 if a2 != 0
      :                          @33
   472: 84 88 20                 a1 = a1 & 0x20
   475: 52 08 5b                 jump @39 if a1 != 0
      :                          @34
   478: 80 77                    a0 = u32 [a0]
   480: 33 08 01                 a1 = 0x1
   483: 64 29                    a2 = t0
   485: 82 10 80 00              ra = u64 [sp + 0x80]
   489: 95 11 88 00              sp = sp + 0x88
   493: 28 29 2f                 jump @731
      :                          @35
   496: 81 7a                    a3 = i32 [a0]
   498: 33 08 81 00              a1 = 0x81
   502: 95 17 7f                 a0 = sp + 0x7f
   505: 33 03 57                 t1 = 0x57
   508: 01                       fallthrough
      :                          @36
   509: 64 8b                    a4 = a1
   511: 8b ac 04                 i32 a5 = a3 >> 0x4
   514: 84 aa 0f                 a3 = a3 & 0xf
   517: 88 a8 0a                 a1 = a3 <u 0xa
   520: 33 09 30                 a2 = 0x30
   523: da 83 09                 a2 = t1 if a1 == 0
   526: be a9 09                 i32 a2 = a2 + a3
   529: 78 79                    u8 [a0] = a2
   531: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   534: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   537: 64 ca                    a3 = a5
   539: 52 0c e2                 jump @36 if a5 != 0
      :                          @37
   542: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   545: 56 27 80 00 71           jump @45 if a0 >u 128
      :                          @38
   550: 9a 8c 81 00              a5 = 0x81 - a1
   554: 64 1b                    a4 = sp
   556: c8 7b 0b                 a4 = a4 + a0
   559: 33 09 9d 05 01           a2 = 0x1059d
   564: 28 47                    jump @43
      :                          @39
   566: 81 7a                    a3 = i32 [a0]
   568: 33 08 81 00              a1 = 0x81
   572: 95 17 7f                 a0 = sp + 0x7f
   575: 33 03 37                 t1 = 0x37
   578: 01                       fallthrough
      :                          @40
   579: 64 8b                    a4 = a1
   581: 8b ac 04                 i32 a5 = a3 >> 0x4
   584: 84 aa 0f                 a3 = a3 & 0xf
   587: 88 a8 0a                 a1 = a3 <u 0xa
   590: 33 09 30                 a2 = 0x30
   593: da 83 09                 a2 = t1 if a1 == 0
   596: be a9 09                 i32 a2 = a2 + a3
   599: 78 79                    u8 [a0] = a2
   601: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   604: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   607: 64 ca                    a3 = a5
   609: 52 0c e2                 jump @40 if a5 != 0
      :                          @41
   612: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   615: 56 27 80 00 2b           jump @45 if a0 >u 128
      :                          @42
   620: 9a 8c 81 00              a5 = 0x81 - a1
   624: 64 1b                    a4 = sp
   626: c8 7b 0b                 a4 = a4 + a0
   629: 33 09 9d 05 01           a2 = 0x1059d
   634: 01                       fallthrough
      :                          @43
   635: 33 08 01                 a1 = 0x1
   638: 33 0a 02                 a3 = 0x2
   641: 64 27                    a0 = t0
   643: 50 10 0e b6 2f           ra = 14, jump @741
      :                          @44 [@dyn 7]
   648: 82 10 80 00              ra = u64 [sp + 0x80]
   652: 95 11 88 00              sp = sp + 0x88
   656: 32 00                    ret
      :                          @45
   658: 00                       trap
      :                          @46 [@dyn 8]
   659: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   663: 7b 10 80 00              u64 [sp + 0x80] = ra
   667: 64 82                    t0 = a1
   669: 80 88 34                 a1 = u32 [a1 + 0x34]
   672: 84 89 10                 a2 = a1 & 0x10
   675: 52 09 1b                 jump @49 if a2 != 0
      :                          @47
   678: 84 88 20                 a1 = a1 & 0x20
   681: 52 08 5b                 jump @53 if a1 != 0
      :                          @48
   684: 82 77                    a0 = u64 [a0]
   686: 33 08 01                 a1 = 0x1
   689: 64 29                    a2 = t0
   691: 82 10 80 00              ra = u64 [sp + 0x80]
   695: 95 11 88 00              sp = sp + 0x88
   699: 28 5b 2e                 jump @731
      :                          @49
   702: 82 7a                    a3 = u64 [a0]
   704: 33 08 81 00              a1 = 0x81
   708: 95 17 7f                 a0 = sp + 0x7f
   711: 33 03 57                 t1 = 0x57
   714: 01                       fallthrough
      :                          @50
   715: 64 8b                    a4 = a1
   717: 98 ac 04                 a5 = a3 >> 0x4
   720: 84 aa 0f                 a3 = a3 & 0xf
   723: 88 a8 0a                 a1 = a3 <u 0xa
   726: 33 09 30                 a2 = 0x30
   729: da 83 09                 a2 = t1 if a1 == 0
   732: be a9 09                 i32 a2 = a2 + a3
   735: 78 79                    u8 [a0] = a2
   737: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   740: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   743: 64 ca                    a3 = a5
   745: 52 0c e2                 jump @50 if a5 != 0
      :                          @51
   748: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   751: 56 27 80 00 71           jump @59 if a0 >u 128
      :                          @52
   756: 9a 8c 81 00              a5 = 0x81 - a1
   760: 64 1b                    a4 = sp
   762: c8 7b 0b                 a4 = a4 + a0
   765: 33 09 9d 05 01           a2 = 0x1059d
   770: 28 47                    jump @57
      :                          @53
   772: 82 7a                    a3 = u64 [a0]
   774: 33 08 81 00              a1 = 0x81
   778: 95 17 7f                 a0 = sp + 0x7f
   781: 33 03 37                 t1 = 0x37
   784: 01                       fallthrough
      :                          @54
   785: 64 8b                    a4 = a1
   787: 98 ac 04                 a5 = a3 >> 0x4
   790: 84 aa 0f                 a3 = a3 & 0xf
   793: 88 a8 0a                 a1 = a3 <u 0xa
   796: 33 09 30                 a2 = 0x30
   799: da 83 09                 a2 = t1 if a1 == 0
   802: be a9 09                 i32 a2 = a2 + a3
   805: 78 79                    u8 [a0] = a2
   807: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   810: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   813: 64 ca                    a3 = a5
   815: 52 0c e2                 jump @54 if a5 != 0
      :                          @55
   818: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   821: 56 27 80 00 2b           jump @59 if a0 >u 128
      :                          @56
   826: 9a 8c 81 00              a5 = 0x81 - a1
   830: 64 1b                    a4 = sp
   832: c8 7b 0b                 a4 = a4 + a0
   835: 33 09 9d 05 01           a2 = 0x1059d
   840: 01                       fallthrough
      :                          @57
   841: 33 08 01                 a1 = 0x1
   844: 33 0a 02                 a3 = 0x2
   847: 64 27                    a0 = t0
   849: 50 10 12 e8 2e           ra = 18, jump @741
      :                          @58 [@dyn 9]
   854: 82 10 80 00              ra = u64 [sp + 0x80]
   858: 95 11 88 00              sp = sp + 0x88
   862: 32 00                    ret
      :                          @59
   864: 00                       trap
      :                          @60 [export #0: 'refine']
   865: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   869: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   873: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   877: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   881: 95 11 00 f8              sp = sp + 0xfffffffffffff800
   885: 95 11 78 fb              sp = sp + 0xfffffffffffffb78
   889: 33 09 04                 a2 = 0x4
   892: 33 0a 00 00 01           a3 = 0x10000
   897: ac 98 85 00              jump @73 if a1 <u a2
      :                          @61
   901: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
   904: 51 0b 7e                 jump @73 if a4 == 0
      :                          @62
   907: 7d 78 04                 a1 = i8 [a0 + 0x4]
   910: 80 7a                    a3 = u32 [a0]
   912: 33 06 01                 s1 = 0x1
   915: 59 08 3b                 jump @70 if a1 >=s 0
      :                          @63
   918: 84 88 ff 00              a1 = a1 & 0xff
   922: 33 06 02                 s1 = 0x2
   925: 53 28 c0 00 2d           jump @69 if a1 <u 192
      :                          @64
   930: 33 06 03                 s1 = 0x3
   933: 53 28 e0 00 25           jump @69 if a1 <u 224
      :                          @65
   938: 33 06 04                 s1 = 0x4
   941: 53 28 f0 00 1d           jump @69 if a1 <u 240
      :                          @66
   946: 33 06 05                 s1 = 0x5
   949: 53 28 f8 00 15           jump @69 if a1 <u 248
      :                          @67
   954: 33 06 06                 s1 = 0x6
   957: 53 28 fc 00 0d           jump @69 if a1 <u 252
      :                          @68
   962: 88 88 fe 00              a1 = a1 <u 0xfe
   966: 9a 86 08                 s1 = 0x8 - a1
   969: 01                       fallthrough
      :                          @69
   970: ac 6b 9d 0a              jump @195 if a4 <u s1
      :                          @70
   974: 7b 1a 78                 u64 [sp + 0x78] = a3
   977: 95 77 04                 a0 = a0 + 0x4
   980: 64 68                    a1 = s1
   982: 7b 1b 80 00              u64 [sp + 0x80] = a4
   986: 50 10 14 2b 39           ra = 20, jump @960
      :                          @71 [@dyn 10]
   991: 64 75                    s0 = a0
   993: 82 17 80 00              a0 = u64 [sp + 0x80]
   997: e4 67 07                 a0 = maxu(a0, s1)
  1000: c9 67 07                 a0 = a0 - s1
  1003: d8 57 08                 a1 = a0 <u s0
  1006: e4 57 07                 a0 = maxu(a0, s0)
  1009: c9 57 07                 a0 = a0 - s0
  1012: 88 77 20                 a0 = a0 <u 0x20
  1015: d4 87 07                 a0 = a0 | a1
  1018: 51 07 2b                 jump @75 if a0 == 0
      :                          @72
  1021: 33 08                    a1 = 0
  1023: 33 0a 00 00 01           a3 = 0x10000
  1028: 28 05                    jump @74
      :                          @73
  1030: 33 08                    a1 = 0
  1032: 01                       fallthrough
      :                          @74
  1033: 64 a7                    a0 = a3
  1035: 95 11 f8 07              sp = sp + 0x7f8
  1039: 95 11 90 04              sp = sp + 0x490
  1043: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1047: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1051: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1055: 95 11 f8 07              sp = sp + 0x7f8
  1059: 32 00                    ret
      :                          @75
  1061: 48 21 a8 00              u32 [sp + 168] = 0
  1065: 49 21 a0 00              u64 [sp + 160] = 0
  1069: 49 21 98 00              u64 [sp + 152] = 0
  1073: 49 21 90 00              u64 [sp + 144] = 0
  1077: 49 21 88 00              u64 [sp + 136] = 0
  1081: 95 17 88 00              a0 = sp + 0x88
  1085: 33 09 24                 a2 = 0x24
  1088: 33 0a 03                 a3 = 0x3
  1091: 33 08                    a1 = 0
  1093: 33 0b                    a4 = 0
  1095: 33 0c                    a5 = 0
  1097: 0a 12                    ecalli 18 // 'fetch'
  1099: 01                       fallthrough
      :                          @76
  1100: 95 1a 88 00              a3 = sp + 0x88
  1104: 33 08 24                 a1 = 0x24
  1107: 53 15 08 b6              jump @74 if s0 <u 8
      :                          @77
  1111: 95 17 b0 00              a0 = sp + 0xb0
  1115: 33 09 00 02              a2 = 0x200
  1119: 33 08                    a1 = 0
  1121: 50 10 16 56 2c           ra = 22, jump @716
      :                          @78 [@dyn 11]
  1126: 95 18 88 00              a1 = sp + 0x88
  1130: 95 19 b0 00              a2 = sp + 0xb0
  1134: 33 0b 00 02              a4 = 0x200
  1138: 82 17 78                 a0 = u64 [sp + 0x78]
  1141: 33 0a                    a3 = 0
  1143: 0a 11                    ecalli 17 // 'historical_lookup'
  1145: 01                       fallthrough
      :                          @79
  1146: 7b 17 58                 u64 [sp + 0x58] = a0
  1149: 51 17 ff 80              jump @72 if a0 == 4294967295
      :                          @80
  1153: 95 15 80 13              s0 = sp + 0x1380
  1157: 49 21 e8 02              u64 [sp + 744] = 0
  1161: 49 21 e0 02              u64 [sp + 736] = 0
  1165: 49 21 d8 02              u64 [sp + 728] = 0
  1169: 49 21 d0 02              u64 [sp + 720] = 0
  1173: 49 21 c8 02              u64 [sp + 712] = 0
  1177: 49 21 c0 02              u64 [sp + 704] = 0
  1181: 49 21 b8 02              u64 [sp + 696] = 0
  1185: 49 21 b0 02              u64 [sp + 688] = 0
  1189: 48 21 f4 02 01           u32 [sp + 756] = 0x1
  1194: 0a                       ecalli 0 // 'gas'
  1195: 7b 17 f8 02              u64 [sp + 0x2f8] = a0
  1199: 95 17 f4 02              a0 = sp + 0x2f4
  1203: 7b 17 00 03              u64 [sp + 0x300] = a0
  1207: 33 07 08                 a0 = 0x8
  1210: 7b 17 40                 u64 [sp + 0x40] = a0
  1213: 7b 17 08 03              u64 [sp + 0x308] = a0
  1217: 95 17 f8 02              a0 = sp + 0x2f8
  1221: 7b 17 10 03              u64 [sp + 0x310] = a0
  1225: 33 07 88 06 01           a0 = 0x10688
  1230: 7b 17 78 03              u64 [sp + 0x378] = a0
  1234: 49 21 80 03 02           u64 [sp + 896] = 0x2
  1239: 49 21 98 03              u64 [sp + 920] = 0
  1243: 95 18 00 03              a1 = sp + 0x300
  1247: 7b 18 88 03              u64 [sp + 0x388] = a1
  1251: 33 06 ff ef              s1 = 0xffffffffffffefff
  1255: 7b 16 80 00              u64 [sp + 0x80] = s1
  1259: 49 21 90 03 02           u64 [sp + 912] = 0x2
  1264: 33 07 10                 a0 = 0x10
  1267: 7b 17 78                 u64 [sp + 0x78] = a0
  1270: 7b 17 18 03              u64 [sp + 0x318] = a0
  1274: 95 17 d0 13              a0 = sp + 0x13d0
  1278: 95 18 78 03              a1 = sp + 0x378
  1282: 50 10 18 8e 28           ra = 24, jump @648
      :                          @81 [@dyn 12]
  1287: 82 56 58                 s1 = u64 [s0 + 0x58]
  1290: 82 5b 60                 a4 = u64 [s0 + 0x60]
  1293: 82 55 50                 s0 = u64 [s0 + 0x50]
  1296: 33 07 02                 a0 = 0x2
  1299: 33 08                    a1 = 0
  1301: 33 09                    a2 = 0
  1303: 64 6a                    a3 = s1
  1305: 33 00 1a                 ra = 0x1a
  1308: 0a 64                    ecalli 100 // 'log'
  1310: 01                       fallthrough
      :                          @82 [@dyn 13]
  1311: 82 17 80 00              a0 = u64 [sp + 0x80]
  1315: c8 57 07                 a0 = a0 + s0
  1318: 33 0c 20 00 03           a5 = 0x30020
  1323: 53 27 00 f0 20           jump @88 if a0 <u 4294963200
      :                          @83
  1328: 95 c7 00 10              a0 = a5 + 0x1000
  1332: 01                       fallthrough
      :                          @84
  1333: 82 78                    a1 = u64 [a0]
  1335: c9 87 09                 a2 = a0 - a1
  1338: ab 69 11                 jump @88 if a2 != s1
      :                          @85
  1341: c9 58 09                 a2 = a1 - s0
  1344: 01                       fallthrough
      :                          @86
  1345: 82 7a                    a3 = u64 [a0]
  1347: ab 8a f2                 jump @84 if a3 != a1
      :                          @87
  1350: 7b 79                    u64 [a0] = a2
  1352: 33 0b                    a4 = 0
  1354: 01                       fallthrough
      :                          @88
  1355: 7b 1c 70                 u64 [sp + 0x70] = a5
  1358: 81 17 f4 02              a0 = i32 [sp + 0x2f4]
  1362: 7b 17 50                 u64 [sp + 0x50] = a0
  1365: 58 07 ce 00              jump @102 if a0 <=s 0
      :                          @89
  1369: 33 06                    s1 = 0
  1371: 33 07 b8 08 01           a0 = 0x108b8
  1376: 7b 17 48                 u64 [sp + 0x48] = a0
  1379: 82 17 70                 a0 = u64 [sp + 0x70]
  1382: 95 75 00 10              s0 = a0 + 0x1000
  1386: 28 0f                    jump @91
      :                          @90
  1388: 82 16 68                 s1 = u64 [sp + 0x68]
  1391: 95 66 01                 s1 = s1 + 0x1
  1394: 82 17 50                 a0 = u64 [sp + 0x50]
  1397: aa 76 ae 00              jump @102 if s1 == a0
      :                          @91
  1401: 95 17 b0 00              a0 = sp + 0xb0
  1405: 82 18 58                 a1 = u64 [sp + 0x58]
  1408: 33 09                    a2 = 0
  1410: 0a 14                    ecalli 20 // 'machine'
  1412: 01                       fallthrough
      :                          @92
  1413: 95 19 80 13              a2 = sp + 0x1380
  1417: 7b 97 b8 00              u64 [a2 + 0xb8] = a0
  1421: 51 16 10 d9 08           jump @194 if s1 == 16
      :                          @93
  1426: 7b 16 68                 u64 [sp + 0x68] = s1
  1429: 97 68 02                 a1 = s1 << 0x2
  1432: 95 1a b0 02              a3 = sp + 0x2b0
  1436: c8 a8 08                 a1 = a1 + a3
  1439: 7a 87                    u32 [a1] = a0
  1441: 95 17 38 14              a0 = sp + 0x1438
  1445: 7b 97 50                 u64 [a2 + 0x50] = a0
  1448: 82 17 78                 a0 = u64 [sp + 0x78]
  1451: 7b 97 58                 u64 [a2 + 0x58] = a0
  1454: 82 17 48                 a0 = u64 [sp + 0x48]
  1457: 7b 17 78 03              u64 [sp + 0x378] = a0
  1461: 49 21 80 03 01           u64 [sp + 896] = 0x1
  1466: 49 21 98 03              u64 [sp + 920] = 0
  1470: 95 18 d0 13              a1 = sp + 0x13d0
  1474: 7b 18 88 03              u64 [sp + 0x388] = a1
  1478: 49 21 90 03 01           u64 [sp + 912] = 0x1
  1483: 95 17 00 03              a0 = sp + 0x300
  1487: 95 18 78 03              a1 = sp + 0x378
  1491: 50 10 1c bd 27           ra = 28, jump @648
      :                          @94 [@dyn 14]
  1496: 82 16 08 03              s1 = u64 [sp + 0x308]
  1500: 82 1b 10 03              a4 = u64 [sp + 0x310]
  1504: 82 17 00 03              a0 = u64 [sp + 0x300]
  1508: 7b 17 60                 u64 [sp + 0x60] = a0
  1511: 33 07 02                 a0 = 0x2
  1514: 33 08                    a1 = 0
  1516: 33 09                    a2 = 0
  1518: 64 6a                    a3 = s1
  1520: 33 00 1e                 ra = 0x1e
  1523: 0a 64                    ecalli 100 // 'log'
  1525: 01                       fallthrough
      :                          @95 [@dyn 15]
  1526: 82 1b 60                 a4 = u64 [sp + 0x60]
  1529: 82 17 80 00              a0 = u64 [sp + 0x80]
  1533: c8 b7 07                 a0 = a0 + a4
  1536: 53 27 00 f0 6c ff        jump @90 if a0 <u 4294963200
      :                          @96
  1542: 82 57                    a0 = u64 [s0]
  1544: c9 75 08                 a1 = s0 - a0
  1547: ab 68 61 ff              jump @90 if a1 != s1
      :                          @97
  1551: c9 b7 08                 a1 = a0 - a4
  1554: 01                       fallthrough
      :                          @98
  1555: 82 59                    a2 = u64 [s0]
  1557: ab 79 f1                 jump @96 if a2 != a0
      :                          @99
  1560: 7b 58                    u64 [s0] = a1
  1562: 33 0a                    a3 = 0
  1564: 01                       fallthrough
      :                          @100
  1565: ab 79 e9                 jump @96 if a2 != a0
      :                          @101
  1568: 28 4c ff                 jump @90
      :                          @102
  1571: 49 21 00 03 00 00 01     u64 [sp + 768] = 0x10000
  1578: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  1588: 7b 17 08 03              u64 [sp + 0x308] = a0
  1592: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  1602: 7b 17 10 03              u64 [sp + 0x310] = a0
  1606: 49 21 18 03              u64 [sp + 792] = 0
  1610: 49 21 20 03              u64 [sp + 800] = 0
  1614: 49 21 28 03              u64 [sp + 808] = 0
  1618: 49 21 30 03              u64 [sp + 816] = 0
  1622: 49 21 38 03              u64 [sp + 824] = 0
  1626: 14 07 00 00 ff fe 00 00 00 00 a0 = 0xfeff0000
  1636: 7b 17 40 03              u64 [sp + 0x340] = a0
  1640: 49 21 48 03              u64 [sp + 840] = 0
  1644: 49 21 50 03              u64 [sp + 848] = 0
  1648: 49 21 58 03              u64 [sp + 856] = 0
  1652: 49 21 60 03              u64 [sp + 864] = 0
  1656: 49 21 68 03              u64 [sp + 872] = 0
  1660: 95 17 f4 02              a0 = sp + 0x2f4
  1664: 95 16 80 13              s1 = sp + 0x1380
  1668: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1672: 82 17 40                 a0 = u64 [sp + 0x40]
  1675: 7b 67 c0 00              u64 [s1 + 0xc0] = a0
  1679: 33 07 a8 06 01           a0 = 0x106a8
  1684: 7b 17 78 03              u64 [sp + 0x378] = a0
  1688: 49 21 80 03 01           u64 [sp + 896] = 0x1
  1693: 49 21 98 03              u64 [sp + 920] = 0
  1697: 95 18 38 14              a1 = sp + 0x1438
  1701: 7b 18 88 03              u64 [sp + 0x388] = a1
  1705: 49 21 90 03 01           u64 [sp + 912] = 0x1
  1710: 95 17 d0 13              a0 = sp + 0x13d0
  1714: 95 18 78 03              a1 = sp + 0x378
  1718: 50 10 20 da 26           ra = 32, jump @648
      :                          @103 [@dyn 16]
  1723: 82 65 58                 s0 = u64 [s1 + 0x58]
  1726: 82 6b 60                 a4 = u64 [s1 + 0x60]
  1729: 82 66 50                 s1 = u64 [s1 + 0x50]
  1732: 33 07 02                 a0 = 0x2
  1735: 33 08                    a1 = 0
  1737: 33 09                    a2 = 0
  1739: 64 5a                    a3 = s0
  1741: 33 00 22                 ra = 0x22
  1744: 0a 64                    ecalli 100 // 'log'
  1746: 01                       fallthrough
      :                          @104 [@dyn 17]
  1747: 82 17 80 00              a0 = u64 [sp + 0x80]
  1751: c8 67 07                 a0 = a0 + s1
  1754: 53 27 00 f0 23           jump @110 if a0 <u 4294963200
      :                          @105
  1759: 82 18 70                 a1 = u64 [sp + 0x70]
  1762: 95 87 00 10              a0 = a1 + 0x1000
  1766: 01                       fallthrough
      :                          @106
  1767: 82 78                    a1 = u64 [a0]
  1769: c9 87 09                 a2 = a0 - a1
  1772: ab 59 11                 jump @110 if a2 != s0
      :                          @107
  1775: c9 68 09                 a2 = a1 - s1
  1778: 01                       fallthrough
      :                          @108
  1779: 82 7a                    a3 = u64 [a0]
  1781: ab 8a f2                 jump @106 if a3 != a1
      :                          @109
  1784: 7b 79                    u64 [a0] = a2
  1786: 33 0b                    a4 = 0
  1788: 01                       fallthrough
      :                          @110
  1789: 80 17 b0 02              a0 = u32 [sp + 0x2b0]
  1793: 7b 17 40                 u64 [sp + 0x40] = a0
  1796: 7a 17 74 03              u32 [sp + 0x374] = a0
  1800: 33 05 08 10              s0 = 0x1008
  1804: 95 17 78 03              a0 = sp + 0x378
  1808: 33 08                    a1 = 0
  1810: 33 09 08 10              a2 = 0x1008
  1814: 50 10 24 a1 29           ra = 36, jump @716
      :                          @111 [@dyn 18]
  1819: 95 16 80 13              s1 = sp + 0x1380
  1823: 49 06                    u64 [s1 + 0] = 0
  1825: 95 17 80 03              a0 = sp + 0x380
  1829: 7b 67 08                 u64 [s1 + 0x8] = a0
  1832: 95 17 78 03              a0 = sp + 0x378
  1836: 33 0a 06                 a3 = 0x6
  1839: 33 08                    a1 = 0
  1841: 7b 15 68                 u64 [sp + 0x68] = s0
  1844: 64 59                    a2 = s0
  1846: 33 0b                    a4 = 0
  1848: 33 0c                    a5 = 0
  1850: 0a 12                    ecalli 18 // 'fetch'
  1852: 01                       fallthrough
      :                          @112
  1853: 7b 67 10                 u64 [s1 + 0x10] = a0
  1856: 51 17 ff 4f 02           jump @139 if a0 == 4294967295
      :                          @113
  1861: 33 07 b8 06 01           a0 = 0x106b8
  1866: 7b 17 60                 u64 [sp + 0x60] = a0
  1869: 33 07 d8 06 01           a0 = 0x106d8
  1874: 7b 17 58                 u64 [sp + 0x58] = a0
  1877: 33 07 28 00 01           a0 = 0x10028
  1882: 7b 17 50                 u64 [sp + 0x50] = a0
  1885: 33 07 08 07 01           a0 = 0x10708
  1890: 7b 17 48                 u64 [sp + 0x48] = a0
  1893: 28 26                    jump @116
      :                          @114
  1895: 95 16 80 13              s1 = sp + 0x1380
  1899: 82 6b                    a4 = u64 [s1]
  1901: 95 bb 01                 a4 = a4 + 0x1
  1904: 7b 6b                    u64 [s1] = a4
  1906: 95 17 78 03              a0 = sp + 0x378
  1910: 33 0a 06                 a3 = 0x6
  1913: 33 08                    a1 = 0
  1915: 82 19 68                 a2 = u64 [sp + 0x68]
  1918: 33 0c                    a5 = 0
  1920: 0a 12                    ecalli 18 // 'fetch'
  1922: 01                       fallthrough
      :                          @115
  1923: 7b 67 10                 u64 [s1 + 0x10] = a0
  1926: 51 17 ff 09 02           jump @139 if a0 == 4294967295
      :                          @116
  1931: 7b 66 b8 00              u64 [s1 + 0xb8] = s1
  1935: 82 17 78                 a0 = u64 [sp + 0x78]
  1938: 7b 67 c0 00              u64 [s1 + 0xc0] = a0
  1942: 95 18 90 13              a1 = sp + 0x1390
  1946: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
  1950: 7b 67 d0 00              u64 [s1 + 0xd0] = a0
  1954: 82 17 60                 a0 = u64 [sp + 0x60]
  1957: 7b 67 50                 u64 [s1 + 0x50] = a0
  1960: 49 16 58 02              u64 [s1 + 88] = 0x2
  1964: 49 16 70                 u64 [s1 + 112] = 0
  1967: 95 18 38 14              a1 = sp + 0x1438
  1971: 7b 68 60                 u64 [s1 + 0x60] = a1
  1974: 49 16 68 02              u64 [s1 + 104] = 0x2
  1978: 95 17 20 14              a0 = sp + 0x1420
  1982: 95 18 d0 13              a1 = sp + 0x13d0
  1986: 50 10 26 ce 25           ra = 38, jump @648
      :                          @117 [@dyn 19]
  1991: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  1995: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  1999: 95 17 80 13              a0 = sp + 0x1380
  2003: 82 76 a0 00              s1 = u64 [a0 + 0xa0]
  2007: 33 07 02                 a0 = 0x2
  2010: 33 08                    a1 = 0
  2012: 33 09                    a2 = 0
  2014: 64 5a                    a3 = s0
  2016: 33 00 28                 ra = 0x28
  2019: 0a 64                    ecalli 100 // 'log'
  2021: 01                       fallthrough
      :                          @118 [@dyn 20]
  2022: 82 17 80 00              a0 = u64 [sp + 0x80]
  2026: c8 67 07                 a0 = a0 + s1
  2029: 82 1c 70                 a5 = u64 [sp + 0x70]
  2032: 33 02 00 10              t0 = 0x1000
  2036: 53 27 00 f0 1c           jump @123 if a0 <u 4294963200
      :                          @119
  2041: c8 2c 08                 a1 = a5 + t0
  2044: 82 87                    a0 = u64 [a1]
  2046: c9 78 09                 a2 = a1 - a0
  2049: ab 59 0f                 jump @123 if a2 != s0
      :                          @120
  2052: c9 67 09                 a2 = a0 - s1
  2055: 01                       fallthrough
      :                          @121
  2056: 82 8a                    a3 = u64 [a1]
  2058: ab 7a ef                 jump @119 if a3 != a0
      :                          @122
  2061: 7b 89                    u64 [a1] = a2
  2063: 01                       fallthrough
      :                          @123
  2064: 80 17 78 03              a0 = u32 [sp + 0x378]
  2068: 80 18 7c 03              a1 = u32 [sp + 0x37c]
  2072: 95 16 80 13              s1 = sp + 0x1380
  2076: 7b 67 18                 u64 [s1 + 0x18] = a0
  2079: 7b 68 20                 u64 [s1 + 0x20] = a1
  2082: 33 09 01                 a2 = 0x1
  2085: 0a 17                    ecalli 23 // 'zero'
  2087: 7b 67 28                 u64 [s1 + 0x28] = a0
  2090: 95 17 98 13              a0 = sp + 0x1398
  2094: 7b 67 50                 u64 [s1 + 0x50] = a0
  2097: 82 17 78                 a0 = u64 [sp + 0x78]
  2100: 7b 67 58                 u64 [s1 + 0x58] = a0
  2103: 95 18 a0 13              a1 = sp + 0x13a0
  2107: 7b 68 60                 u64 [s1 + 0x60] = a1
  2110: 7b 67 68                 u64 [s1 + 0x68] = a0
  2113: 95 18 a8 13              a1 = sp + 0x13a8
  2117: 7b 68 70                 u64 [s1 + 0x70] = a1
  2120: 7b 67 78                 u64 [s1 + 0x78] = a0
  2123: 82 17 58                 a0 = u64 [sp + 0x58]
  2126: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  2130: 49 26 c0 00 03           u64 [s1 + 192] = 0x3
  2135: 49 26 d8 00              u64 [s1 + 216] = 0
  2139: 95 17 d0 13              a0 = sp + 0x13d0
  2143: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  2147: 49 26 d0 00 03           u64 [s1 + 208] = 0x3
  2152: 95 17 20 14              a0 = sp + 0x1420
  2156: 95 18 38 14              a1 = sp + 0x1438
  2160: 50 10 2a 20 25           ra = 42, jump @648
      :                          @124 [@dyn 21]
  2165: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  2169: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  2173: 82 66 a0 00              s1 = u64 [s1 + 0xa0]
  2177: 33 07 02                 a0 = 0x2
  2180: 33 08                    a1 = 0
  2182: 33 09                    a2 = 0
  2184: 64 5a                    a3 = s0
  2186: 33 00 2c                 ra = 0x2c
  2189: 0a 64                    ecalli 100 // 'log'
  2191: 01                       fallthrough
      :                          @125 [@dyn 22]
  2192: 33 02 00 10              t0 = 0x1000
  2196: 82 1c 70                 a5 = u64 [sp + 0x70]
  2199: 82 17 80 00              a0 = u64 [sp + 0x80]
  2203: c8 67 07                 a0 = a0 + s1
  2206: 53 27 00 f0 1c           jump @130 if a0 <u 4294963200
      :                          @126
  2211: c8 2c 08                 a1 = a5 + t0
  2214: 82 87                    a0 = u64 [a1]
  2216: c9 78 09                 a2 = a1 - a0
  2219: ab 59 0f                 jump @130 if a2 != s0
      :                          @127
  2222: c9 67 09                 a2 = a0 - s1
  2225: 01                       fallthrough
      :                          @128
  2226: 82 8a                    a3 = u64 [a1]
  2228: ab 7a ef                 jump @126 if a3 != a0
      :                          @129
  2231: 7b 89                    u64 [a1] = a2
  2233: 01                       fallthrough
      :                          @130
  2234: 95 16 80 13              s1 = sp + 0x1380
  2238: 82 69 20                 a2 = u64 [s1 + 0x20]
  2241: 82 67 18                 a0 = u64 [s1 + 0x18]
  2244: 95 18 78 03              a1 = sp + 0x378
  2248: 7b 68 40                 u64 [s1 + 0x40] = a1
  2251: 97 99 0c                 a2 = a2 << 0xc
  2254: 7b 69 48                 u64 [s1 + 0x48] = a2
  2257: 33 0a 00 10              a3 = 0x1000
  2261: 95 18 80 03              a1 = sp + 0x380
  2265: 0a 16                    ecalli 22 // 'poke'
  2267: 7b 67 30                 u64 [s1 + 0x30] = a0
  2270: 95 17 98 13              a0 = sp + 0x1398
  2274: 7b 67 50                 u64 [s1 + 0x50] = a0
  2277: 82 17 78                 a0 = u64 [sp + 0x78]
  2280: 7b 67 58                 u64 [s1 + 0x58] = a0
  2283: 95 18 c0 13              a1 = sp + 0x13c0
  2287: 7b 68 60                 u64 [s1 + 0x60] = a1
  2290: 7b 67 68                 u64 [s1 + 0x68] = a0
  2293: 95 18 c8 13              a1 = sp + 0x13c8
  2297: 7b 68 70                 u64 [s1 + 0x70] = a1
  2300: 7b 67 78                 u64 [s1 + 0x78] = a0
  2303: 82 18 50                 a1 = u64 [sp + 0x50]
  2306: 7b 68 80 00              u64 [s1 + 0x80] = a1
  2310: 7b 67 88 00              u64 [s1 + 0x88] = a0
  2314: 95 18 b0 13              a1 = sp + 0x13b0
  2318: 7b 68 90 00              u64 [s1 + 0x90] = a1
  2322: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2326: 82 17 48                 a0 = u64 [sp + 0x48]
  2329: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  2333: 49 26 c0 00 05           u64 [s1 + 192] = 0x5
  2338: 49 26 d8 00              u64 [s1 + 216] = 0
  2342: 95 17 d0 13              a0 = sp + 0x13d0
  2346: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  2350: 49 26 d0 00 05           u64 [s1 + 208] = 0x5
  2355: 95 17 20 14              a0 = sp + 0x1420
  2359: 95 18 38 14              a1 = sp + 0x1438
  2363: 50 10 2e 55 24           ra = 46, jump @648
      :                          @131 [@dyn 23]
  2368: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  2372: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  2376: 82 66 a0 00              s1 = u64 [s1 + 0xa0]
  2380: 33 07 02                 a0 = 0x2
  2383: 33 08                    a1 = 0
  2385: 33 09                    a2 = 0
  2387: 64 5a                    a3 = s0
  2389: 33 00 30                 ra = 0x30
  2392: 0a 64                    ecalli 100 // 'log'
  2394: 01                       fallthrough
      :                          @132 [@dyn 24]
  2395: 33 02 00 10              t0 = 0x1000
  2399: 82 1c 70                 a5 = u64 [sp + 0x70]
  2402: 82 17 80 00              a0 = u64 [sp + 0x80]
  2406: c8 67 07                 a0 = a0 + s1
  2409: 53 27 00 f0 fe fd        jump @114 if a0 <u 4294963200
      :                          @133
  2415: c8 2c 08                 a1 = a5 + t0
  2418: 82 87                    a0 = u64 [a1]
  2420: c9 78 09                 a2 = a1 - a0
  2423: ab 59 f0 fd              jump @114 if a2 != s0
      :                          @134
  2427: c9 67 09                 a2 = a0 - s1
  2430: 01                       fallthrough
      :                          @135
  2431: 82 8a                    a3 = u64 [a1]
  2433: ab 7a ee                 jump @133 if a3 != a0
      :                          @136
  2436: 7b 89                    u64 [a1] = a2
  2438: 33 0b                    a4 = 0
  2440: 01                       fallthrough
      :                          @137
  2441: ab 7a e6                 jump @133 if a3 != a0
      :                          @138
  2444: 28 db fd                 jump @114
      :                          @139
  2447: 95 18 00 03              a1 = sp + 0x300
  2451: 82 17 40                 a0 = u64 [sp + 0x40]
  2454: 0a 19                    ecalli 25 // 'invoke'
  2456: 0a                       ecalli 0 // 'gas'
  2457: 7b 17 f8 02              u64 [sp + 0x2f8] = a0
  2461: 95 17 74 03              a0 = sp + 0x374
  2465: 7b 67 50                 u64 [s1 + 0x50] = a0
  2468: 33 07 0c                 a0 = 0xc
  2471: 7b 17 48                 u64 [sp + 0x48] = a0
  2474: 7b 67 58                 u64 [s1 + 0x58] = a0
  2477: 95 17 a8 13              a0 = sp + 0x13a8
  2481: 7b 67 60                 u64 [s1 + 0x60] = a0
  2484: 33 07 02                 a0 = 0x2
  2487: 7b 17 60                 u64 [sp + 0x60] = a0
  2490: 7b 67 68                 u64 [s1 + 0x68] = a0
  2493: 95 17 f8 02              a0 = sp + 0x2f8
  2497: 7b 67 70                 u64 [s1 + 0x70] = a0
  2500: 82 17 78                 a0 = u64 [sp + 0x78]
  2503: 7b 67 78                 u64 [s1 + 0x78] = a0
  2506: 33 07 58 07 01           a0 = 0x10758
  2511: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  2515: 49 26 c0 00 03           u64 [s1 + 192] = 0x3
  2520: 49 26 d8 00              u64 [s1 + 216] = 0
  2524: 95 18 d0 13              a1 = sp + 0x13d0
  2528: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
  2532: 49 26 d0 00 03           u64 [s1 + 208] = 0x3
  2537: 95 17 20 14              a0 = sp + 0x1420
  2541: 95 18 38 14              a1 = sp + 0x1438
  2545: 50 10 32 9f 23           ra = 50, jump @648
      :                          @140 [@dyn 25]
  2550: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  2554: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  2558: 95 17 80 13              a0 = sp + 0x1380
  2562: 82 76 a0 00              s1 = u64 [a0 + 0xa0]
  2566: 33 07 02                 a0 = 0x2
  2569: 33 08                    a1 = 0
  2571: 33 09                    a2 = 0
  2573: 64 5a                    a3 = s0
  2575: 33 00 34                 ra = 0x34
  2578: 0a 64                    ecalli 100 // 'log'
  2580: 01                       fallthrough
      :                          @141 [@dyn 26]
  2581: 82 17 80 00              a0 = u64 [sp + 0x80]
  2585: c8 67 07                 a0 = a0 + s1
  2588: 53 27 00 f0 23           jump @147 if a0 <u 4294963200
      :                          @142
  2593: 82 18 70                 a1 = u64 [sp + 0x70]
  2596: 95 87 00 10              a0 = a1 + 0x1000
  2600: 01                       fallthrough
      :                          @143
  2601: 82 78                    a1 = u64 [a0]
  2603: c9 87 09                 a2 = a0 - a1
  2606: ab 59 11                 jump @147 if a2 != s0
      :                          @144
  2609: c9 68 09                 a2 = a1 - s1
  2612: 01                       fallthrough
      :                          @145
  2613: 82 7a                    a3 = u64 [a0]
  2615: ab 8a f2                 jump @143 if a3 != a1
      :                          @146
  2618: 7b 79                    u64 [a0] = a2
  2620: 33 0b                    a4 = 0
  2622: 01                       fallthrough
      :                          @147
  2623: 95 16 80 13              s1 = sp + 0x1380
  2627: 48 16 38                 u32 [s1 + 56] = 0
  2630: 49 16 30                 u64 [s1 + 48] = 0
  2633: 82 69                    a2 = u64 [s1]
  2635: 33 08 04                 a1 = 0x4
  2638: 7b 18 50                 u64 [sp + 0x50] = a1
  2641: 33 08 48 00 01           a1 = 0x10048
  2646: 7b 18 40                 u64 [sp + 0x40] = a1
  2649: 7b 19 38                 u64 [sp + 0x38] = a2
  2652: 51 19 ff b1 02           jump @177 if a2 == 4294967295
      :                          @148
  2657: 33 08                    a1 = 0
  2659: 81 19 74 03              a2 = i32 [sp + 0x374]
  2663: 7b 19 10                 u64 [sp + 0x10] = a2
  2666: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  2676: 7b 17 30                 u64 [sp + 0x30] = a0
  2679: 33 09 28 00 01           a2 = 0x10028
  2684: 7b 19 28                 u64 [sp + 0x28] = a2
  2687: 33 09 f8 07 01           a2 = 0x107f8
  2692: 7b 19 20                 u64 [sp + 0x20] = a2
  2695: 33 09 48 08 01           a2 = 0x10848
  2700: 7b 19 08                 u64 [sp + 0x8] = a2
  2703: 82 15 70                 s0 = u64 [sp + 0x70]
  2706: 95 55 00 10              s0 = s0 + 0x1000
  2710: 49 11 18 08 10           u64 [sp + 24] = 0x1008
  2715: 28 13                    jump @150
      :                          @149
  2717: 82 19 68                 a2 = u64 [sp + 0x68]
  2720: 95 98 01                 a1 = a2 + 0x1
  2723: 95 16 80 13              s1 = sp + 0x1380
  2727: 82 17 38                 a0 = u64 [sp + 0x38]
  2730: aa 79 63 02              jump @177 if a2 == a0
      :                          @150
  2734: 7b 68 40                 u64 [s1 + 0x40] = a1
  2737: 7b 18 68                 u64 [sp + 0x68] = a1
  2740: 97 89 0c                 a2 = a1 << 0xc
  2743: 80 17 74 03              a0 = u32 [sp + 0x374]
  2747: 82 68 08                 a1 = u64 [s1 + 0x8]
  2750: 95 99 00 00 01           a2 = a2 + 0x10000
  2755: 82 1a 30                 a3 = u64 [sp + 0x30]
  2758: d2 a9 09                 a2 = a2 & a3
  2761: 7b 69 48                 u64 [s1 + 0x48] = a2
  2764: 33 0a 00 10              a3 = 0x1000
  2768: 0a 15                    ecalli 21 // 'peek'
  2770: 95 17 74 03              a0 = sp + 0x374
  2774: 7b 67 50                 u64 [s1 + 0x50] = a0
  2777: 82 17 48                 a0 = u64 [sp + 0x48]
  2780: 7b 67 58                 u64 [s1 + 0x58] = a0
  2783: 95 17 88 13              a0 = sp + 0x1388
  2787: 7b 67 60                 u64 [s1 + 0x60] = a0
  2790: 82 17 78                 a0 = u64 [sp + 0x78]
  2793: 7b 67 68                 u64 [s1 + 0x68] = a0
  2796: 95 18 c8 13              a1 = sp + 0x13c8
  2800: 7b 68 70                 u64 [s1 + 0x70] = a1
  2803: 7b 67 78                 u64 [s1 + 0x78] = a0
  2806: 82 18 28                 a1 = u64 [sp + 0x28]
  2809: 7b 68 80 00              u64 [s1 + 0x80] = a1
  2813: 7b 67 88 00              u64 [s1 + 0x88] = a0
  2817: 95 17 a8 13              a0 = sp + 0x13a8
  2821: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2825: 82 17 60                 a0 = u64 [sp + 0x60]
  2828: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2832: 82 17 20                 a0 = u64 [sp + 0x20]
  2835: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  2839: 49 26 c0 00 05           u64 [s1 + 192] = 0x5
  2844: 49 26 d8 00              u64 [s1 + 216] = 0
  2848: 95 18 d0 13              a1 = sp + 0x13d0
  2852: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
  2856: 49 26 d0 00 05           u64 [s1 + 208] = 0x5
  2861: 95 17 20 14              a0 = sp + 0x1420
  2865: 95 18 38 14              a1 = sp + 0x1438
  2869: 50 10 36 5b 22           ra = 54, jump @648
      :                          @151 [@dyn 27]
  2874: 95 17 80 13              a0 = sp + 0x1380
  2878: 82 76 a8 00              s1 = u64 [a0 + 0xa8]
  2882: 82 7b b0 00              a4 = u64 [a0 + 0xb0]
  2886: 82 77 a0 00              a0 = u64 [a0 + 0xa0]
  2890: 7b 17 58                 u64 [sp + 0x58] = a0
  2893: 33 07 02                 a0 = 0x2
  2896: 33 08                    a1 = 0
  2898: 33 09                    a2 = 0
  2900: 64 6a                    a3 = s1
  2902: 33 00 38                 ra = 0x38
  2905: 0a 64                    ecalli 100 // 'log'
  2907: 01                       fallthrough
      :                          @152 [@dyn 28]
  2908: 82 1b 58                 a4 = u64 [sp + 0x58]
  2911: 82 17 80 00              a0 = u64 [sp + 0x80]
  2915: c8 b7 07                 a0 = a0 + a4
  2918: 53 27 00 f0 19           jump @157 if a0 <u 4294963200
      :                          @153
  2923: 82 57                    a0 = u64 [s0]
  2925: c9 75 08                 a1 = s0 - a0
  2928: ab 68 0f                 jump @157 if a1 != s1
      :                          @154
  2931: c9 b7 08                 a1 = a0 - a4
  2934: 01                       fallthrough
      :                          @155
  2935: 82 59                    a2 = u64 [s0]
  2937: ab 79 f2                 jump @153 if a2 != a0
      :                          @156
  2940: 7b 58                    u64 [s0] = a1
  2942: 01                       fallthrough
      :                          @157
  2943: 95 16 80 13              s1 = sp + 0x1380
  2947: 82 67 40                 a0 = u64 [s1 + 0x40]
  2950: 82 68                    a1 = u64 [s1]
  2952: ab 87 ad 00              jump @166 if a0 != a1
      :                          @158
  2956: 83 77 10                 i32 a0 = a0 + 0x10
  2959: 82 18 10                 a1 = u64 [sp + 0x10]
  2962: 7a 18 78 03              u32 [sp + 0x378] = a1
  2966: 7a 17 7c 03              u32 [sp + 0x37c] = a0
  2970: 95 17 78 03              a0 = sp + 0x378
  2974: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  2978: 82 17 50                 a0 = u64 [sp + 0x50]
  2981: 7b 67 c0 00              u64 [s1 + 0xc0] = a0
  2985: 95 18 7c 03              a1 = sp + 0x37c
  2989: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
  2993: 7b 67 d0 00              u64 [s1 + 0xd0] = a0
  2997: 82 17 08                 a0 = u64 [sp + 0x8]
  3000: 7b 67 50                 u64 [s1 + 0x50] = a0
  3003: 49 16 58 02              u64 [s1 + 88] = 0x2
  3007: 49 16 70                 u64 [s1 + 112] = 0
  3010: 95 17 38 14              a0 = sp + 0x1438
  3014: 7b 67 60                 u64 [s1 + 0x60] = a0
  3017: 49 16 68 02              u64 [s1 + 104] = 0x2
  3021: 95 17 20 14              a0 = sp + 0x1420
  3025: 95 18 d0 13              a1 = sp + 0x13d0
  3029: 50 10 3a bb 21           ra = 58, jump @648
      :                          @159 [@dyn 29]
  3034: 95 17 80 13              a0 = sp + 0x1380
  3038: 82 76 a8 00              s1 = u64 [a0 + 0xa8]
  3042: 82 7b b0 00              a4 = u64 [a0 + 0xb0]
  3046: 82 77 a0 00              a0 = u64 [a0 + 0xa0]
  3050: 7b 17 58                 u64 [sp + 0x58] = a0
  3053: 33 07 02                 a0 = 0x2
  3056: 33 08                    a1 = 0
  3058: 33 09                    a2 = 0
  3060: 64 6a                    a3 = s1
  3062: 33 00 3c                 ra = 0x3c
  3065: 0a 64                    ecalli 100 // 'log'
  3067: 01                       fallthrough
      :                          @160 [@dyn 30]
  3068: 82 1b 58                 a4 = u64 [sp + 0x58]
  3071: 82 17 80 00              a0 = u64 [sp + 0x80]
  3075: c8 b7 07                 a0 = a0 + a4
  3078: 53 27 00 f0 19           jump @165 if a0 <u 4294963200
      :                          @161
  3083: 82 57                    a0 = u64 [s0]
  3085: c9 75 08                 a1 = s0 - a0
  3088: ab 68 0f                 jump @165 if a1 != s1
      :                          @162
  3091: c9 b7 08                 a1 = a0 - a4
  3094: 01                       fallthrough
      :                          @163
  3095: 82 59                    a2 = u64 [s0]
  3097: ab 79 f2                 jump @161 if a2 != a0
      :                          @164
  3100: 7b 58                    u64 [s0] = a1
  3102: 01                       fallthrough
      :                          @165
  3103: 95 16 80 13              s1 = sp + 0x1380
  3107: 82 17 68                 a0 = u64 [sp + 0x68]
  3110: 7a 67 30                 u32 [s1 + 0x30] = a0
  3113: 95 18 b4 13              a1 = sp + 0x13b4
  3117: 81 17 80 03              a0 = i32 [sp + 0x380]
  3121: 7a 87                    u32 [a1] = a0
  3123: 28 13                    jump @168
      :                          @166
  3125: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  3128: 95 18 b8 13              a1 = sp + 0x13b8
  3132: ab 97 0a                 jump @168 if a0 != a2
      :                          @167
  3135: 81 17 80 03              a0 = i32 [sp + 0x380]
  3139: 7a 87                    u32 [a1] = a0
  3141: 01                       fallthrough
      :                          @168
  3142: 95 17 78 03              a0 = sp + 0x378
  3146: 82 18 18                 a1 = u64 [sp + 0x18]
  3149: 0a 13                    ecalli 19 // 'export'
  3151: 0a                       ecalli 0 // 'gas'
  3152: 7b 17 f8 02              u64 [sp + 0x2f8] = a0
  3156: 33 07 68 08 01           a0 = 0x10868
  3161: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  3165: 95 17 c0 13              a0 = sp + 0x13c0
  3169: 7b 67 50                 u64 [s1 + 0x50] = a0
  3172: 82 17 78                 a0 = u64 [sp + 0x78]
  3175: 7b 67 58                 u64 [s1 + 0x58] = a0
  3178: 82 18 40                 a1 = u64 [sp + 0x40]
  3181: 7b 68 60                 u64 [s1 + 0x60] = a1
  3184: 7b 67 68                 u64 [s1 + 0x68] = a0
  3187: 95 18 a8 13              a1 = sp + 0x13a8
  3191: 7b 68 70                 u64 [s1 + 0x70] = a1
  3194: 82 18 60                 a1 = u64 [sp + 0x60]
  3197: 7b 68 78                 u64 [s1 + 0x78] = a1
  3200: 95 18 f8 02              a1 = sp + 0x2f8
  3204: 7b 68 80 00              u64 [s1 + 0x80] = a1
  3208: 7b 67 88 00              u64 [s1 + 0x88] = a0
  3212: 95 17 b0 13              a0 = sp + 0x13b0
  3216: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3220: 82 17 50                 a0 = u64 [sp + 0x50]
  3223: 7b 67 98 00              u64 [s1 + 0x98] = a0
  3227: 49 26 c0 00 05           u64 [s1 + 192] = 0x5
  3232: 49 26 d8 00              u64 [s1 + 216] = 0
  3236: 95 18 d0 13              a1 = sp + 0x13d0
  3240: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
  3244: 49 26 d0 00 05           u64 [s1 + 208] = 0x5
  3249: 95 17 20 14              a0 = sp + 0x1420
  3253: 95 18 38 14              a1 = sp + 0x1438
  3257: 50 10 3e d7 20           ra = 62, jump @648
      :                          @169 [@dyn 31]
  3262: 95 17 80 13              a0 = sp + 0x1380
  3266: 82 76 a8 00              s1 = u64 [a0 + 0xa8]
  3270: 82 7b b0 00              a4 = u64 [a0 + 0xb0]
  3274: 82 77 a0 00              a0 = u64 [a0 + 0xa0]
  3278: 7b 17 58                 u64 [sp + 0x58] = a0
  3281: 33 07 02                 a0 = 0x2
  3284: 33 08                    a1 = 0
  3286: 33 09                    a2 = 0
  3288: 64 6a                    a3 = s1
  3290: 33 00 40                 ra = 0x40
  3293: 0a 64                    ecalli 100 // 'log'
  3295: 01                       fallthrough
      :                          @170 [@dyn 32]
  3296: 82 1b 58                 a4 = u64 [sp + 0x58]
  3299: 82 17 80 00              a0 = u64 [sp + 0x80]
  3303: c8 b7 07                 a0 = a0 + a4
  3306: 53 27 00 f0 b3 fd        jump @149 if a0 <u 4294963200
      :                          @171
  3312: 82 57                    a0 = u64 [s0]
  3314: c9 75 08                 a1 = s0 - a0
  3317: ab 68 a8 fd              jump @149 if a1 != s1
      :                          @172
  3321: c9 b7 08                 a1 = a0 - a4
  3324: 01                       fallthrough
      :                          @173
  3325: 82 59                    a2 = u64 [s0]
  3327: ab 79 f1                 jump @171 if a2 != a0
      :                          @174
  3330: 7b 58                    u64 [s0] = a1
  3332: 33 0a                    a3 = 0
  3334: 01                       fallthrough
      :                          @175
  3335: ab 79 e9                 jump @171 if a2 != a0
      :                          @176
  3338: 28 93 fd                 jump @149
      :                          @177
  3341: 95 17 b4 13              a0 = sp + 0x13b4
  3345: 95 18 b8 13              a1 = sp + 0x13b8
  3349: 95 19 b0 13              a2 = sp + 0x13b0
  3353: 7b 69 50                 u64 [s1 + 0x50] = a2
  3356: 82 19 50                 a2 = u64 [sp + 0x50]
  3359: 7b 69 58                 u64 [s1 + 0x58] = a2
  3362: 7b 67 60                 u64 [s1 + 0x60] = a0
  3365: 7b 69 68                 u64 [s1 + 0x68] = a2
  3368: 7b 68 70                 u64 [s1 + 0x70] = a1
  3371: 7b 69 78                 u64 [s1 + 0x78] = a2
  3374: 33 07 88 07 01           a0 = 0x10788
  3379: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  3383: 49 26 c0 00 03           u64 [s1 + 192] = 0x3
  3388: 49 26 d8 00              u64 [s1 + 216] = 0
  3392: 95 18 d0 13              a1 = sp + 0x13d0
  3396: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
  3400: 49 26 d0 00 03           u64 [s1 + 208] = 0x3
  3405: 95 17 20 14              a0 = sp + 0x1420
  3409: 95 18 38 14              a1 = sp + 0x1438
  3413: 50 10 42 3b 20           ra = 66, jump @648
      :                          @178 [@dyn 33]
  3418: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  3422: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  3426: 95 17 80 13              a0 = sp + 0x1380
  3430: 82 76 a0 00              s1 = u64 [a0 + 0xa0]
  3434: 33 07 02                 a0 = 0x2
  3437: 33 08                    a1 = 0
  3439: 33 09                    a2 = 0
  3441: 64 5a                    a3 = s0
  3443: 33 00 44                 ra = 0x44
  3446: 0a 64                    ecalli 100 // 'log'
  3448: 01                       fallthrough
      :                          @179 [@dyn 34]
  3449: 82 17 80 00              a0 = u64 [sp + 0x80]
  3453: c8 67 07                 a0 = a0 + s1
  3456: 53 27 00 f0 21           jump @185 if a0 <u 4294963200
      :                          @180
  3461: 82 18 70                 a1 = u64 [sp + 0x70]
  3464: 95 87 00 10              a0 = a1 + 0x1000
  3468: 01                       fallthrough
      :                          @181
  3469: 82 78                    a1 = u64 [a0]
  3471: c9 87 09                 a2 = a0 - a1
  3474: ab 59 0f                 jump @185 if a2 != s0
      :                          @182
  3477: c9 68 09                 a2 = a1 - s1
  3480: 01                       fallthrough
      :                          @183
  3481: 82 7a                    a3 = u64 [a0]
  3483: ab 8a f2                 jump @181 if a3 != a1
      :                          @184
  3486: 7b 79                    u64 [a0] = a2
  3488: 01                       fallthrough
      :                          @185
  3489: 80 17 74 03              a0 = u32 [sp + 0x374]
  3493: 0a 1a                    ecalli 26 // 'expunge'
  3495: 0a                       ecalli 0 // 'gas'
  3496: 7b 17 f8 02              u64 [sp + 0x2f8] = a0
  3500: 95 17 74 03              a0 = sp + 0x374
  3504: 95 16 80 13              s1 = sp + 0x1380
  3508: 7b 67 50                 u64 [s1 + 0x50] = a0
  3511: 82 17 48                 a0 = u64 [sp + 0x48]
  3514: 7b 67 58                 u64 [s1 + 0x58] = a0
  3517: 82 17 40                 a0 = u64 [sp + 0x40]
  3520: 7b 67 60                 u64 [s1 + 0x60] = a0
  3523: 95 17 a8 13              a0 = sp + 0x13a8
  3527: 7b 67 70                 u64 [s1 + 0x70] = a0
  3530: 82 17 60                 a0 = u64 [sp + 0x60]
  3533: 7b 67 78                 u64 [s1 + 0x78] = a0
  3536: 95 17 f8 02              a0 = sp + 0x2f8
  3540: 7b 67 80 00              u64 [s1 + 0x80] = a0
  3544: 82 17 78                 a0 = u64 [sp + 0x78]
  3547: 7b 67 68                 u64 [s1 + 0x68] = a0
  3550: 7b 67 88 00              u64 [s1 + 0x88] = a0
  3554: 33 07 b8 07 01           a0 = 0x107b8
  3559: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  3563: 95 17 d0 13              a0 = sp + 0x13d0
  3567: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  3571: 49 26 c0 00 04           u64 [s1 + 192] = 0x4
  3576: 49 26 d0 00 04           u64 [s1 + 208] = 0x4
  3581: 49 26 d8 00              u64 [s1 + 216] = 0
  3585: 95 17 20 14              a0 = sp + 0x1420
  3589: 95 18 38 14              a1 = sp + 0x1438
  3593: 50 10 46 87 1f           ra = 70, jump @648
      :                          @186 [@dyn 35]
  3598: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  3602: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  3606: 82 66 a0 00              s1 = u64 [s1 + 0xa0]
  3610: 33 07 02                 a0 = 0x2
  3613: 33 08                    a1 = 0
  3615: 33 09                    a2 = 0
  3617: 64 5a                    a3 = s0
  3619: 33 00 48                 ra = 0x48
  3622: 0a 64                    ecalli 100 // 'log'
  3624: 01                       fallthrough
      :                          @187 [@dyn 36]
  3625: 82 17 80 00              a0 = u64 [sp + 0x80]
  3629: c8 67 07                 a0 = a0 + s1
  3632: 53 27 00 f0 2c           jump @193 if a0 <u 4294963200
      :                          @188
  3637: 82 18 70                 a1 = u64 [sp + 0x70]
  3640: 95 87 00 10              a0 = a1 + 0x1000
  3644: 01                       fallthrough
      :                          @189
  3645: 82 78                    a1 = u64 [a0]
  3647: c9 87 09                 a2 = a0 - a1
  3650: ab 59 1a                 jump @193 if a2 != s0
      :                          @190
  3653: c9 68 09                 a2 = a1 - s1
  3656: 01                       fallthrough
      :                          @191
  3657: 82 7a                    a3 = u64 [a0]
  3659: ab 8a f2                 jump @189 if a3 != a1
      :                          @192
  3662: 7b 79                    u64 [a0] = a2
  3664: 33 0b                    a4 = 0
  3666: 95 1a b0 13              a3 = sp + 0x13b0
  3670: 33 08 0c                 a1 = 0xc
  3673: 28 b0 f5                 jump @74
      :                          @193
  3676: 95 1a b0 13              a3 = sp + 0x13b0
  3680: 33 08 0c                 a1 = 0xc
  3683: 28 a6 f5                 jump @74
      :                          @194
  3686: 00                       trap
      :                          @195
  3687: 00                       trap
      :                          @196 [export #1: 'accumulate']
  3688: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  3692: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  3696: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  3700: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  3704: 95 11 c0 fb              sp = sp + 0xfffffffffffffbc0
  3708: 33 09 08                 a2 = 0x8
  3711: ac 98 08 01              jump @229 if a1 <u a2
      :                          @197
  3715: 52 07 06                 jump @199 if a0 != 0
      :                          @198
  3718: 28 cb 1c                 jump @586
      :                          @199
  3721: 95 79 04                 a2 = a0 + 0x4
  3724: 52 09 06                 jump @201 if a2 != 0
      :                          @200
  3727: 28 c3 1c                 jump @587
      :                          @201
  3730: 7c 79 04                 a2 = u8 [a0 + 0x4]
  3733: 7b 19 40                 u64 [sp + 0x40] = a2
  3736: 7c 79 05                 a2 = u8 [a0 + 0x5]
  3739: 7b 19 28                 u64 [sp + 0x28] = a2
  3742: 7c 79 06                 a2 = u8 [a0 + 0x6]
  3745: 7b 19 38                 u64 [sp + 0x38] = a2
  3748: 7c 79 07                 a2 = u8 [a0 + 0x7]
  3751: 7b 19 30                 u64 [sp + 0x30] = a2
  3754: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  3757: 95 75 08                 s0 = a0 + 0x8
  3760: 51 0a 45                 jump @211 if a3 == 0
      :                          @202
  3763: 7d 58                    a1 = i8 [s0]
  3765: 33 06 01                 s1 = 0x1
  3768: 59 08 40                 jump @212 if a1 >=s 0
      :                          @203
  3771: 84 89 ff 00              a2 = a1 & 0xff
  3775: 33 06 02                 s1 = 0x2
  3778: 53 29 c0 00 2d           jump @209 if a2 <u 192
      :                          @204
  3783: 33 06 03                 s1 = 0x3
  3786: 53 29 e0 00 25           jump @209 if a2 <u 224
      :                          @205
  3791: 33 06 04                 s1 = 0x4
  3794: 53 29 f0 00 1d           jump @209 if a2 <u 240
      :                          @206
  3799: 33 06 05                 s1 = 0x5
  3802: 53 29 f8 00 15           jump @209 if a2 <u 248
      :                          @207
  3807: 33 06 06                 s1 = 0x6
  3810: 53 29 fc 00 0d           jump @209 if a2 <u 252
      :                          @208
  3815: 88 98 fe 00              a1 = a2 <u 0xfe
  3819: 9a 86 08                 s1 = 0x8 - a1
  3822: 01                       fallthrough
      :                          @209
  3823: ae 6a 09                 jump @212 if a3 >=u s1
      :                          @210
  3826: 28 95 00                 jump @229
      :                          @211
  3829: 33 06                    s1 = 0
  3831: 01                       fallthrough
      :                          @212
  3832: 7b 16 48                 u64 [sp + 0x48] = s1
  3835: 64 57                    a0 = s0
  3837: 64 68                    a1 = s1
  3839: 64 a6                    s1 = a3
  3841: 50 10 4a 04 2e           ra = 74, jump @960
      :                          @213 [@dyn 37]
  3846: 82 1a 48                 a3 = u64 [sp + 0x48]
  3849: 51 07 7e                 jump @229 if a0 == 0
      :                          @214
  3852: e4 a6 07                 a0 = maxu(s1, a3)
  3855: c9 a7 07                 a0 = a0 - a3
  3858: 53 17 60 75              jump @229 if a0 <u 96
      :                          @215
  3862: c8 5a 08                 a1 = a3 + s0
  3865: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  3868: 95 87 60                 a0 = a1 + 0x60
  3871: 7b 17 48                 u64 [sp + 0x48] = a0
  3874: 51 06 4e                 jump @227 if s1 == 0
      :                          @216
  3877: 7d 78                    a1 = i8 [a0]
  3879: 33 05 01                 s0 = 0x1
  3882: 59 08 37                 jump @223 if a1 >=s 0
      :                          @217
  3885: 84 89 ff 00              a2 = a1 & 0xff
  3889: 33 05 02                 s0 = 0x2
  3892: 53 29 c0 00 2d           jump @223 if a2 <u 192
      :                          @218
  3897: 33 05 03                 s0 = 0x3
  3900: 53 29 e0 00 25           jump @223 if a2 <u 224
      :                          @219
  3905: 33 05 04                 s0 = 0x4
  3908: 53 29 f0 00 1d           jump @223 if a2 <u 240
      :                          @220
  3913: 33 05 05                 s0 = 0x5
  3916: 53 29 f8 00 15           jump @223 if a2 <u 248
      :                          @221
  3921: 33 05 06                 s0 = 0x6
  3924: 53 29 fc 00 0d           jump @223 if a2 <u 252
      :                          @222
  3929: 88 98 fe 00              a1 = a2 <u 0xfe
  3933: 9a 85 08                 s0 = 0x8 - a1
  3936: 01                       fallthrough
      :                          @223
  3937: ae 56 06                 jump @225 if s1 >=u s0
      :                          @224
  3940: 28 ef 1b                 jump @588
      :                          @225
  3943: 64 58                    a1 = s0
  3945: 50 10 4c 9c 2d           ra = 76, jump @960
      :                          @226 [@dyn 38]
  3950: 28 07                    jump @228
      :                          @227
  3952: 33 05                    s0 = 0
  3954: 33 07                    a0 = 0
  3956: 01                       fallthrough
      :                          @228
  3957: e4 56 08                 a1 = maxu(s1, s0)
  3960: c9 58 08                 a1 = a1 - s0
  3963: e4 78 08                 a1 = maxu(a1, a0)
  3966: c9 78 08                 a1 = a1 - a0
  3969: 33 09 21                 a2 = 0x21
  3972: ae 98 23                 jump @231 if a1 >=u a2
      :                          @229
  3975: 33 08                    a1 = 0
  3977: 33 05 00 00 01           s0 = 0x10000
  3982: 01                       fallthrough
      :                          @230
  3983: 64 57                    a0 = s0
  3985: 95 11 40 04              sp = sp + 0x440
  3989: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3993: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3997: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  4001: 95 11 f8 07              sp = sp + 0x7f8
  4005: 32 00                    ret
      :                          @231
  4007: 82 19 48                 a2 = u64 [sp + 0x48]
  4010: c8 95 05                 s0 = s0 + a2
  4013: c8 57 07                 a0 = a0 + s0
  4016: 7c 79 20                 a2 = u8 [a0 + 0x20]
  4019: 51 09 0a                 jump @233 if a2 == 0
      :                          @232
  4022: 33 06                    s1 = 0
  4024: 33 0a                    a3 = 0
  4026: 28 85 00                 jump @248
      :                          @233
  4029: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  4032: 95 75 21                 s0 = a0 + 0x21
  4035: 51 0a 56                 jump @245 if a3 == 0
      :                          @234
  4038: 7d 57                    a0 = i8 [s0]
  4040: 33 06 01                 s1 = 0x1
  4043: 59 07 37                 jump @241 if a0 >=s 0
      :                          @235
  4046: 84 77 ff 00              a0 = a0 & 0xff
  4050: 33 06 02                 s1 = 0x2
  4053: 53 27 c0 00 2d           jump @241 if a0 <u 192
      :                          @236
  4058: 33 06 03                 s1 = 0x3
  4061: 53 27 e0 00 25           jump @241 if a0 <u 224
      :                          @237
  4066: 33 06 04                 s1 = 0x4
  4069: 53 27 f0 00 1d           jump @241 if a0 <u 240
      :                          @238
  4074: 33 06 05                 s1 = 0x5
  4077: 53 27 f8 00 15           jump @241 if a0 <u 248
      :                          @239
  4082: 33 06 06                 s1 = 0x6
  4085: 53 27 fc 00 0d           jump @241 if a0 <u 252
      :                          @240
  4090: 88 77 fe 00              a0 = a0 <u 0xfe
  4094: 9a 76 08                 s1 = 0x8 - a0
  4097: 01                       fallthrough
      :                          @241
  4098: 7b 1a 48                 u64 [sp + 0x48] = a3
  4101: ae 6a 06                 jump @243 if a3 >=u s1
      :                          @242
  4104: 28 4d 1b                 jump @590
      :                          @243
  4107: 64 57                    a0 = s0
  4109: 64 68                    a1 = s1
  4111: 50 10 4e f6 2c           ra = 78, jump @960
      :                          @244 [@dyn 39]
  4116: 82 1a 48                 a3 = u64 [sp + 0x48]
  4119: 28 07                    jump @246
      :                          @245
  4121: 33 06                    s1 = 0
  4123: 33 07                    a0 = 0
  4125: 01                       fallthrough
      :                          @246
  4126: e4 6a 08                 a1 = maxu(a3, s1)
  4129: c9 68 08                 a1 = a1 - s1
  4132: e6 78 0a                 a3 = minu(a1, a0)
  4135: c8 56 06                 s1 = s1 + s0
  4138: 52 1a 24 15              jump @248 if a3 != 36
      :                          @247
  4142: 80 68 20                 a1 = u32 [s1 + 0x20]
  4145: 64 67                    a0 = s1
  4147: 0a 0e                    ecalli 14 // 'solicit'
  4149: 33 08                    a1 = 0
  4151: 33 05 00 00 01           s0 = 0x10000
  4156: 28 53 ff                 jump @230
      :                          @248
  4159: 82 17 28                 a0 = u64 [sp + 0x28]
  4162: 97 77 08                 a0 = a0 << 0x8
  4165: 82 18 40                 a1 = u64 [sp + 0x40]
  4168: d4 87 07                 a0 = a0 | a1
  4171: 82 18 38                 a1 = u64 [sp + 0x38]
  4174: 97 88 10                 a1 = a1 << 0x10
  4177: 82 19 30                 a2 = u64 [sp + 0x30]
  4180: 97 99 18                 a2 = a2 << 0x18
  4183: d4 98 08                 a1 = a1 | a2
  4186: d4 87 07                 a0 = a0 | a1
  4189: 7b 17 38                 u64 [sp + 0x38] = a0
  4192: 46 11 51                 u8 [sp + 81] = 0
  4195: 81 65                    s0 = i32 [s1]
  4197: 95 17 51                 a0 = sp + 0x51
  4200: 33 08 01                 a1 = 0x1
  4203: 7b 16 18                 u64 [sp + 0x18] = s1
  4206: 64 69                    a2 = s1
  4208: 7b 1a 20                 u64 [sp + 0x20] = a3
  4211: 0a 03                    ecalli 3 // 'write'
  4213: 46 11 52 6a              u8 [sp + 82] = 0x6a
  4217: 46 11 53 61              u8 [sp + 83] = 0x61
  4221: 46 11 54 6d              u8 [sp + 84] = 0x6d
  4225: 46 11 55 44              u8 [sp + 85] = 0x44
  4229: 46 11 56 4f              u8 [sp + 86] = 0x4f
  4233: 46 11 57 54              u8 [sp + 87] = 0x54
  4237: 46 11 58 6a              u8 [sp + 88] = 0x6a
  4241: 46 11 59 0d              u8 [sp + 89] = 0xd
  4245: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  4249: 46 11 5b 19              u8 [sp + 91] = 0x19
  4253: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  4258: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  4263: 46 11 5e 50              u8 [sp + 94] = 0x50
  4267: 46 11 5f 57              u8 [sp + 95] = 0x57
  4271: 46 11 60 13              u8 [sp + 96] = 0x13
  4275: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  4280: 46 11 62 65              u8 [sp + 98] = 0x65
  4284: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  4289: 46 11 64 31              u8 [sp + 100] = 0x31
  4293: 46 11 65 03              u8 [sp + 101] = 0x3
  4297: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  4302: 46 11 67 73              u8 [sp + 103] = 0x73
  4306: 33 0b f1 00              a4 = 0xf1
  4310: 78 1b 68                 u8 [sp + 0x68] = a4
  4313: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  4318: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  4323: 46 11 6b 64              u8 [sp + 107] = 0x64
  4327: 46 11 6c 56              u8 [sp + 108] = 0x56
  4331: 46 11 6d 32              u8 [sp + 109] = 0x32
  4335: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  4340: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  4345: 46 11 70 50              u8 [sp + 112] = 0x50
  4349: 33 0c 3c                 a5 = 0x3c
  4352: 78 1c 71                 u8 [sp + 0x71] = a5
  4355: 46 11 72 4f              u8 [sp + 114] = 0x4f
  4359: 46 11 73 0c              u8 [sp + 115] = 0xc
  4363: 46 11 74 4d              u8 [sp + 116] = 0x4d
  4367: 46 11 75 5e              u8 [sp + 117] = 0x5e
  4371: 46 11 76 19              u8 [sp + 118] = 0x19
  4375: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  4380: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  4385: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  4390: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  4395: 46 11 7b 0f              u8 [sp + 123] = 0xf
  4399: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  4404: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  4409: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  4414: 46 11 7f 47              u8 [sp + 127] = 0x47
  4418: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  4424: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  4429: 78 1c 82 00              u8 [sp + 0x82] = a5
  4433: 78 1b 83 00              u8 [sp + 0x83] = a4
  4437: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  4443: 95 16 ff 07              s1 = sp + 0x7ff
  4447: 95 66 99 03              s1 = s1 + 0x399
  4451: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  4456: 46 21 86 00 49           u8 [sp + 134] = 0x49
  4461: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  4467: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  4473: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  4479: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  4485: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  4491: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  4497: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  4502: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  4507: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  4512: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  4518: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  4524: 46 21 92 00 33           u8 [sp + 146] = 0x33
  4529: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  4534: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  4540: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  4546: 46 21 96 00 55           u8 [sp + 150] = 0x55
  4551: 46 21 97 00 07           u8 [sp + 151] = 0x7
  4556: 49 11 48 ff ef           u64 [sp + 72] = 0xffffffffffffefff
  4561: 95 17 98 00              a0 = sp + 0x98
  4565: 33 09 00 01              a2 = 0x100
  4569: 33 08                    a1 = 0
  4571: 50 10 50 dc 1e           ra = 80, jump @716
      :                          @249 [@dyn 40]
  4576: 7b 15 28                 u64 [sp + 0x28] = s0
  4579: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  4582: 33 05 48 00 01           s0 = 0x10048
  4587: 33 09 10                 a2 = 0x10
  4590: 7b 19 40                 u64 [sp + 0x40] = a2
  4593: 54 17 09 07              jump @251 if a0 <=u 9
      :                          @250
  4597: 28 8b 17                 jump @559
      :                          @251
  4600: 97 77 02                 a0 = a0 << 0x2
  4603: 33 08 00 00 01           a1 = 0x10000
  4608: c8 87 07                 a0 = a0 + a1
  4611: 81 77                    a0 = i32 [a0]
  4613: c8 87 07                 a0 = a0 + a1
  4616: 7b 15 30                 u64 [sp + 0x30] = s0
  4619: 32 07                    jump [a0]
      :                          @252 [@dyn 41]
  4621: 95 18 52                 a1 = sp + 0x52
  4624: 33 09 03                 a2 = 0x3
  4627: 95 1a 98 00              a3 = sp + 0x98
  4631: 33 0c 00 01              a5 = 0x100
  4635: 82 17 38                 a0 = u64 [sp + 0x38]
  4638: 33 0b                    a4 = 0
  4640: 0a 02                    ecalli 2 // 'read'
  4642: 7b 67 70                 u64 [s1 + 0x70] = a0
  4645: 33 07 50 00 01           a0 = 0x10050
  4650: 7b 17 10                 u64 [sp + 0x10] = a0
  4653: 7b 67 18                 u64 [s1 + 0x18] = a0
  4656: 82 18 40                 a1 = u64 [sp + 0x40]
  4659: 7b 68 20                 u64 [s1 + 0x20] = a1
  4662: 95 17 ff 07              a0 = sp + 0x7ff
  4666: 95 77 09 04              a0 = a0 + 0x409
  4670: 7b 67 28                 u64 [s1 + 0x28] = a0
  4673: 7b 68 30                 u64 [s1 + 0x30] = a1
  4676: 33 07 c8 08 01           a0 = 0x108c8
  4681: 7b 17 98 01              u64 [sp + 0x198] = a0
  4685: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4690: 49 21 b8 01              u64 [sp + 440] = 0
  4694: 95 17 ff 07              a0 = sp + 0x7ff
  4698: 95 77 b1 03              a0 = a0 + 0x3b1
  4702: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4706: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4711: 95 17 ff 07              a0 = sp + 0x7ff
  4715: 95 77 e1 03              a0 = a0 + 0x3e1
  4719: 95 18 98 01              a1 = sp + 0x198
  4723: 50 10 54 1d 1b           ra = 84, jump @648
      :                          @253 [@dyn 42]
  4728: 82 65 50                 s0 = u64 [s1 + 0x50]
  4731: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4734: 95 17 ff 07              a0 = sp + 0x7ff
  4738: 95 77 99 03              a0 = a0 + 0x399
  4742: 82 76 48                 s1 = u64 [a0 + 0x48]
  4745: 33 07 02                 a0 = 0x2
  4748: 33 08                    a1 = 0
  4750: 33 09                    a2 = 0
  4752: 64 5a                    a3 = s0
  4754: 33 00 56                 ra = 0x56
  4757: 0a 64                    ecalli 100 // 'log'
  4759: 01                       fallthrough
      :                          @254 [@dyn 43]
  4760: 82 17 48                 a0 = u64 [sp + 0x48]
  4763: c8 67 07                 a0 = a0 + s1
  4766: 53 27 00 f0 23           jump @260 if a0 <u 4294963200
      :                          @255
  4771: 33 07 20 00 03           a0 = 0x30020
  4776: 95 77 00 10              a0 = a0 + 0x1000
  4780: 01                       fallthrough
      :                          @256
  4781: 82 78                    a1 = u64 [a0]
  4783: c9 87 09                 a2 = a0 - a1
  4786: ab 59 0f                 jump @260 if a2 != s0
      :                          @257
  4789: c9 68 09                 a2 = a1 - s1
  4792: 01                       fallthrough
      :                          @258
  4793: 82 7a                    a3 = u64 [a0]
  4795: ab 8a f2                 jump @256 if a3 != a1
      :                          @259
  4798: 7b 79                    u64 [a0] = a2
  4800: 01                       fallthrough
      :                          @260
  4801: 95 16 ff 07              s1 = sp + 0x7ff
  4805: 95 66 99 03              s1 = s1 + 0x399
  4809: 82 67 70                 a0 = u64 [s1 + 0x70]
  4812: 33 08 01                 a1 = 0x1
  4815: 50 10 58 d4 2a           ra = 88, jump @984
      :                          @261 [@dyn 44]
  4820: 95 17 52                 a0 = sp + 0x52
  4823: 33 08 03                 a1 = 0x3
  4826: 95 19 55                 a2 = sp + 0x55
  4829: 33 0a 03                 a3 = 0x3
  4832: 0a 03                    ecalli 3 // 'write'
  4834: 7b 67 78                 u64 [s1 + 0x78] = a0
  4837: 82 17 10                 a0 = u64 [sp + 0x10]
  4840: 7b 67 18                 u64 [s1 + 0x18] = a0
  4843: 95 17 ff 07              a0 = sp + 0x7ff
  4847: 95 77 11 04              a0 = a0 + 0x411
  4851: 7b 67 28                 u64 [s1 + 0x28] = a0
  4854: 33 07 f8 08 01           a0 = 0x108f8
  4859: 7b 17 98 01              u64 [sp + 0x198] = a0
  4863: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4868: 49 21 b8 01              u64 [sp + 440] = 0
  4872: 95 17 ff 07              a0 = sp + 0x7ff
  4876: 95 77 b1 03              a0 = a0 + 0x3b1
  4880: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4884: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4889: 82 17 40                 a0 = u64 [sp + 0x40]
  4892: 7b 67 20                 u64 [s1 + 0x20] = a0
  4895: 7b 67 30                 u64 [s1 + 0x30] = a0
  4898: 95 17 ff 07              a0 = sp + 0x7ff
  4902: 95 77 e1 03              a0 = a0 + 0x3e1
  4906: 95 18 98 01              a1 = sp + 0x198
  4910: 50 10 5a 62 1a           ra = 90, jump @648
      :                          @262 [@dyn 45]
  4915: 82 65 50                 s0 = u64 [s1 + 0x50]
  4918: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4921: 82 66 48                 s1 = u64 [s1 + 0x48]
  4924: 33 07 02                 a0 = 0x2
  4927: 33 08                    a1 = 0
  4929: 33 09                    a2 = 0
  4931: 64 5a                    a3 = s0
  4933: 33 00 5c                 ra = 0x5c
  4936: 0a 64                    ecalli 100 // 'log'
  4938: 01                       fallthrough
      :                          @263 [@dyn 46]
  4939: 82 17 48                 a0 = u64 [sp + 0x48]
  4942: c8 67 07                 a0 = a0 + s1
  4945: 53 27 00 f0 23           jump @269 if a0 <u 4294963200
      :                          @264
  4950: 33 07 20 00 03           a0 = 0x30020
  4955: 95 77 00 10              a0 = a0 + 0x1000
  4959: 01                       fallthrough
      :                          @265
  4960: 82 78                    a1 = u64 [a0]
  4962: c9 87 09                 a2 = a0 - a1
  4965: ab 59 0f                 jump @269 if a2 != s0
      :                          @266
  4968: c9 68 09                 a2 = a1 - s1
  4971: 01                       fallthrough
      :                          @267
  4972: 82 7a                    a3 = u64 [a0]
  4974: ab 8a f2                 jump @265 if a3 != a1
      :                          @268
  4977: 7b 79                    u64 [a0] = a2
  4979: 01                       fallthrough
      :                          @269
  4980: 95 16 ff 07              s1 = sp + 0x7ff
  4984: 95 66 99 03              s1 = s1 + 0x399
  4988: 82 67 78                 a0 = u64 [s1 + 0x78]
  4991: 33 08 02                 a1 = 0x2
  4994: 33 05 02                 s0 = 0x2
  4997: 50 10 5e 1e 2a           ra = 94, jump @984
      :                          @270 [@dyn 47]
  5002: 95 18 52                 a1 = sp + 0x52
  5005: 33 09 03                 a2 = 0x3
  5008: 95 1a 98 00              a3 = sp + 0x98
  5012: 33 0c 00 01              a5 = 0x100
  5016: 82 17 38                 a0 = u64 [sp + 0x38]
  5019: 33 0b                    a4 = 0
  5021: 0a 02                    ecalli 2 // 'read'
  5023: 7b 67 80 00              u64 [s1 + 0x80] = a0
  5027: 82 17 30                 a0 = u64 [sp + 0x30]
  5030: 7b 67 18                 u64 [s1 + 0x18] = a0
  5033: 82 18 40                 a1 = u64 [sp + 0x40]
  5036: 7b 68 20                 u64 [s1 + 0x20] = a1
  5039: 95 17 ff 07              a0 = sp + 0x7ff
  5043: 95 77 19 04              a0 = a0 + 0x419
  5047: 7b 67 28                 u64 [s1 + 0x28] = a0
  5050: 7b 68 30                 u64 [s1 + 0x30] = a1
  5053: 33 07 28 09 01           a0 = 0x10928
  5058: 7b 17 98 01              u64 [sp + 0x198] = a0
  5062: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5067: 49 21 b8 01              u64 [sp + 440] = 0
  5071: 95 17 ff 07              a0 = sp + 0x7ff
  5075: 95 77 b1 03              a0 = a0 + 0x3b1
  5079: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5083: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  5087: 95 17 ff 07              a0 = sp + 0x7ff
  5091: 95 77 e1 03              a0 = a0 + 0x3e1
  5095: 95 18 98 01              a1 = sp + 0x198
  5099: 50 10 60 a5 19           ra = 96, jump @648
      :                          @271 [@dyn 48]
  5104: 82 65 50                 s0 = u64 [s1 + 0x50]
  5107: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5110: 82 66 48                 s1 = u64 [s1 + 0x48]
  5113: 33 07 02                 a0 = 0x2
  5116: 33 08                    a1 = 0
  5118: 33 09                    a2 = 0
  5120: 64 5a                    a3 = s0
  5122: 33 00 62                 ra = 0x62
  5125: 0a 64                    ecalli 100 // 'log'
  5127: 01                       fallthrough
      :                          @272 [@dyn 49]
  5128: 82 17 48                 a0 = u64 [sp + 0x48]
  5131: c8 67 07                 a0 = a0 + s1
  5134: 53 27 00 f0 23           jump @278 if a0 <u 4294963200
      :                          @273
  5139: 33 07 20 00 03           a0 = 0x30020
  5144: 95 77 00 10              a0 = a0 + 0x1000
  5148: 01                       fallthrough
      :                          @274
  5149: 82 78                    a1 = u64 [a0]
  5151: c9 87 09                 a2 = a0 - a1
  5154: ab 59 0f                 jump @278 if a2 != s0
      :                          @275
  5157: c9 68 09                 a2 = a1 - s1
  5160: 01                       fallthrough
      :                          @276
  5161: 82 7a                    a3 = u64 [a0]
  5163: ab 8a f2                 jump @274 if a3 != a1
      :                          @277
  5166: 7b 79                    u64 [a0] = a2
  5168: 01                       fallthrough
      :                          @278
  5169: 95 16 ff 07              s1 = sp + 0x7ff
  5173: 95 66 99 03              s1 = s1 + 0x399
  5177: 82 67 80 00              a0 = u64 [s1 + 0x80]
  5181: 33 08 05                 a1 = 0x5
  5184: 50 10 64 63 29           ra = 100, jump @984
      :                          @279 [@dyn 50]
  5189: 95 17 52                 a0 = sp + 0x52
  5192: 33 08                    a1 = 0
  5194: 0a 0f                    ecalli 15 // 'forget'
  5196: 7b 67                    u64 [s1] = a0
  5198: 33 07 60 00 01           a0 = 0x10060
  5203: 7b 67 18                 u64 [s1 + 0x18] = a0
  5206: 33 07 58 09 01           a0 = 0x10958
  5211: 7b 17 98 01              u64 [sp + 0x198] = a0
  5215: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5220: 49 21 b8 01              u64 [sp + 440] = 0
  5224: 95 17 ff 07              a0 = sp + 0x7ff
  5228: 95 77 b1 03              a0 = a0 + 0x3b1
  5232: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5236: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5241: 82 17 40                 a0 = u64 [sp + 0x40]
  5244: 7b 67 20                 u64 [s1 + 0x20] = a0
  5247: 7b 66 28                 u64 [s1 + 0x28] = s1
  5250: 7b 67 30                 u64 [s1 + 0x30] = a0
  5253: 95 17 ff 07              a0 = sp + 0x7ff
  5257: 95 77 e1 03              a0 = a0 + 0x3e1
  5261: 95 18 98 01              a1 = sp + 0x198
  5265: 50 10 66 ff 18           ra = 102, jump @648
      :                          @280 [@dyn 51]
  5270: 82 65 50                 s0 = u64 [s1 + 0x50]
  5273: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5276: 82 66 48                 s1 = u64 [s1 + 0x48]
  5279: 33 07 02                 a0 = 0x2
  5282: 33 08                    a1 = 0
  5284: 33 09                    a2 = 0
  5286: 64 5a                    a3 = s0
  5288: 33 00 68                 ra = 0x68
  5291: 0a 64                    ecalli 100 // 'log'
  5293: 01                       fallthrough
      :                          @281 [@dyn 52]
  5294: 82 17 48                 a0 = u64 [sp + 0x48]
  5297: c8 67 07                 a0 = a0 + s1
  5300: 53 27 00 f0 d9 09        jump @416 if a0 <u 4294963200
      :                          @282
  5306: 33 07 20 00 03           a0 = 0x30020
  5311: 95 77 00 10              a0 = a0 + 0x1000
  5315: 01                       fallthrough
      :                          @283
  5316: 82 78                    a1 = u64 [a0]
  5318: c9 87 09                 a2 = a0 - a1
  5321: ab 59 c4 09              jump @416 if a2 != s0
      :                          @284
  5325: c9 68 09                 a2 = a1 - s1
  5328: 01                       fallthrough
      :                          @285
  5329: 82 7a                    a3 = u64 [a0]
  5331: ab 8a f1                 jump @283 if a3 != a1
      :                          @286
  5334: 7b 79                    u64 [a0] = a2
  5336: 33 0b                    a4 = 0
  5338: 01                       fallthrough
      :                          @287
  5339: ab 8a e9                 jump @283 if a3 != a1
      :                          @288
  5342: 28 af 09                 jump @416
      :                          @289 [@dyn 53]
  5345: 95 18 52                 a1 = sp + 0x52
  5348: 33 09 03                 a2 = 0x3
  5351: 95 1a 98 00              a3 = sp + 0x98
  5355: 33 0c 00 01              a5 = 0x100
  5359: 82 17 38                 a0 = u64 [sp + 0x38]
  5362: 33 0b                    a4 = 0
  5364: 0a 02                    ecalli 2 // 'read'
  5366: 7b 67 78                 u64 [s1 + 0x78] = a0
  5369: 7b 65 18                 u64 [s1 + 0x18] = s0
  5372: 82 18 40                 a1 = u64 [sp + 0x40]
  5375: 7b 68 20                 u64 [s1 + 0x20] = a1
  5378: 95 17 ff 07              a0 = sp + 0x7ff
  5382: 95 77 11 04              a0 = a0 + 0x411
  5386: 7b 67 28                 u64 [s1 + 0x28] = a0
  5389: 7b 68 30                 u64 [s1 + 0x30] = a1
  5392: 33 07 88 09 01           a0 = 0x10988
  5397: 7b 17 98 01              u64 [sp + 0x198] = a0
  5401: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5406: 49 21 b8 01              u64 [sp + 440] = 0
  5410: 95 17 ff 07              a0 = sp + 0x7ff
  5414: 95 77 b1 03              a0 = a0 + 0x3b1
  5418: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5422: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5427: 95 17 ff 07              a0 = sp + 0x7ff
  5431: 95 77 e1 03              a0 = a0 + 0x3e1
  5435: 95 18 98 01              a1 = sp + 0x198
  5439: 50 10 6c 51 18           ra = 108, jump @648
      :                          @290 [@dyn 54]
  5444: 82 65 50                 s0 = u64 [s1 + 0x50]
  5447: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5450: 95 17 ff 07              a0 = sp + 0x7ff
  5454: 95 77 99 03              a0 = a0 + 0x399
  5458: 82 76 48                 s1 = u64 [a0 + 0x48]
  5461: 33 07 02                 a0 = 0x2
  5464: 33 08                    a1 = 0
  5466: 33 09                    a2 = 0
  5468: 64 5a                    a3 = s0
  5470: 33 00 6e                 ra = 0x6e
  5473: 0a 64                    ecalli 100 // 'log'
  5475: 01                       fallthrough
      :                          @291 [@dyn 55]
  5476: 82 17 48                 a0 = u64 [sp + 0x48]
  5479: c8 67 07                 a0 = a0 + s1
  5482: 53 27 00 f0 23           jump @297 if a0 <u 4294963200
      :                          @292
  5487: 33 07 20 00 03           a0 = 0x30020
  5492: 95 77 00 10              a0 = a0 + 0x1000
  5496: 01                       fallthrough
      :                          @293
  5497: 82 78                    a1 = u64 [a0]
  5499: c9 87 09                 a2 = a0 - a1
  5502: ab 59 0f                 jump @297 if a2 != s0
      :                          @294
  5505: c9 68 09                 a2 = a1 - s1
  5508: 01                       fallthrough
      :                          @295
  5509: 82 7a                    a3 = u64 [a0]
  5511: ab 8a f2                 jump @293 if a3 != a1
      :                          @296
  5514: 7b 79                    u64 [a0] = a2
  5516: 01                       fallthrough
      :                          @297
  5517: 95 16 ff 07              s1 = sp + 0x7ff
  5521: 95 66 99 03              s1 = s1 + 0x399
  5525: 82 67 78                 a0 = u64 [s1 + 0x78]
  5528: 33 08 01                 a1 = 0x1
  5531: 50 10 70 08 28           ra = 112, jump @984
      :                          @298 [@dyn 56]
  5536: 95 17 52                 a0 = sp + 0x52
  5539: 33 08 03                 a1 = 0x3
  5542: 33 09                    a2 = 0
  5544: 33 0a                    a3 = 0
  5546: 0a 03                    ecalli 3 // 'write'
  5548: 7b 67 80 00              u64 [s1 + 0x80] = a0
  5552: 95 17 ff 07              a0 = sp + 0x7ff
  5556: 95 77 19 04              a0 = a0 + 0x419
  5560: 7b 67 28                 u64 [s1 + 0x28] = a0
  5563: 33 07 b8 09 01           a0 = 0x109b8
  5568: 7b 17 98 01              u64 [sp + 0x198] = a0
  5572: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5577: 49 21 b8 01              u64 [sp + 440] = 0
  5581: 95 17 ff 07              a0 = sp + 0x7ff
  5585: 95 77 b1 03              a0 = a0 + 0x3b1
  5589: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5593: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5598: 82 17 30                 a0 = u64 [sp + 0x30]
  5601: 7b 67 18                 u64 [s1 + 0x18] = a0
  5604: 82 17 40                 a0 = u64 [sp + 0x40]
  5607: 7b 67 20                 u64 [s1 + 0x20] = a0
  5610: 7b 67 30                 u64 [s1 + 0x30] = a0
  5613: 95 17 ff 07              a0 = sp + 0x7ff
  5617: 95 77 e1 03              a0 = a0 + 0x3e1
  5621: 95 18 98 01              a1 = sp + 0x198
  5625: 50 10 72 97 17           ra = 114, jump @648
      :                          @299 [@dyn 57]
  5630: 82 65 50                 s0 = u64 [s1 + 0x50]
  5633: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5636: 82 66 48                 s1 = u64 [s1 + 0x48]
  5639: 33 07 02                 a0 = 0x2
  5642: 33 08                    a1 = 0
  5644: 33 09                    a2 = 0
  5646: 64 5a                    a3 = s0
  5648: 33 00 74                 ra = 0x74
  5651: 0a 64                    ecalli 100 // 'log'
  5653: 01                       fallthrough
      :                          @300 [@dyn 58]
  5654: 82 17 48                 a0 = u64 [sp + 0x48]
  5657: c8 67 07                 a0 = a0 + s1
  5660: 53 27 00 f0 23           jump @306 if a0 <u 4294963200
      :                          @301
  5665: 33 07 20 00 03           a0 = 0x30020
  5670: 95 77 00 10              a0 = a0 + 0x1000
  5674: 01                       fallthrough
      :                          @302
  5675: 82 78                    a1 = u64 [a0]
  5677: c9 87 09                 a2 = a0 - a1
  5680: ab 59 0f                 jump @306 if a2 != s0
      :                          @303
  5683: c9 68 09                 a2 = a1 - s1
  5686: 01                       fallthrough
      :                          @304
  5687: 82 7a                    a3 = u64 [a0]
  5689: ab 8a f2                 jump @302 if a3 != a1
      :                          @305
  5692: 7b 79                    u64 [a0] = a2
  5694: 01                       fallthrough
      :                          @306
  5695: 95 16 ff 07              s1 = sp + 0x7ff
  5699: 95 66 99 03              s1 = s1 + 0x399
  5703: 82 67 80 00              a0 = u64 [s1 + 0x80]
  5707: 33 08 02                 a1 = 0x2
  5710: 33 05 02                 s0 = 0x2
  5713: 50 10 76 52 27           ra = 118, jump @984
      :                          @307 [@dyn 59]
  5718: 95 18 52                 a1 = sp + 0x52
  5721: 33 09 03                 a2 = 0x3
  5724: 95 1a 98 00              a3 = sp + 0x98
  5728: 33 0c 00 01              a5 = 0x100
  5732: 82 17 38                 a0 = u64 [sp + 0x38]
  5735: 33 0b                    a4 = 0
  5737: 0a 02                    ecalli 2 // 'read'
  5739: 7b 67                    u64 [s1] = a0
  5741: 33 07 50 00 01           a0 = 0x10050
  5746: 7b 67 18                 u64 [s1 + 0x18] = a0
  5749: 33 07 e8 09 01           a0 = 0x109e8
  5754: 7b 17 98 01              u64 [sp + 0x198] = a0
  5758: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5763: 49 21 b8 01              u64 [sp + 440] = 0
  5767: 95 17 ff 07              a0 = sp + 0x7ff
  5771: 95 77 b1 03              a0 = a0 + 0x3b1
  5775: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5779: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  5783: 82 17 40                 a0 = u64 [sp + 0x40]
  5786: 7b 67 20                 u64 [s1 + 0x20] = a0
  5789: 7b 66 28                 u64 [s1 + 0x28] = s1
  5792: 7b 67 30                 u64 [s1 + 0x30] = a0
  5795: 95 17 ff 07              a0 = sp + 0x7ff
  5799: 95 77 e1 03              a0 = a0 + 0x3e1
  5803: 95 18 98 01              a1 = sp + 0x198
  5807: 50 10 78 e1 16           ra = 120, jump @648
      :                          @308 [@dyn 60]
  5812: 82 65 50                 s0 = u64 [s1 + 0x50]
  5815: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5818: 82 66 48                 s1 = u64 [s1 + 0x48]
  5821: 33 07 02                 a0 = 0x2
  5824: 33 08                    a1 = 0
  5826: 33 09                    a2 = 0
  5828: 64 5a                    a3 = s0
  5830: 33 00 7a                 ra = 0x7a
  5833: 0a 64                    ecalli 100 // 'log'
  5835: 01                       fallthrough
      :                          @309 [@dyn 61]
  5836: 82 17 48                 a0 = u64 [sp + 0x48]
  5839: c8 67 07                 a0 = a0 + s1
  5842: 53 27 00 f0 23 02        jump @343 if a0 <u 4294963200
      :                          @310
  5848: 33 07 20 00 03           a0 = 0x30020
  5853: 95 77 00 10              a0 = a0 + 0x1000
  5857: 01                       fallthrough
      :                          @311
  5858: 82 78                    a1 = u64 [a0]
  5860: c9 87 09                 a2 = a0 - a1
  5863: ab 59 0e 02              jump @343 if a2 != s0
      :                          @312
  5867: c9 68 09                 a2 = a1 - s1
  5870: 01                       fallthrough
      :                          @313
  5871: 82 7a                    a3 = u64 [a0]
  5873: ab 8a f1                 jump @311 if a3 != a1
      :                          @314
  5876: 7b 79                    u64 [a0] = a2
  5878: 33 0b                    a4 = 0
  5880: 01                       fallthrough
      :                          @315
  5881: ab 8a e9                 jump @311 if a3 != a1
      :                          @316
  5884: 28 f9 01                 jump @343
      :                          @317 [@dyn 62]
  5887: 95 17 58                 a0 = sp + 0x58
  5890: 33 08 03                 a1 = 0x3
  5893: 0a 0e                    ecalli 14 // 'solicit'
  5895: 7b 67 78                 u64 [s1 + 0x78] = a0
  5898: 95 17 ff 07              a0 = sp + 0x7ff
  5902: 95 77 11 04              a0 = a0 + 0x411
  5906: 7b 67 28                 u64 [s1 + 0x28] = a0
  5909: 33 07 18 0a 01           a0 = 0x10a18
  5914: 7b 17 98 01              u64 [sp + 0x198] = a0
  5918: 7b 65 18                 u64 [s1 + 0x18] = s0
  5921: 82 18 40                 a1 = u64 [sp + 0x40]
  5924: 7b 68 20                 u64 [s1 + 0x20] = a1
  5927: 7b 68 30                 u64 [s1 + 0x30] = a1
  5930: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5935: 49 21 b8 01              u64 [sp + 440] = 0
  5939: 95 17 ff 07              a0 = sp + 0x7ff
  5943: 95 77 b1 03              a0 = a0 + 0x3b1
  5947: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5951: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5956: 95 17 ff 07              a0 = sp + 0x7ff
  5960: 95 77 e1 03              a0 = a0 + 0x3e1
  5964: 95 18 98 01              a1 = sp + 0x198
  5968: 50 10 7e 40 16           ra = 126, jump @648
      :                          @318 [@dyn 63]
  5973: 82 65 50                 s0 = u64 [s1 + 0x50]
  5976: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5979: 95 17 ff 07              a0 = sp + 0x7ff
  5983: 95 77 99 03              a0 = a0 + 0x399
  5987: 82 76 48                 s1 = u64 [a0 + 0x48]
  5990: 33 07 02                 a0 = 0x2
  5993: 33 08                    a1 = 0
  5995: 33 09                    a2 = 0
  5997: 64 5a                    a3 = s0
  5999: 33 00 80 00              ra = 0x80
  6003: 0a 64                    ecalli 100 // 'log'
  6005: 01                       fallthrough
      :                          @319 [@dyn 64]
  6006: 82 17 48                 a0 = u64 [sp + 0x48]
  6009: c8 67 07                 a0 = a0 + s1
  6012: 53 27 00 f0 23           jump @325 if a0 <u 4294963200
      :                          @320
  6017: 33 07 20 00 03           a0 = 0x30020
  6022: 95 77 00 10              a0 = a0 + 0x1000
  6026: 01                       fallthrough
      :                          @321
  6027: 82 78                    a1 = u64 [a0]
  6029: c9 87 09                 a2 = a0 - a1
  6032: ab 59 0f                 jump @325 if a2 != s0
      :                          @322
  6035: c9 68 09                 a2 = a1 - s1
  6038: 01                       fallthrough
      :                          @323
  6039: 82 7a                    a3 = u64 [a0]
  6041: ab 8a f2                 jump @321 if a3 != a1
      :                          @324
  6044: 7b 79                    u64 [a0] = a2
  6046: 01                       fallthrough
      :                          @325
  6047: 95 16 ff 07              s1 = sp + 0x7ff
  6051: 95 66 99 03              s1 = s1 + 0x399
  6055: 82 67 78                 a0 = u64 [s1 + 0x78]
  6058: 33 08 01                 a1 = 0x1
  6061: 33 05 01                 s0 = 0x1
  6064: 50 20 82 00 f3 25        ra = 130, jump @984
      :                          @326 [@dyn 65]
  6070: 95 17 58                 a0 = sp + 0x58
  6073: 33 08 03                 a1 = 0x3
  6076: 0a 0d                    ecalli 13 // 'query'
  6078: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6082: 95 17 ff 07              a0 = sp + 0x7ff
  6086: 95 77 19 04              a0 = a0 + 0x419
  6090: 7b 67 48                 u64 [s1 + 0x48] = a0
  6093: 33 07 48 0a 01           a0 = 0x10a48
  6098: 7b 17 98 01              u64 [sp + 0x198] = a0
  6102: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  6107: 49 21 b8 01              u64 [sp + 440] = 0
  6111: 95 17 ff 07              a0 = sp + 0x7ff
  6115: 95 77 e1 03              a0 = a0 + 0x3e1
  6119: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6123: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6127: 82 17 40                 a0 = u64 [sp + 0x40]
  6130: 7b 67 50                 u64 [s1 + 0x50] = a0
  6133: 95 17 ff 07              a0 = sp + 0x7ff
  6137: 95 77 b1 03              a0 = a0 + 0x3b1
  6141: 95 18 98 01              a1 = sp + 0x198
  6145: 50 20 84 00 8f 15        ra = 132, jump @648
      :                          @327 [@dyn 66]
  6151: 82 65 20                 s0 = u64 [s1 + 0x20]
  6154: 82 6b 28                 a4 = u64 [s1 + 0x28]
  6157: 82 66 18                 s1 = u64 [s1 + 0x18]
  6160: 33 07 02                 a0 = 0x2
  6163: 33 08                    a1 = 0
  6165: 33 09                    a2 = 0
  6167: 64 5a                    a3 = s0
  6169: 33 00 86 00              ra = 0x86
  6173: 0a 64                    ecalli 100 // 'log'
  6175: 01                       fallthrough
      :                          @328 [@dyn 67]
  6176: 82 17 48                 a0 = u64 [sp + 0x48]
  6179: c8 67 07                 a0 = a0 + s1
  6182: 53 27 00 f0 23           jump @334 if a0 <u 4294963200
      :                          @329
  6187: 33 07 20 00 03           a0 = 0x30020
  6192: 95 77 00 10              a0 = a0 + 0x1000
  6196: 01                       fallthrough
      :                          @330
  6197: 82 78                    a1 = u64 [a0]
  6199: c9 87 09                 a2 = a0 - a1
  6202: ab 59 0f                 jump @334 if a2 != s0
      :                          @331
  6205: c9 68 09                 a2 = a1 - s1
  6208: 01                       fallthrough
      :                          @332
  6209: 82 7a                    a3 = u64 [a0]
  6211: ab 8a f2                 jump @330 if a3 != a1
      :                          @333
  6214: 7b 79                    u64 [a0] = a2
  6216: 01                       fallthrough
      :                          @334
  6217: 95 16 ff 07              s1 = sp + 0x7ff
  6221: 95 66 99 03              s1 = s1 + 0x399
  6225: 82 67 80 00              a0 = u64 [s1 + 0x80]
  6229: 33 08 02                 a1 = 0x2
  6232: 33 05 02                 s0 = 0x2
  6235: 50 20 88 00 48 25        ra = 136, jump @984
      :                          @335 [@dyn 68]
  6241: 95 17 78                 a0 = sp + 0x78
  6244: 33 08 03                 a1 = 0x3
  6247: 0a 0d                    ecalli 13 // 'query'
  6249: 7b 67                    u64 [s1] = a0
  6251: 33 07 50 00 01           a0 = 0x10050
  6256: 7b 67 18                 u64 [s1 + 0x18] = a0
  6259: 33 07 68 0a 01           a0 = 0x10a68
  6264: 7b 17 98 01              u64 [sp + 0x198] = a0
  6268: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6273: 49 21 b8 01              u64 [sp + 440] = 0
  6277: 95 17 ff 07              a0 = sp + 0x7ff
  6281: 95 77 b1 03              a0 = a0 + 0x3b1
  6285: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6289: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6293: 82 17 40                 a0 = u64 [sp + 0x40]
  6296: 7b 67 20                 u64 [s1 + 0x20] = a0
  6299: 7b 66 28                 u64 [s1 + 0x28] = s1
  6302: 7b 67 30                 u64 [s1 + 0x30] = a0
  6305: 95 17 ff 07              a0 = sp + 0x7ff
  6309: 95 77 e1 03              a0 = a0 + 0x3e1
  6313: 95 18 98 01              a1 = sp + 0x198
  6317: 50 20 8a 00 e3 14        ra = 138, jump @648
      :                          @336 [@dyn 69]
  6323: 82 65 50                 s0 = u64 [s1 + 0x50]
  6326: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6329: 82 66 48                 s1 = u64 [s1 + 0x48]
  6332: 33 07 02                 a0 = 0x2
  6335: 33 08                    a1 = 0
  6337: 33 09                    a2 = 0
  6339: 64 5a                    a3 = s0
  6341: 33 00 8c 00              ra = 0x8c
  6345: 0a 64                    ecalli 100 // 'log'
  6347: 01                       fallthrough
      :                          @337 [@dyn 70]
  6348: 82 17 48                 a0 = u64 [sp + 0x48]
  6351: c8 67 07                 a0 = a0 + s1
  6354: 53 27 00 f0 23           jump @343 if a0 <u 4294963200
      :                          @338
  6359: 33 07 20 00 03           a0 = 0x30020
  6364: 95 77 00 10              a0 = a0 + 0x1000
  6368: 01                       fallthrough
      :                          @339
  6369: 82 78                    a1 = u64 [a0]
  6371: c9 87 09                 a2 = a0 - a1
  6374: ab 59 0f                 jump @343 if a2 != s0
      :                          @340
  6377: c9 68 09                 a2 = a1 - s1
  6380: 01                       fallthrough
      :                          @341
  6381: 82 7a                    a3 = u64 [a0]
  6383: ab 8a f2                 jump @339 if a3 != a1
      :                          @342
  6386: 7b 79                    u64 [a0] = a2
  6388: 01                       fallthrough
      :                          @343
  6389: 95 16 ff 07              s1 = sp + 0x7ff
  6393: 95 66 99 03              s1 = s1 + 0x399
  6397: 82 67                    a0 = u64 [s1]
  6399: 33 08 05                 a1 = 0x5
  6402: 33 00 1c 01              ra = 0x11c
  6406: 28 9d 24                 jump @984
      :                          @344 [@dyn 71]
  6409: 95 17 58                 a0 = sp + 0x58
  6412: 33 08 03                 a1 = 0x3
  6415: 0a 0f                    ecalli 15 // 'forget'
  6417: 7b 67 70                 u64 [s1 + 0x70] = a0
  6420: 95 17 ff 07              a0 = sp + 0x7ff
  6424: 95 77 09 04              a0 = a0 + 0x409
  6428: 7b 67 28                 u64 [s1 + 0x28] = a0
  6431: 33 07 98 0a 01           a0 = 0x10a98
  6436: 7b 17 98 01              u64 [sp + 0x198] = a0
  6440: 7b 65 18                 u64 [s1 + 0x18] = s0
  6443: 82 18 40                 a1 = u64 [sp + 0x40]
  6446: 7b 68 20                 u64 [s1 + 0x20] = a1
  6449: 7b 68 30                 u64 [s1 + 0x30] = a1
  6452: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6457: 49 21 b8 01              u64 [sp + 440] = 0
  6461: 95 17 ff 07              a0 = sp + 0x7ff
  6465: 95 77 b1 03              a0 = a0 + 0x3b1
  6469: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6473: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6478: 95 17 ff 07              a0 = sp + 0x7ff
  6482: 95 77 e1 03              a0 = a0 + 0x3e1
  6486: 95 18 98 01              a1 = sp + 0x198
  6490: 50 20 90 00 36 14        ra = 144, jump @648
      :                          @345 [@dyn 72]
  6496: 82 65 50                 s0 = u64 [s1 + 0x50]
  6499: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6502: 95 17 ff 07              a0 = sp + 0x7ff
  6506: 95 77 99 03              a0 = a0 + 0x399
  6510: 82 76 48                 s1 = u64 [a0 + 0x48]
  6513: 33 07 02                 a0 = 0x2
  6516: 33 08                    a1 = 0
  6518: 33 09                    a2 = 0
  6520: 64 5a                    a3 = s0
  6522: 33 00 92 00              ra = 0x92
  6526: 0a 64                    ecalli 100 // 'log'
  6528: 01                       fallthrough
      :                          @346 [@dyn 73]
  6529: 82 17 48                 a0 = u64 [sp + 0x48]
  6532: c8 67 07                 a0 = a0 + s1
  6535: 53 27 00 f0 23           jump @352 if a0 <u 4294963200
      :                          @347
  6540: 33 07 20 00 03           a0 = 0x30020
  6545: 95 77 00 10              a0 = a0 + 0x1000
  6549: 01                       fallthrough
      :                          @348
  6550: 82 78                    a1 = u64 [a0]
  6552: c9 87 09                 a2 = a0 - a1
  6555: ab 59 0f                 jump @352 if a2 != s0
      :                          @349
  6558: c9 68 09                 a2 = a1 - s1
  6561: 01                       fallthrough
      :                          @350
  6562: 82 7a                    a3 = u64 [a0]
  6564: ab 8a f2                 jump @348 if a3 != a1
      :                          @351
  6567: 7b 79                    u64 [a0] = a2
  6569: 01                       fallthrough
      :                          @352
  6570: 95 16 ff 07              s1 = sp + 0x7ff
  6574: 95 66 99 03              s1 = s1 + 0x399
  6578: 82 67 70                 a0 = u64 [s1 + 0x70]
  6581: 33 08 01                 a1 = 0x1
  6584: 33 05 01                 s0 = 0x1
  6587: 50 20 94 00 e8 23        ra = 148, jump @984
      :                          @353 [@dyn 74]
  6593: 95 17 58                 a0 = sp + 0x58
  6596: 33 08 03                 a1 = 0x3
  6599: 0a 0d                    ecalli 13 // 'query'
  6601: 7b 67 78                 u64 [s1 + 0x78] = a0
  6604: 95 17 ff 07              a0 = sp + 0x7ff
  6608: 95 77 11 04              a0 = a0 + 0x411
  6612: 7b 67 48                 u64 [s1 + 0x48] = a0
  6615: 33 07 c8 0a 01           a0 = 0x10ac8
  6620: 7b 17 98 01              u64 [sp + 0x198] = a0
  6624: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  6629: 49 21 b8 01              u64 [sp + 440] = 0
  6633: 95 17 ff 07              a0 = sp + 0x7ff
  6637: 95 77 e1 03              a0 = a0 + 0x3e1
  6641: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6645: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6649: 82 17 40                 a0 = u64 [sp + 0x40]
  6652: 7b 67 50                 u64 [s1 + 0x50] = a0
  6655: 95 17 ff 07              a0 = sp + 0x7ff
  6659: 95 77 b1 03              a0 = a0 + 0x3b1
  6663: 95 18 98 01              a1 = sp + 0x198
  6667: 50 20 96 00 85 13        ra = 150, jump @648
      :                          @354 [@dyn 75]
  6673: 82 65 20                 s0 = u64 [s1 + 0x20]
  6676: 82 6b 28                 a4 = u64 [s1 + 0x28]
  6679: 82 66 18                 s1 = u64 [s1 + 0x18]
  6682: 33 07 02                 a0 = 0x2
  6685: 33 08                    a1 = 0
  6687: 33 09                    a2 = 0
  6689: 64 5a                    a3 = s0
  6691: 33 00 98 00              ra = 0x98
  6695: 0a 64                    ecalli 100 // 'log'
  6697: 01                       fallthrough
      :                          @355 [@dyn 76]
  6698: 82 17 48                 a0 = u64 [sp + 0x48]
  6701: c8 67 07                 a0 = a0 + s1
  6704: 53 27 00 f0 23           jump @361 if a0 <u 4294963200
      :                          @356
  6709: 33 07 20 00 03           a0 = 0x30020
  6714: 95 77 00 10              a0 = a0 + 0x1000
  6718: 01                       fallthrough
      :                          @357
  6719: 82 78                    a1 = u64 [a0]
  6721: c9 87 09                 a2 = a0 - a1
  6724: ab 59 0f                 jump @361 if a2 != s0
      :                          @358
  6727: c9 68 09                 a2 = a1 - s1
  6730: 01                       fallthrough
      :                          @359
  6731: 82 7a                    a3 = u64 [a0]
  6733: ab 8a f2                 jump @357 if a3 != a1
      :                          @360
  6736: 7b 79                    u64 [a0] = a2
  6738: 01                       fallthrough
      :                          @361
  6739: 95 16 ff 07              s1 = sp + 0x7ff
  6743: 95 66 99 03              s1 = s1 + 0x399
  6747: 82 67 78                 a0 = u64 [s1 + 0x78]
  6750: 33 08 02                 a1 = 0x2
  6753: 33 05 02                 s0 = 0x2
  6756: 50 20 9a 00 3f 23        ra = 154, jump @984
      :                          @362 [@dyn 77]
  6762: 95 18 78                 a1 = sp + 0x78
  6765: 95 19 98 00              a2 = sp + 0x98
  6769: 33 0b 03                 a4 = 0x3
  6772: 82 17 38                 a0 = u64 [sp + 0x38]
  6775: 33 0a                    a3 = 0
  6777: 0a 01                    ecalli 1 // 'lookup'
  6779: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6783: 33 07 50 00 01           a0 = 0x10050
  6788: 7b 67 18                 u64 [s1 + 0x18] = a0
  6791: 95 17 ff 07              a0 = sp + 0x7ff
  6795: 95 77 19 04              a0 = a0 + 0x419
  6799: 7b 67 28                 u64 [s1 + 0x28] = a0
  6802: 33 07 e8 0a 01           a0 = 0x10ae8
  6807: 7b 17 98 01              u64 [sp + 0x198] = a0
  6811: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6816: 49 21 b8 01              u64 [sp + 440] = 0
  6820: 95 17 ff 07              a0 = sp + 0x7ff
  6824: 95 77 b1 03              a0 = a0 + 0x3b1
  6828: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6832: 82 17 40                 a0 = u64 [sp + 0x40]
  6835: 7b 67 20                 u64 [s1 + 0x20] = a0
  6838: 7b 67 30                 u64 [s1 + 0x30] = a0
  6841: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6845: 95 17 ff 07              a0 = sp + 0x7ff
  6849: 95 77 e1 03              a0 = a0 + 0x3e1
  6853: 95 18 98 01              a1 = sp + 0x198
  6857: 50 20 9c 00 c7 12        ra = 156, jump @648
      :                          @363 [@dyn 78]
  6863: 82 65 50                 s0 = u64 [s1 + 0x50]
  6866: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6869: 82 66 48                 s1 = u64 [s1 + 0x48]
  6872: 33 07 02                 a0 = 0x2
  6875: 33 08                    a1 = 0
  6877: 33 09                    a2 = 0
  6879: 64 5a                    a3 = s0
  6881: 33 00 9e 00              ra = 0x9e
  6885: 0a 64                    ecalli 100 // 'log'
  6887: 01                       fallthrough
      :                          @364 [@dyn 79]
  6888: 82 17 48                 a0 = u64 [sp + 0x48]
  6891: c8 67 07                 a0 = a0 + s1
  6894: 53 27 00 f0 23           jump @370 if a0 <u 4294963200
      :                          @365
  6899: 33 07 20 00 03           a0 = 0x30020
  6904: 95 77 00 10              a0 = a0 + 0x1000
  6908: 01                       fallthrough
      :                          @366
  6909: 82 78                    a1 = u64 [a0]
  6911: c9 87 09                 a2 = a0 - a1
  6914: ab 59 0f                 jump @370 if a2 != s0
      :                          @367
  6917: c9 68 09                 a2 = a1 - s1
  6920: 01                       fallthrough
      :                          @368
  6921: 82 7a                    a3 = u64 [a0]
  6923: ab 8a f2                 jump @366 if a3 != a1
      :                          @369
  6926: 7b 79                    u64 [a0] = a2
  6928: 01                       fallthrough
      :                          @370
  6929: 95 16 ff 07              s1 = sp + 0x7ff
  6933: 95 66 99 03              s1 = s1 + 0x399
  6937: 82 67 80 00              a0 = u64 [s1 + 0x80]
  6941: 33 08 05                 a1 = 0x5
  6944: 50 20 a0 00 83 22        ra = 160, jump @984
      :                          @371 [@dyn 80]
  6950: 33 07 e8 03              a0 = 0x3e8
  6954: 95 18 52                 a1 = sp + 0x52
  6957: 0a 06                    ecalli 6 // 'assign'
  6959: 7b 67                    u64 [s1] = a0
  6961: 33 07 38 00 01           a0 = 0x10038
  6966: 7b 67 18                 u64 [s1 + 0x18] = a0
  6969: 33 07 18 0b 01           a0 = 0x10b18
  6974: 7b 17 98 01              u64 [sp + 0x198] = a0
  6978: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6983: 49 21 b8 01              u64 [sp + 440] = 0
  6987: 95 17 ff 07              a0 = sp + 0x7ff
  6991: 95 77 b1 03              a0 = a0 + 0x3b1
  6995: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6999: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7004: 82 17 40                 a0 = u64 [sp + 0x40]
  7007: 7b 67 20                 u64 [s1 + 0x20] = a0
  7010: 7b 66 28                 u64 [s1 + 0x28] = s1
  7013: 7b 67 30                 u64 [s1 + 0x30] = a0
  7016: 95 17 ff 07              a0 = sp + 0x7ff
  7020: 95 77 e1 03              a0 = a0 + 0x3e1
  7024: 95 18 98 01              a1 = sp + 0x198
  7028: 50 20 a2 00 1c 12        ra = 162, jump @648
      :                          @372 [@dyn 81]
  7034: 82 65 50                 s0 = u64 [s1 + 0x50]
  7037: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7040: 82 66 48                 s1 = u64 [s1 + 0x48]
  7043: 33 07 02                 a0 = 0x2
  7046: 33 08                    a1 = 0
  7048: 33 09                    a2 = 0
  7050: 64 5a                    a3 = s0
  7052: 33 00 a4 00              ra = 0xa4
  7056: 0a 64                    ecalli 100 // 'log'
  7058: 01                       fallthrough
      :                          @373 [@dyn 82]
  7059: 82 17 48                 a0 = u64 [sp + 0x48]
  7062: c8 67 07                 a0 = a0 + s1
  7065: 53 27 00 f0 f4 02        jump @416 if a0 <u 4294963200
      :                          @374
  7071: 33 07 20 00 03           a0 = 0x30020
  7076: 95 77 00 10              a0 = a0 + 0x1000
  7080: 01                       fallthrough
      :                          @375
  7081: 82 78                    a1 = u64 [a0]
  7083: c9 87 09                 a2 = a0 - a1
  7086: ab 59 df 02              jump @416 if a2 != s0
      :                          @376
  7090: c9 68 09                 a2 = a1 - s1
  7093: 01                       fallthrough
      :                          @377
  7094: 82 7a                    a3 = u64 [a0]
  7096: ab 8a f1                 jump @375 if a3 != a1
      :                          @378
  7099: 7b 79                    u64 [a0] = a2
  7101: 33 0b                    a4 = 0
  7103: 01                       fallthrough
      :                          @379
  7104: ab 8a e9                 jump @375 if a3 != a1
      :                          @380
  7107: 28 ca 02                 jump @416
      :                          @381 [@dyn 83]
  7110: 95 18 58                 a1 = sp + 0x58
  7113: 95 19 98 00              a2 = sp + 0x98
  7117: 33 0b 03                 a4 = 0x3
  7120: 82 17 38                 a0 = u64 [sp + 0x38]
  7123: 33 0a                    a3 = 0
  7125: 0a 01                    ecalli 1 // 'lookup'
  7127: 7b 67 70                 u64 [s1 + 0x70] = a0
  7130: 7b 65 18                 u64 [s1 + 0x18] = s0
  7133: 82 18 40                 a1 = u64 [sp + 0x40]
  7136: 7b 68 20                 u64 [s1 + 0x20] = a1
  7139: 95 17 ff 07              a0 = sp + 0x7ff
  7143: 95 77 09 04              a0 = a0 + 0x409
  7147: 7b 67 28                 u64 [s1 + 0x28] = a0
  7150: 7b 68 30                 u64 [s1 + 0x30] = a1
  7153: 33 07 48 0b 01           a0 = 0x10b48
  7158: 7b 17 98 01              u64 [sp + 0x198] = a0
  7162: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7167: 49 21 b8 01              u64 [sp + 440] = 0
  7171: 95 17 ff 07              a0 = sp + 0x7ff
  7175: 95 77 b1 03              a0 = a0 + 0x3b1
  7179: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7183: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7188: 95 17 ff 07              a0 = sp + 0x7ff
  7192: 95 77 e1 03              a0 = a0 + 0x3e1
  7196: 95 18 98 01              a1 = sp + 0x198
  7200: 50 20 a8 00 70 11        ra = 168, jump @648
      :                          @382 [@dyn 84]
  7206: 82 65 50                 s0 = u64 [s1 + 0x50]
  7209: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7212: 95 17 ff 07              a0 = sp + 0x7ff
  7216: 95 77 99 03              a0 = a0 + 0x399
  7220: 82 76 48                 s1 = u64 [a0 + 0x48]
  7223: 33 07 02                 a0 = 0x2
  7226: 33 08                    a1 = 0
  7228: 33 09                    a2 = 0
  7230: 64 5a                    a3 = s0
  7232: 33 00 aa 00              ra = 0xaa
  7236: 0a 64                    ecalli 100 // 'log'
  7238: 01                       fallthrough
      :                          @383 [@dyn 85]
  7239: 82 17 48                 a0 = u64 [sp + 0x48]
  7242: c8 67 07                 a0 = a0 + s1
  7245: 53 27 00 f0 23           jump @389 if a0 <u 4294963200
      :                          @384
  7250: 33 07 20 00 03           a0 = 0x30020
  7255: 95 77 00 10              a0 = a0 + 0x1000
  7259: 01                       fallthrough
      :                          @385
  7260: 82 78                    a1 = u64 [a0]
  7262: c9 87 09                 a2 = a0 - a1
  7265: ab 59 0f                 jump @389 if a2 != s0
      :                          @386
  7268: c9 68 09                 a2 = a1 - s1
  7271: 01                       fallthrough
      :                          @387
  7272: 82 7a                    a3 = u64 [a0]
  7274: ab 8a f2                 jump @385 if a3 != a1
      :                          @388
  7277: 7b 79                    u64 [a0] = a2
  7279: 01                       fallthrough
      :                          @389
  7280: 95 16 ff 07              s1 = sp + 0x7ff
  7284: 95 66 99 03              s1 = s1 + 0x399
  7288: 82 67 70                 a0 = u64 [s1 + 0x70]
  7291: 33 08 01                 a1 = 0x1
  7294: 50 20 ac 00 25 21        ra = 172, jump @984
      :                          @390 [@dyn 86]
  7300: 95 17 58                 a0 = sp + 0x58
  7303: 33 08 03                 a1 = 0x3
  7306: 0a 0d                    ecalli 13 // 'query'
  7308: 7b 67 78                 u64 [s1 + 0x78] = a0
  7311: 95 17 ff 07              a0 = sp + 0x7ff
  7315: 95 77 11 04              a0 = a0 + 0x411
  7319: 7b 67 28                 u64 [s1 + 0x28] = a0
  7322: 33 07 78 0b 01           a0 = 0x10b78
  7327: 7b 17 98 01              u64 [sp + 0x198] = a0
  7331: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7336: 49 21 b8 01              u64 [sp + 440] = 0
  7340: 95 17 ff 07              a0 = sp + 0x7ff
  7344: 95 77 b1 03              a0 = a0 + 0x3b1
  7348: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7352: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7357: 82 17 30                 a0 = u64 [sp + 0x30]
  7360: 7b 67 18                 u64 [s1 + 0x18] = a0
  7363: 82 17 40                 a0 = u64 [sp + 0x40]
  7366: 7b 67 20                 u64 [s1 + 0x20] = a0
  7369: 7b 67 30                 u64 [s1 + 0x30] = a0
  7372: 95 17 ff 07              a0 = sp + 0x7ff
  7376: 95 77 e1 03              a0 = a0 + 0x3e1
  7380: 95 18 98 01              a1 = sp + 0x198
  7384: 50 20 ae 00 b8 10        ra = 174, jump @648
      :                          @391 [@dyn 87]
  7390: 82 65 50                 s0 = u64 [s1 + 0x50]
  7393: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7396: 82 66 48                 s1 = u64 [s1 + 0x48]
  7399: 33 07 02                 a0 = 0x2
  7402: 33 08                    a1 = 0
  7404: 33 09                    a2 = 0
  7406: 64 5a                    a3 = s0
  7408: 33 00 b0 00              ra = 0xb0
  7412: 0a 64                    ecalli 100 // 'log'
  7414: 01                       fallthrough
      :                          @392 [@dyn 88]
  7415: 82 17 48                 a0 = u64 [sp + 0x48]
  7418: c8 67 07                 a0 = a0 + s1
  7421: 53 27 00 f0 23           jump @398 if a0 <u 4294963200
      :                          @393
  7426: 33 07 20 00 03           a0 = 0x30020
  7431: 95 77 00 10              a0 = a0 + 0x1000
  7435: 01                       fallthrough
      :                          @394
  7436: 82 78                    a1 = u64 [a0]
  7438: c9 87 09                 a2 = a0 - a1
  7441: ab 59 0f                 jump @398 if a2 != s0
      :                          @395
  7444: c9 68 09                 a2 = a1 - s1
  7447: 01                       fallthrough
      :                          @396
  7448: 82 7a                    a3 = u64 [a0]
  7450: ab 8a f2                 jump @394 if a3 != a1
      :                          @397
  7453: 7b 79                    u64 [a0] = a2
  7455: 01                       fallthrough
      :                          @398
  7456: 95 16 ff 07              s1 = sp + 0x7ff
  7460: 95 66 99 03              s1 = s1 + 0x399
  7464: 82 67 78                 a0 = u64 [s1 + 0x78]
  7467: 33 08 02                 a1 = 0x2
  7470: 33 05 02                 s0 = 0x2
  7473: 50 20 b2 00 72 20        ra = 178, jump @984
      :                          @399 [@dyn 89]
  7479: 95 18 58                 a1 = sp + 0x58
  7482: 82 17 38                 a0 = u64 [sp + 0x38]
  7485: 0a 0c                    ecalli 12 // 'eject'
  7487: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7491: 33 07 30 00 01           a0 = 0x10030
  7496: 7b 17 10                 u64 [sp + 0x10] = a0
  7499: 7b 67 18                 u64 [s1 + 0x18] = a0
  7502: 82 18 40                 a1 = u64 [sp + 0x40]
  7505: 7b 68 20                 u64 [s1 + 0x20] = a1
  7508: 95 17 ff 07              a0 = sp + 0x7ff
  7512: 95 77 19 04              a0 = a0 + 0x419
  7516: 7b 67 28                 u64 [s1 + 0x28] = a0
  7519: 7b 68 30                 u64 [s1 + 0x30] = a1
  7522: 33 07 a8 0b 01           a0 = 0x10ba8
  7527: 7b 17 98 01              u64 [sp + 0x198] = a0
  7531: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7536: 49 21 b8 01              u64 [sp + 440] = 0
  7540: 95 17 ff 07              a0 = sp + 0x7ff
  7544: 95 77 b1 03              a0 = a0 + 0x3b1
  7548: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7552: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7556: 95 17 ff 07              a0 = sp + 0x7ff
  7560: 95 77 e1 03              a0 = a0 + 0x3e1
  7564: 95 18 98 01              a1 = sp + 0x198
  7568: 50 20 b4 00 00 10        ra = 180, jump @648
      :                          @400 [@dyn 90]
  7574: 82 65 50                 s0 = u64 [s1 + 0x50]
  7577: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7580: 82 66 48                 s1 = u64 [s1 + 0x48]
  7583: 33 07 02                 a0 = 0x2
  7586: 33 08                    a1 = 0
  7588: 33 09                    a2 = 0
  7590: 64 5a                    a3 = s0
  7592: 33 00 b6 00              ra = 0xb6
  7596: 0a 64                    ecalli 100 // 'log'
  7598: 01                       fallthrough
      :                          @401 [@dyn 91]
  7599: 82 17 48                 a0 = u64 [sp + 0x48]
  7602: c8 67 07                 a0 = a0 + s1
  7605: 53 27 00 f0 23           jump @407 if a0 <u 4294963200
      :                          @402
  7610: 33 07 20 00 03           a0 = 0x30020
  7615: 95 77 00 10              a0 = a0 + 0x1000
  7619: 01                       fallthrough
      :                          @403
  7620: 82 78                    a1 = u64 [a0]
  7622: c9 87 09                 a2 = a0 - a1
  7625: ab 59 0f                 jump @407 if a2 != s0
      :                          @404
  7628: c9 68 09                 a2 = a1 - s1
  7631: 01                       fallthrough
      :                          @405
  7632: 82 7a                    a3 = u64 [a0]
  7634: ab 8a f2                 jump @403 if a3 != a1
      :                          @406
  7637: 7b 79                    u64 [a0] = a2
  7639: 01                       fallthrough
      :                          @407
  7640: 95 16 ff 07              s1 = sp + 0x7ff
  7644: 95 66 99 03              s1 = s1 + 0x399
  7648: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7652: 33 08 05                 a1 = 0x5
  7655: 50 20 b8 00 bc 1f        ra = 184, jump @984
      :                          @408 [@dyn 92]
  7661: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  7671: 95 1a 58                 a3 = sp + 0x58
  7674: 33 08                    a1 = 0
  7676: 33 09                    a2 = 0
  7678: 33 0b                    a4 = 0
  7680: 0a 05                    ecalli 5 // 'bless'
  7682: 7b 67                    u64 [s1] = a0
  7684: 82 17 10                 a0 = u64 [sp + 0x10]
  7687: 7b 67 18                 u64 [s1 + 0x18] = a0
  7690: 33 07 d8 0b 01           a0 = 0x10bd8
  7695: 7b 17 98 01              u64 [sp + 0x198] = a0
  7699: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7704: 49 21 b8 01              u64 [sp + 440] = 0
  7708: 95 17 ff 07              a0 = sp + 0x7ff
  7712: 95 77 b1 03              a0 = a0 + 0x3b1
  7716: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7720: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7725: 82 17 40                 a0 = u64 [sp + 0x40]
  7728: 7b 67 20                 u64 [s1 + 0x20] = a0
  7731: 7b 66 28                 u64 [s1 + 0x28] = s1
  7734: 7b 67 30                 u64 [s1 + 0x30] = a0
  7737: 95 17 ff 07              a0 = sp + 0x7ff
  7741: 95 77 e1 03              a0 = a0 + 0x3e1
  7745: 95 18 98 01              a1 = sp + 0x198
  7749: 50 20 ba 00 4b 0f        ra = 186, jump @648
      :                          @409 [@dyn 93]
  7755: 82 65 50                 s0 = u64 [s1 + 0x50]
  7758: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7761: 82 66 48                 s1 = u64 [s1 + 0x48]
  7764: 33 07 02                 a0 = 0x2
  7767: 33 08                    a1 = 0
  7769: 33 09                    a2 = 0
  7771: 64 5a                    a3 = s0
  7773: 33 00 bc 00              ra = 0xbc
  7777: 0a 64                    ecalli 100 // 'log'
  7779: 01                       fallthrough
      :                          @410 [@dyn 94]
  7780: 82 17 48                 a0 = u64 [sp + 0x48]
  7783: c8 67 07                 a0 = a0 + s1
  7786: 53 27 00 f0 23           jump @416 if a0 <u 4294963200
      :                          @411
  7791: 33 07 20 00 03           a0 = 0x30020
  7796: 95 77 00 10              a0 = a0 + 0x1000
  7800: 01                       fallthrough
      :                          @412
  7801: 82 78                    a1 = u64 [a0]
  7803: c9 87 09                 a2 = a0 - a1
  7806: ab 59 0f                 jump @416 if a2 != s0
      :                          @413
  7809: c9 68 09                 a2 = a1 - s1
  7812: 01                       fallthrough
      :                          @414
  7813: 82 7a                    a3 = u64 [a0]
  7815: ab 8a f2                 jump @412 if a3 != a1
      :                          @415
  7818: 7b 79                    u64 [a0] = a2
  7820: 01                       fallthrough
      :                          @416
  7821: 95 16 ff 07              s1 = sp + 0x7ff
  7825: 95 66 99 03              s1 = s1 + 0x399
  7829: 82 67                    a0 = u64 [s1]
  7831: 33 08 06                 a1 = 0x6
  7834: 33 00 1c 01              ra = 0x11c
  7838: 28 05 1f                 jump @984
      :                          @417 [@dyn 95]
  7841: 95 17 58                 a0 = sp + 0x58
  7844: 33 08 03                 a1 = 0x3
  7847: 0a 0e                    ecalli 14 // 'solicit'
  7849: 7b 67 70                 u64 [s1 + 0x70] = a0
  7852: 33 08 01                 a1 = 0x1
  7855: 50 20 c0 00 f4 1e        ra = 192, jump @984
      :                          @418 [@dyn 96]
  7861: 7b 65 18                 u64 [s1 + 0x18] = s0
  7864: 82 18 40                 a1 = u64 [sp + 0x40]
  7867: 7b 68 20                 u64 [s1 + 0x20] = a1
  7870: 95 17 ff 07              a0 = sp + 0x7ff
  7874: 95 77 09 04              a0 = a0 + 0x409
  7878: 7b 67 28                 u64 [s1 + 0x28] = a0
  7881: 7b 68 30                 u64 [s1 + 0x30] = a1
  7884: 33 07 08 0c 01           a0 = 0x10c08
  7889: 7b 17 98 01              u64 [sp + 0x198] = a0
  7893: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7898: 49 21 b8 01              u64 [sp + 440] = 0
  7902: 95 17 ff 07              a0 = sp + 0x7ff
  7906: 95 77 b1 03              a0 = a0 + 0x3b1
  7910: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7914: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7919: 95 17 ff 07              a0 = sp + 0x7ff
  7923: 95 77 e1 03              a0 = a0 + 0x3e1
  7927: 95 18 98 01              a1 = sp + 0x198
  7931: 50 20 c2 00 95 0e        ra = 194, jump @648
      :                          @419 [@dyn 97]
  7937: 82 65 50                 s0 = u64 [s1 + 0x50]
  7940: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7943: 95 17 ff 07              a0 = sp + 0x7ff
  7947: 95 77 99 03              a0 = a0 + 0x399
  7951: 82 76 48                 s1 = u64 [a0 + 0x48]
  7954: 33 07 02                 a0 = 0x2
  7957: 33 08                    a1 = 0
  7959: 33 09                    a2 = 0
  7961: 64 5a                    a3 = s0
  7963: 33 00 c4 00              ra = 0xc4
  7967: 0a 64                    ecalli 100 // 'log'
  7969: 01                       fallthrough
      :                          @420 [@dyn 98]
  7970: 82 17 48                 a0 = u64 [sp + 0x48]
  7973: c8 67 07                 a0 = a0 + s1
  7976: 53 27 00 f0 23           jump @426 if a0 <u 4294963200
      :                          @421
  7981: 33 07 20 00 03           a0 = 0x30020
  7986: 95 77 00 10              a0 = a0 + 0x1000
  7990: 01                       fallthrough
      :                          @422
  7991: 82 78                    a1 = u64 [a0]
  7993: c9 87 09                 a2 = a0 - a1
  7996: ab 59 0f                 jump @426 if a2 != s0
      :                          @423
  7999: c9 68 09                 a2 = a1 - s1
  8002: 01                       fallthrough
      :                          @424
  8003: 82 7a                    a3 = u64 [a0]
  8005: ab 8a f2                 jump @422 if a3 != a1
      :                          @425
  8008: 7b 79                    u64 [a0] = a2
  8010: 01                       fallthrough
      :                          @426
  8011: 95 17 58                 a0 = sp + 0x58
  8014: 33 08 03                 a1 = 0x3
  8017: 0a 0d                    ecalli 13 // 'query'
  8019: 95 18 ff 07              a1 = sp + 0x7ff
  8023: 95 88 99 03              a1 = a1 + 0x399
  8027: 7b 87 78                 u64 [a1 + 0x78] = a0
  8030: 95 17 ff 07              a0 = sp + 0x7ff
  8034: 95 77 11 04              a0 = a0 + 0x411
  8038: 7b 87 28                 u64 [a1 + 0x28] = a0
  8041: 33 07 78 0b 01           a0 = 0x10b78
  8046: 7b 17 98 01              u64 [sp + 0x198] = a0
  8050: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8055: 49 21 b8 01              u64 [sp + 440] = 0
  8059: 95 17 ff 07              a0 = sp + 0x7ff
  8063: 95 77 b1 03              a0 = a0 + 0x3b1
  8067: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8071: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8076: 82 17 30                 a0 = u64 [sp + 0x30]
  8079: 7b 87 18                 u64 [a1 + 0x18] = a0
  8082: 82 17 40                 a0 = u64 [sp + 0x40]
  8085: 7b 87 20                 u64 [a1 + 0x20] = a0
  8088: 7b 87 30                 u64 [a1 + 0x30] = a0
  8091: 95 17 ff 07              a0 = sp + 0x7ff
  8095: 95 77 e1 03              a0 = a0 + 0x3e1
  8099: 95 18 98 01              a1 = sp + 0x198
  8103: 95 15 98 01              s0 = sp + 0x198
  8107: 50 20 c6 00 e5 0d        ra = 198, jump @648
      :                          @427 [@dyn 99]
  8113: 95 17 ff 07              a0 = sp + 0x7ff
  8117: 95 77 99 03              a0 = a0 + 0x399
  8121: 82 76 50                 s1 = u64 [a0 + 0x50]
  8124: 82 7b 58                 a4 = u64 [a0 + 0x58]
  8127: 82 77 48                 a0 = u64 [a0 + 0x48]
  8130: 7b 17 10                 u64 [sp + 0x10] = a0
  8133: 33 07 02                 a0 = 0x2
  8136: 33 08                    a1 = 0
  8138: 33 09                    a2 = 0
  8140: 64 6a                    a3 = s1
  8142: 33 00 c8 00              ra = 0xc8
  8146: 0a 64                    ecalli 100 // 'log'
  8148: 01                       fallthrough
      :                          @428 [@dyn 100]
  8149: 82 1c 10                 a5 = u64 [sp + 0x10]
  8152: 82 17 48                 a0 = u64 [sp + 0x48]
  8155: c8 c7 07                 a0 = a0 + a5
  8158: 53 27 00 f0 23           jump @434 if a0 <u 4294963200
      :                          @429
  8163: 33 07 20 00 03           a0 = 0x30020
  8168: 95 77 00 10              a0 = a0 + 0x1000
  8172: 01                       fallthrough
      :                          @430
  8173: 82 78                    a1 = u64 [a0]
  8175: c9 87 09                 a2 = a0 - a1
  8178: ab 69 0f                 jump @434 if a2 != s1
      :                          @431
  8181: c9 c8 09                 a2 = a1 - a5
  8184: 01                       fallthrough
      :                          @432
  8185: 82 7a                    a3 = u64 [a0]
  8187: ab 8a f2                 jump @430 if a3 != a1
      :                          @433
  8190: 7b 79                    u64 [a0] = a2
  8192: 01                       fallthrough
      :                          @434
  8193: 95 17 ff 07              a0 = sp + 0x7ff
  8197: 95 77 99 03              a0 = a0 + 0x399
  8201: 82 77 78                 a0 = u64 [a0 + 0x78]
  8204: 33 08 02                 a1 = 0x2
  8207: 50 20 ca 00 94 1d        ra = 202, jump @984
      :                          @435 [@dyn 101]
  8213: 33 09 00 0a              a2 = 0xa00
  8217: 95 17 98 01              a0 = sp + 0x198
  8221: 33 08                    a1 = 0
  8223: 50 20 cc 00 98 10        ra = 204, jump @716
      :                          @436 [@dyn 102]
  8229: 33 06 50                 s1 = 0x50
  8232: 01                       fallthrough
      :                          @437
  8233: 95 18 58                 a1 = sp + 0x58
  8236: 33 09 20                 a2 = 0x20
  8239: 64 57                    a0 = s0
  8241: 50 20 ce 00 d4 0f        ra = 206, jump @698
      :                          @438 [@dyn 103]
  8247: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  8250: 95 55 20                 s0 = s0 + 0x20
  8253: 52 06 ec                 jump @437 if s1 != 0
      :                          @439
  8256: 95 18 98 01              a1 = sp + 0x198
  8260: 33 07                    a0 = 0
  8262: 0a 06                    ecalli 6 // 'assign'
  8264: 95 16 ff 07              s1 = sp + 0x7ff
  8268: 95 66 99 03              s1 = s1 + 0x399
  8272: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8276: 95 17 ff 07              a0 = sp + 0x7ff
  8280: 95 77 19 04              a0 = a0 + 0x419
  8284: 7b 67 58                 u64 [s1 + 0x58] = a0
  8287: 33 07 38 0c 01           a0 = 0x10c38
  8292: 7b 67 18                 u64 [s1 + 0x18] = a0
  8295: 49 16 20 03              u64 [s1 + 32] = 0x3
  8299: 95 17 ff 07              a0 = sp + 0x7ff
  8303: 95 77 e1 03              a0 = a0 + 0x3e1
  8307: 7b 67 28                 u64 [s1 + 0x28] = a0
  8310: 49 16 30 02              u64 [s1 + 48] = 0x2
  8314: 82 17 30                 a0 = u64 [sp + 0x30]
  8317: 7b 67 48                 u64 [s1 + 0x48] = a0
  8320: 82 17 40                 a0 = u64 [sp + 0x40]
  8323: 7b 67 50                 u64 [s1 + 0x50] = a0
  8326: 7b 67 60                 u64 [s1 + 0x60] = a0
  8329: 49 16 38                 u64 [s1 + 56] = 0
  8332: 95 17 ff 07              a0 = sp + 0x7ff
  8336: 95 77 99 03              a0 = a0 + 0x399
  8340: 95 18 ff 07              a1 = sp + 0x7ff
  8344: 95 88 b1 03              a1 = a1 + 0x3b1
  8348: 50 20 d0 00 f4 0c        ra = 208, jump @648
      :                          @440 [@dyn 104]
  8354: 82 65 08                 s0 = u64 [s1 + 0x8]
  8357: 82 6b 10                 a4 = u64 [s1 + 0x10]
  8360: 82 66                    s1 = u64 [s1]
  8362: 33 07 02                 a0 = 0x2
  8365: 33 08                    a1 = 0
  8367: 33 09                    a2 = 0
  8369: 64 5a                    a3 = s0
  8371: 33 00 d2 00              ra = 0xd2
  8375: 0a 64                    ecalli 100 // 'log'
  8377: 01                       fallthrough
      :                          @441 [@dyn 105]
  8378: 82 17 48                 a0 = u64 [sp + 0x48]
  8381: c8 67 07                 a0 = a0 + s1
  8384: 53 27 00 f0 12 05        jump @512 if a0 <u 4294963200
      :                          @442
  8390: 33 07 20 00 03           a0 = 0x30020
  8395: 95 77 00 10              a0 = a0 + 0x1000
  8399: 01                       fallthrough
      :                          @443
  8400: 82 78                    a1 = u64 [a0]
  8402: c9 87 09                 a2 = a0 - a1
  8405: ab 59 fd 04              jump @512 if a2 != s0
      :                          @444
  8409: c9 68 09                 a2 = a1 - s1
  8412: 01                       fallthrough
      :                          @445
  8413: 82 7a                    a3 = u64 [a0]
  8415: ab 8a f1                 jump @443 if a3 != a1
      :                          @446
  8418: 7b 79                    u64 [a0] = a2
  8420: 33 0b                    a4 = 0
  8422: 01                       fallthrough
      :                          @447
  8423: ab 8a e9                 jump @443 if a3 != a1
      :                          @448
  8426: 28 e8 04                 jump @512
      :                          @449 [@dyn 106]
  8429: 95 17 58                 a0 = sp + 0x58
  8432: 33 08 03                 a1 = 0x3
  8435: 0a 0f                    ecalli 15 // 'forget'
  8437: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8441: 7b 65 18                 u64 [s1 + 0x18] = s0
  8444: 82 18 40                 a1 = u64 [sp + 0x40]
  8447: 7b 68 20                 u64 [s1 + 0x20] = a1
  8450: 95 17 ff 07              a0 = sp + 0x7ff
  8454: 95 77 19 04              a0 = a0 + 0x419
  8458: 7b 67 28                 u64 [s1 + 0x28] = a0
  8461: 7b 68 30                 u64 [s1 + 0x30] = a1
  8464: 33 07 98 0a 01           a0 = 0x10a98
  8469: 7b 17 98 01              u64 [sp + 0x198] = a0
  8473: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8478: 49 21 b8 01              u64 [sp + 440] = 0
  8482: 95 17 ff 07              a0 = sp + 0x7ff
  8486: 95 77 b1 03              a0 = a0 + 0x3b1
  8490: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8494: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8499: 95 17 ff 07              a0 = sp + 0x7ff
  8503: 95 77 e1 03              a0 = a0 + 0x3e1
  8507: 95 18 98 01              a1 = sp + 0x198
  8511: 50 20 d6 00 51 0c        ra = 214, jump @648
      :                          @450 [@dyn 107]
  8517: 82 65 50                 s0 = u64 [s1 + 0x50]
  8520: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8523: 95 17 ff 07              a0 = sp + 0x7ff
  8527: 95 77 99 03              a0 = a0 + 0x399
  8531: 82 76 48                 s1 = u64 [a0 + 0x48]
  8534: 33 07 02                 a0 = 0x2
  8537: 33 08                    a1 = 0
  8539: 33 09                    a2 = 0
  8541: 64 5a                    a3 = s0
  8543: 33 00 d8 00              ra = 0xd8
  8547: 0a 64                    ecalli 100 // 'log'
  8549: 01                       fallthrough
      :                          @451 [@dyn 108]
  8550: 82 17 48                 a0 = u64 [sp + 0x48]
  8553: c8 67 07                 a0 = a0 + s1
  8556: 53 27 00 f0 23           jump @457 if a0 <u 4294963200
      :                          @452
  8561: 33 07 20 00 03           a0 = 0x30020
  8566: 95 77 00 10              a0 = a0 + 0x1000
  8570: 01                       fallthrough
      :                          @453
  8571: 82 78                    a1 = u64 [a0]
  8573: c9 87 09                 a2 = a0 - a1
  8576: ab 59 0f                 jump @457 if a2 != s0
      :                          @454
  8579: c9 68 09                 a2 = a1 - s1
  8582: 01                       fallthrough
      :                          @455
  8583: 82 7a                    a3 = u64 [a0]
  8585: ab 8a f2                 jump @453 if a3 != a1
      :                          @456
  8588: 7b 79                    u64 [a0] = a2
  8590: 01                       fallthrough
      :                          @457
  8591: 95 16 ff 07              s1 = sp + 0x7ff
  8595: 95 66 99 03              s1 = s1 + 0x399
  8599: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8603: 33 08 01                 a1 = 0x1
  8606: 50 20 da 00 05 1c        ra = 218, jump @984
      :                          @458 [@dyn 109]
  8612: 95 17 58                 a0 = sp + 0x58
  8615: 33 08 03                 a1 = 0x3
  8618: 0a 0d                    ecalli 13 // 'query'
  8620: 7b 67                    u64 [s1] = a0
  8622: 33 07 68 0c 01           a0 = 0x10c68
  8627: 7b 17 98 01              u64 [sp + 0x198] = a0
  8631: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8636: 49 21 b8 01              u64 [sp + 440] = 0
  8640: 95 17 ff 07              a0 = sp + 0x7ff
  8644: 95 77 b1 03              a0 = a0 + 0x3b1
  8648: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8652: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8657: 82 17 30                 a0 = u64 [sp + 0x30]
  8660: 7b 67 18                 u64 [s1 + 0x18] = a0
  8663: 82 17 40                 a0 = u64 [sp + 0x40]
  8666: 7b 67 20                 u64 [s1 + 0x20] = a0
  8669: 7b 66 28                 u64 [s1 + 0x28] = s1
  8672: 7b 67 30                 u64 [s1 + 0x30] = a0
  8675: 95 17 ff 07              a0 = sp + 0x7ff
  8679: 95 77 e1 03              a0 = a0 + 0x3e1
  8683: 95 18 98 01              a1 = sp + 0x198
  8687: 50 20 dc 00 a1 0b        ra = 220, jump @648
      :                          @459 [@dyn 110]
  8693: 82 65 50                 s0 = u64 [s1 + 0x50]
  8696: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8699: 82 66 48                 s1 = u64 [s1 + 0x48]
  8702: 33 07 02                 a0 = 0x2
  8705: 33 08                    a1 = 0
  8707: 33 09                    a2 = 0
  8709: 64 5a                    a3 = s0
  8711: 33 00 de 00              ra = 0xde
  8715: 0a 64                    ecalli 100 // 'log'
  8717: 01                       fallthrough
      :                          @460 [@dyn 111]
  8718: 82 17 48                 a0 = u64 [sp + 0x48]
  8721: c8 67 07                 a0 = a0 + s1
  8724: 53 27 00 f0 80 01        jump @485 if a0 <u 4294963200
      :                          @461
  8730: 33 07 20 00 03           a0 = 0x30020
  8735: 95 77 00 10              a0 = a0 + 0x1000
  8739: 01                       fallthrough
      :                          @462
  8740: 82 78                    a1 = u64 [a0]
  8742: c9 87 09                 a2 = a0 - a1
  8745: ab 59 6b 01              jump @485 if a2 != s0
      :                          @463
  8749: c9 68 09                 a2 = a1 - s1
  8752: 01                       fallthrough
      :                          @464
  8753: 82 7a                    a3 = u64 [a0]
  8755: ab 8a f1                 jump @462 if a3 != a1
      :                          @465
  8758: 7b 79                    u64 [a0] = a2
  8760: 33 0b                    a4 = 0
  8762: 01                       fallthrough
      :                          @466
  8763: ab 8a e9                 jump @462 if a3 != a1
      :                          @467
  8766: 28 56 01                 jump @485
      :                          @468 [@dyn 112]
  8769: 95 18 58                 a1 = sp + 0x58
  8772: 95 19 98 00              a2 = sp + 0x98
  8776: 33 0b 03                 a4 = 0x3
  8779: 82 17 38                 a0 = u64 [sp + 0x38]
  8782: 33 0a                    a3 = 0
  8784: 0a 01                    ecalli 1 // 'lookup'
  8786: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8790: 7b 65 18                 u64 [s1 + 0x18] = s0
  8793: 82 18 40                 a1 = u64 [sp + 0x40]
  8796: 7b 68 20                 u64 [s1 + 0x20] = a1
  8799: 95 17 ff 07              a0 = sp + 0x7ff
  8803: 95 77 19 04              a0 = a0 + 0x419
  8807: 7b 67 28                 u64 [s1 + 0x28] = a0
  8810: 7b 68 30                 u64 [s1 + 0x30] = a1
  8813: 33 07 98 0c 01           a0 = 0x10c98
  8818: 7b 17 98 01              u64 [sp + 0x198] = a0
  8822: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8827: 49 21 b8 01              u64 [sp + 440] = 0
  8831: 95 17 ff 07              a0 = sp + 0x7ff
  8835: 95 77 b1 03              a0 = a0 + 0x3b1
  8839: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8843: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8848: 95 17 ff 07              a0 = sp + 0x7ff
  8852: 95 77 e1 03              a0 = a0 + 0x3e1
  8856: 95 18 98 01              a1 = sp + 0x198
  8860: 50 20 e2 00 f4 0a        ra = 226, jump @648
      :                          @469 [@dyn 113]
  8866: 82 65 50                 s0 = u64 [s1 + 0x50]
  8869: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8872: 95 17 ff 07              a0 = sp + 0x7ff
  8876: 95 77 99 03              a0 = a0 + 0x399
  8880: 82 76 48                 s1 = u64 [a0 + 0x48]
  8883: 33 07 02                 a0 = 0x2
  8886: 33 08                    a1 = 0
  8888: 33 09                    a2 = 0
  8890: 64 5a                    a3 = s0
  8892: 33 00 e4 00              ra = 0xe4
  8896: 0a 64                    ecalli 100 // 'log'
  8898: 01                       fallthrough
      :                          @470 [@dyn 114]
  8899: 82 17 48                 a0 = u64 [sp + 0x48]
  8902: c8 67 07                 a0 = a0 + s1
  8905: 53 27 00 f0 23           jump @476 if a0 <u 4294963200
      :                          @471
  8910: 33 07 20 00 03           a0 = 0x30020
  8915: 95 77 00 10              a0 = a0 + 0x1000
  8919: 01                       fallthrough
      :                          @472
  8920: 82 78                    a1 = u64 [a0]
  8922: c9 87 09                 a2 = a0 - a1
  8925: ab 59 0f                 jump @476 if a2 != s0
      :                          @473
  8928: c9 68 09                 a2 = a1 - s1
  8931: 01                       fallthrough
      :                          @474
  8932: 82 7a                    a3 = u64 [a0]
  8934: ab 8a f2                 jump @472 if a3 != a1
      :                          @475
  8937: 7b 79                    u64 [a0] = a2
  8939: 01                       fallthrough
      :                          @476
  8940: 95 16 ff 07              s1 = sp + 0x7ff
  8944: 95 66 99 03              s1 = s1 + 0x399
  8948: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8952: 33 08 01                 a1 = 0x1
  8955: 50 20 e6 00 a8 1a        ra = 230, jump @984
      :                          @477 [@dyn 115]
  8961: 95 17 58                 a0 = sp + 0x58
  8964: 33 08 03                 a1 = 0x3
  8967: 0a 0d                    ecalli 13 // 'query'
  8969: 7b 67                    u64 [s1] = a0
  8971: 33 07 c8 0c 01           a0 = 0x10cc8
  8976: 7b 17 98 01              u64 [sp + 0x198] = a0
  8980: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8985: 49 21 b8 01              u64 [sp + 440] = 0
  8989: 95 17 ff 07              a0 = sp + 0x7ff
  8993: 95 77 b1 03              a0 = a0 + 0x3b1
  8997: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9001: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9006: 82 17 30                 a0 = u64 [sp + 0x30]
  9009: 7b 67 18                 u64 [s1 + 0x18] = a0
  9012: 82 17 40                 a0 = u64 [sp + 0x40]
  9015: 7b 67 20                 u64 [s1 + 0x20] = a0
  9018: 7b 66 28                 u64 [s1 + 0x28] = s1
  9021: 7b 67 30                 u64 [s1 + 0x30] = a0
  9024: 95 17 ff 07              a0 = sp + 0x7ff
  9028: 95 77 e1 03              a0 = a0 + 0x3e1
  9032: 95 18 98 01              a1 = sp + 0x198
  9036: 50 20 e8 00 44 0a        ra = 232, jump @648
      :                          @478 [@dyn 116]
  9042: 82 65 50                 s0 = u64 [s1 + 0x50]
  9045: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9048: 82 66 48                 s1 = u64 [s1 + 0x48]
  9051: 33 07 02                 a0 = 0x2
  9054: 33 08                    a1 = 0
  9056: 33 09                    a2 = 0
  9058: 64 5a                    a3 = s0
  9060: 33 00 ea 00              ra = 0xea
  9064: 0a 64                    ecalli 100 // 'log'
  9066: 01                       fallthrough
      :                          @479 [@dyn 117]
  9067: 82 17 48                 a0 = u64 [sp + 0x48]
  9070: c8 67 07                 a0 = a0 + s1
  9073: 53 27 00 f0 23           jump @485 if a0 <u 4294963200
      :                          @480
  9078: 33 07 20 00 03           a0 = 0x30020
  9083: 95 77 00 10              a0 = a0 + 0x1000
  9087: 01                       fallthrough
      :                          @481
  9088: 82 78                    a1 = u64 [a0]
  9090: c9 87 09                 a2 = a0 - a1
  9093: ab 59 0f                 jump @485 if a2 != s0
      :                          @482
  9096: c9 68 09                 a2 = a1 - s1
  9099: 01                       fallthrough
      :                          @483
  9100: 82 7a                    a3 = u64 [a0]
  9102: ab 8a f2                 jump @481 if a3 != a1
      :                          @484
  9105: 7b 79                    u64 [a0] = a2
  9107: 01                       fallthrough
      :                          @485
  9108: 95 16 ff 07              s1 = sp + 0x7ff
  9112: 95 66 99 03              s1 = s1 + 0x399
  9116: 82 67                    a0 = u64 [s1]
  9118: 33 08 02                 a1 = 0x2
  9121: 33 00 1c 01              ra = 0x11c
  9125: 28 fe 19                 jump @984
      :                          @486 [@dyn 118]
  9128: 95 17 58                 a0 = sp + 0x58
  9131: 33 08 03                 a1 = 0x3
  9134: 33 09 8f 03              a2 = 0x38f
  9138: 33 0a 8f 03              a3 = 0x38f
  9142: 0a 09                    ecalli 9 // 'new'
  9144: 7b 67 70                 u64 [s1 + 0x70] = a0
  9147: 7b 65 18                 u64 [s1 + 0x18] = s0
  9150: 82 18 40                 a1 = u64 [sp + 0x40]
  9153: 7b 68 20                 u64 [s1 + 0x20] = a1
  9156: 95 17 ff 07              a0 = sp + 0x7ff
  9160: 95 77 09 04              a0 = a0 + 0x409
  9164: 7b 67 28                 u64 [s1 + 0x28] = a0
  9167: 7b 68 30                 u64 [s1 + 0x30] = a1
  9170: 33 07 f8 0c 01           a0 = 0x10cf8
  9175: 7b 17 98 01              u64 [sp + 0x198] = a0
  9179: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9184: 49 21 b8 01              u64 [sp + 440] = 0
  9188: 95 17 ff 07              a0 = sp + 0x7ff
  9192: 95 77 b1 03              a0 = a0 + 0x3b1
  9196: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9200: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9205: 95 17 ff 07              a0 = sp + 0x7ff
  9209: 95 77 e1 03              a0 = a0 + 0x3e1
  9213: 95 18 98 01              a1 = sp + 0x198
  9217: 50 20 ee 00 8f 09        ra = 238, jump @648
      :                          @487 [@dyn 119]
  9223: 82 65 50                 s0 = u64 [s1 + 0x50]
  9226: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9229: 95 17 ff 07              a0 = sp + 0x7ff
  9233: 95 77 99 03              a0 = a0 + 0x399
  9237: 82 76 48                 s1 = u64 [a0 + 0x48]
  9240: 33 07 02                 a0 = 0x2
  9243: 33 08                    a1 = 0
  9245: 33 09                    a2 = 0
  9247: 64 5a                    a3 = s0
  9249: 33 00 f0 00              ra = 0xf0
  9253: 0a 64                    ecalli 100 // 'log'
  9255: 01                       fallthrough
      :                          @488 [@dyn 120]
  9256: 82 17 48                 a0 = u64 [sp + 0x48]
  9259: c8 67 07                 a0 = a0 + s1
  9262: 53 27 00 f0 23           jump @494 if a0 <u 4294963200
      :                          @489
  9267: 33 07 20 00 03           a0 = 0x30020
  9272: 95 77 00 10              a0 = a0 + 0x1000
  9276: 01                       fallthrough
      :                          @490
  9277: 82 78                    a1 = u64 [a0]
  9279: c9 87 09                 a2 = a0 - a1
  9282: ab 59 0f                 jump @494 if a2 != s0
      :                          @491
  9285: c9 68 09                 a2 = a1 - s1
  9288: 01                       fallthrough
      :                          @492
  9289: 82 7a                    a3 = u64 [a0]
  9291: ab 8a f2                 jump @490 if a3 != a1
      :                          @493
  9294: 7b 79                    u64 [a0] = a2
  9296: 01                       fallthrough
      :                          @494
  9297: 95 16 ff 07              s1 = sp + 0x7ff
  9301: 95 66 99 03              s1 = s1 + 0x399
  9305: 82 67 70                 a0 = u64 [s1 + 0x70]
  9308: 33 08 01                 a1 = 0x1
  9311: 50 20 f2 00 44 19        ra = 242, jump @984
      :                          @495 [@dyn 121]
  9317: 95 17 58                 a0 = sp + 0x58
  9320: 33 08 8f 03              a1 = 0x38f
  9324: 33 09 8f 03              a2 = 0x38f
  9328: 0a 0a                    ecalli 10 // 'upgrade'
  9330: 7b 67 78                 u64 [s1 + 0x78] = a0
  9333: 95 17 ff 07              a0 = sp + 0x7ff
  9337: 95 77 11 04              a0 = a0 + 0x411
  9341: 7b 67 28                 u64 [s1 + 0x28] = a0
  9344: 33 07 28 0d 01           a0 = 0x10d28
  9349: 7b 17 98 01              u64 [sp + 0x198] = a0
  9353: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9358: 49 21 b8 01              u64 [sp + 440] = 0
  9362: 95 17 ff 07              a0 = sp + 0x7ff
  9366: 95 77 b1 03              a0 = a0 + 0x3b1
  9370: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9374: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9379: 82 17 30                 a0 = u64 [sp + 0x30]
  9382: 7b 67 18                 u64 [s1 + 0x18] = a0
  9385: 82 17 40                 a0 = u64 [sp + 0x40]
  9388: 7b 67 20                 u64 [s1 + 0x20] = a0
  9391: 7b 67 30                 u64 [s1 + 0x30] = a0
  9394: 95 17 ff 07              a0 = sp + 0x7ff
  9398: 95 77 e1 03              a0 = a0 + 0x3e1
  9402: 95 18 98 01              a1 = sp + 0x198
  9406: 50 20 f4 00 d2 08        ra = 244, jump @648
      :                          @496 [@dyn 122]
  9412: 82 65 50                 s0 = u64 [s1 + 0x50]
  9415: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9418: 82 66 48                 s1 = u64 [s1 + 0x48]
  9421: 33 07 02                 a0 = 0x2
  9424: 33 08                    a1 = 0
  9426: 33 09                    a2 = 0
  9428: 64 5a                    a3 = s0
  9430: 33 00 f6 00              ra = 0xf6
  9434: 0a 64                    ecalli 100 // 'log'
  9436: 01                       fallthrough
      :                          @497 [@dyn 123]
  9437: 82 17 48                 a0 = u64 [sp + 0x48]
  9440: c8 67 07                 a0 = a0 + s1
  9443: 53 27 00 f0 23           jump @503 if a0 <u 4294963200
      :                          @498
  9448: 33 07 20 00 03           a0 = 0x30020
  9453: 95 77 00 10              a0 = a0 + 0x1000
  9457: 01                       fallthrough
      :                          @499
  9458: 82 78                    a1 = u64 [a0]
  9460: c9 87 09                 a2 = a0 - a1
  9463: ab 59 0f                 jump @503 if a2 != s0
      :                          @500
  9466: c9 68 09                 a2 = a1 - s1
  9469: 01                       fallthrough
      :                          @501
  9470: 82 7a                    a3 = u64 [a0]
  9472: ab 8a f2                 jump @499 if a3 != a1
      :                          @502
  9475: 7b 79                    u64 [a0] = a2
  9477: 01                       fallthrough
      :                          @503
  9478: 95 16 ff 07              s1 = sp + 0x7ff
  9482: 95 66 99 03              s1 = s1 + 0x399
  9486: 82 67 78                 a0 = u64 [s1 + 0x78]
  9489: 33 08 02                 a1 = 0x2
  9492: 33 05 02                 s0 = 0x2
  9495: 50 20 f8 00 8c 18        ra = 248, jump @984
      :                          @504 [@dyn 124]
  9501: 48 06 8f 03              u32 [s1 + 0] = 0x38f
  9505: 48 16 08                 u32 [s1 + 8] = 0
  9508: 48 16 04 8f 03           u32 [s1 + 4] = 0x38f
  9513: 33 08 01                 a1 = 0x1
  9516: 33 09 01                 a2 = 0x1
  9519: 95 1a ff 07              a3 = sp + 0x7ff
  9523: 95 aa 99 03              a3 = a3 + 0x399
  9527: 33 0b 01                 a4 = 0x1
  9530: 33 07                    a0 = 0
  9532: 0a 05                    ecalli 5 // 'bless'
  9534: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9538: 95 17 ff 07              a0 = sp + 0x7ff
  9542: 95 77 19 04              a0 = a0 + 0x419
  9546: 7b 67 28                 u64 [s1 + 0x28] = a0
  9549: 33 07 58 0d 01           a0 = 0x10d58
  9554: 7b 17 98 01              u64 [sp + 0x198] = a0
  9558: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9563: 49 21 b8 01              u64 [sp + 440] = 0
  9567: 95 17 ff 07              a0 = sp + 0x7ff
  9571: 95 77 b1 03              a0 = a0 + 0x3b1
  9575: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9579: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  9583: 82 17 30                 a0 = u64 [sp + 0x30]
  9586: 7b 67 18                 u64 [s1 + 0x18] = a0
  9589: 82 17 40                 a0 = u64 [sp + 0x40]
  9592: 7b 67 20                 u64 [s1 + 0x20] = a0
  9595: 7b 67 30                 u64 [s1 + 0x30] = a0
  9598: 95 17 ff 07              a0 = sp + 0x7ff
  9602: 95 77 e1 03              a0 = a0 + 0x3e1
  9606: 95 18 98 01              a1 = sp + 0x198
  9610: 50 20 fa 00 06 08        ra = 250, jump @648
      :                          @505 [@dyn 125]
  9616: 82 65 50                 s0 = u64 [s1 + 0x50]
  9619: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9622: 82 66 48                 s1 = u64 [s1 + 0x48]
  9625: 33 07 02                 a0 = 0x2
  9628: 33 08                    a1 = 0
  9630: 33 09                    a2 = 0
  9632: 64 5a                    a3 = s0
  9634: 33 00 fc 00              ra = 0xfc
  9638: 0a 64                    ecalli 100 // 'log'
  9640: 01                       fallthrough
      :                          @506 [@dyn 126]
  9641: 82 17 48                 a0 = u64 [sp + 0x48]
  9644: c8 67 07                 a0 = a0 + s1
  9647: 53 27 00 f0 23           jump @512 if a0 <u 4294963200
      :                          @507
  9652: 33 07 20 00 03           a0 = 0x30020
  9657: 95 77 00 10              a0 = a0 + 0x1000
  9661: 01                       fallthrough
      :                          @508
  9662: 82 78                    a1 = u64 [a0]
  9664: c9 87 09                 a2 = a0 - a1
  9667: ab 59 0f                 jump @512 if a2 != s0
      :                          @509
  9670: c9 68 09                 a2 = a1 - s1
  9673: 01                       fallthrough
      :                          @510
  9674: 82 7a                    a3 = u64 [a0]
  9676: ab 8a f2                 jump @508 if a3 != a1
      :                          @511
  9679: 7b 79                    u64 [a0] = a2
  9681: 01                       fallthrough
      :                          @512
  9682: 95 16 ff 07              s1 = sp + 0x7ff
  9686: 95 66 99 03              s1 = s1 + 0x399
  9690: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9694: 33 08 05                 a1 = 0x5
  9697: 33 00 1c 01              ra = 0x11c
  9701: 28 be 17                 jump @984
      :                          @513 [@dyn 127]
  9704: 95 17 55                 a0 = sp + 0x55
  9707: 33 08 03                 a1 = 0x3
  9710: 33 09                    a2 = 0
  9712: 33 0a                    a3 = 0
  9714: 0a 03                    ecalli 3 // 'write'
  9716: 7b 67 68                 u64 [s1 + 0x68] = a0
  9719: 33 07 50 00 01           a0 = 0x10050
  9724: 7b 17 10                 u64 [sp + 0x10] = a0
  9727: 7b 67 18                 u64 [s1 + 0x18] = a0
  9730: 82 18 40                 a1 = u64 [sp + 0x40]
  9733: 7b 68 20                 u64 [s1 + 0x20] = a1
  9736: 95 17 ff 07              a0 = sp + 0x7ff
  9740: 95 77 01 04              a0 = a0 + 0x401
  9744: 7b 67 28                 u64 [s1 + 0x28] = a0
  9747: 7b 68 30                 u64 [s1 + 0x30] = a1
  9750: 33 07 88 0d 01           a0 = 0x10d88
  9755: 7b 17 98 01              u64 [sp + 0x198] = a0
  9759: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9764: 49 21 b8 01              u64 [sp + 440] = 0
  9768: 95 17 ff 07              a0 = sp + 0x7ff
  9772: 95 77 b1 03              a0 = a0 + 0x3b1
  9776: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9780: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9785: 95 17 ff 07              a0 = sp + 0x7ff
  9789: 95 77 e1 03              a0 = a0 + 0x3e1
  9793: 95 18 98 01              a1 = sp + 0x198
  9797: 50 20 00 01 4b 07        ra = 256, jump @648
      :                          @514 [@dyn 128]
  9803: 82 65 50                 s0 = u64 [s1 + 0x50]
  9806: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9809: 95 17 ff 07              a0 = sp + 0x7ff
  9813: 95 77 99 03              a0 = a0 + 0x399
  9817: 82 76 48                 s1 = u64 [a0 + 0x48]
  9820: 33 07 02                 a0 = 0x2
  9823: 33 08                    a1 = 0
  9825: 33 09                    a2 = 0
  9827: 64 5a                    a3 = s0
  9829: 33 00 02 01              ra = 0x102
  9833: 0a 64                    ecalli 100 // 'log'
  9835: 01                       fallthrough
      :                          @515 [@dyn 129]
  9836: 82 17 48                 a0 = u64 [sp + 0x48]
  9839: c8 67 07                 a0 = a0 + s1
  9842: 33 08 20 00 03           a1 = 0x30020
  9847: 7b 18 08                 u64 [sp + 0x8] = a1
  9850: 53 27 00 f0 21           jump @521 if a0 <u 4294963200
      :                          @516
  9855: 82 18 08                 a1 = u64 [sp + 0x8]
  9858: 95 87 00 10              a0 = a1 + 0x1000
  9862: 01                       fallthrough
      :                          @517
  9863: 82 78                    a1 = u64 [a0]
  9865: c9 87 09                 a2 = a0 - a1
  9868: ab 59 0f                 jump @521 if a2 != s0
      :                          @518
  9871: c9 68 09                 a2 = a1 - s1
  9874: 01                       fallthrough
      :                          @519
  9875: 82 7a                    a3 = u64 [a0]
  9877: ab 8a f2                 jump @517 if a3 != a1
      :                          @520
  9880: 7b 79                    u64 [a0] = a2
  9882: 01                       fallthrough
      :                          @521
  9883: 95 16 ff 07              s1 = sp + 0x7ff
  9887: 95 66 99 03              s1 = s1 + 0x399
  9891: 82 67 68                 a0 = u64 [s1 + 0x68]
  9894: 33 08 01                 a1 = 0x1
  9897: 50 20 04 01 fa 16        ra = 260, jump @984
      :                          @522 [@dyn 130]
  9903: 95 17 55                 a0 = sp + 0x55
  9906: 33 08 03                 a1 = 0x3
  9909: 95 19 52                 a2 = sp + 0x52
  9912: 33 0a 03                 a3 = 0x3
  9915: 0a 03                    ecalli 3 // 'write'
  9917: 7b 67 70                 u64 [s1 + 0x70] = a0
  9920: 95 17 ff 07              a0 = sp + 0x7ff
  9924: 95 77 09 04              a0 = a0 + 0x409
  9928: 7b 67 28                 u64 [s1 + 0x28] = a0
  9931: 33 07 b8 0d 01           a0 = 0x10db8
  9936: 7b 17 98 01              u64 [sp + 0x198] = a0
  9940: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9945: 49 21 b8 01              u64 [sp + 440] = 0
  9949: 95 17 ff 07              a0 = sp + 0x7ff
  9953: 95 77 b1 03              a0 = a0 + 0x3b1
  9957: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9961: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9966: 82 17 10                 a0 = u64 [sp + 0x10]
  9969: 7b 67 18                 u64 [s1 + 0x18] = a0
  9972: 82 17 40                 a0 = u64 [sp + 0x40]
  9975: 7b 67 20                 u64 [s1 + 0x20] = a0
  9978: 7b 67 30                 u64 [s1 + 0x30] = a0
  9981: 95 17 ff 07              a0 = sp + 0x7ff
  9985: 95 77 e1 03              a0 = a0 + 0x3e1
  9989: 95 18 98 01              a1 = sp + 0x198
  9993: 50 20 06 01 87 06        ra = 262, jump @648
      :                          @523 [@dyn 131]
  9999: 82 65 50                 s0 = u64 [s1 + 0x50]
 10002: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10005: 82 66 48                 s1 = u64 [s1 + 0x48]
 10008: 33 07 02                 a0 = 0x2
 10011: 33 08                    a1 = 0
 10013: 33 09                    a2 = 0
 10015: 64 5a                    a3 = s0
 10017: 33 00 08 01              ra = 0x108
 10021: 0a 64                    ecalli 100 // 'log'
 10023: 01                       fallthrough
      :                          @524 [@dyn 132]
 10024: 82 17 48                 a0 = u64 [sp + 0x48]
 10027: c8 67 07                 a0 = a0 + s1
 10030: 53 27 00 f0 21           jump @530 if a0 <u 4294963200
      :                          @525
 10035: 82 18 08                 a1 = u64 [sp + 0x8]
 10038: 95 87 00 10              a0 = a1 + 0x1000
 10042: 01                       fallthrough
      :                          @526
 10043: 82 78                    a1 = u64 [a0]
 10045: c9 87 09                 a2 = a0 - a1
 10048: ab 59 0f                 jump @530 if a2 != s0
      :                          @527
 10051: c9 68 09                 a2 = a1 - s1
 10054: 01                       fallthrough
      :                          @528
 10055: 82 7a                    a3 = u64 [a0]
 10057: ab 8a f2                 jump @526 if a3 != a1
      :                          @529
 10060: 7b 79                    u64 [a0] = a2
 10062: 01                       fallthrough
      :                          @530
 10063: 95 16 ff 07              s1 = sp + 0x7ff
 10067: 95 66 99 03              s1 = s1 + 0x399
 10071: 82 67 70                 a0 = u64 [s1 + 0x70]
 10074: 33 08 02                 a1 = 0x2
 10077: 33 05 02                 s0 = 0x2
 10080: 50 20 0a 01 43 16        ra = 266, jump @984
      :                          @531 [@dyn 133]
 10086: 95 17 55                 a0 = sp + 0x55
 10089: 33 08 03                 a1 = 0x3
 10092: 33 09                    a2 = 0
 10094: 33 0a                    a3 = 0
 10096: 0a 03                    ecalli 3 // 'write'
 10098: 7b 67 78                 u64 [s1 + 0x78] = a0
 10101: 82 17 30                 a0 = u64 [sp + 0x30]
 10104: 7b 67 18                 u64 [s1 + 0x18] = a0
 10107: 82 18 40                 a1 = u64 [sp + 0x40]
 10110: 7b 68 20                 u64 [s1 + 0x20] = a1
 10113: 95 17 ff 07              a0 = sp + 0x7ff
 10117: 95 77 11 04              a0 = a0 + 0x411
 10121: 7b 67 28                 u64 [s1 + 0x28] = a0
 10124: 7b 68 30                 u64 [s1 + 0x30] = a1
 10127: 33 07 e8 0d 01           a0 = 0x10de8
 10132: 7b 17 98 01              u64 [sp + 0x198] = a0
 10136: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10141: 49 21 b8 01              u64 [sp + 440] = 0
 10145: 95 17 ff 07              a0 = sp + 0x7ff
 10149: 95 77 b1 03              a0 = a0 + 0x3b1
 10153: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10157: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 10161: 95 17 ff 07              a0 = sp + 0x7ff
 10165: 95 77 e1 03              a0 = a0 + 0x3e1
 10169: 95 18 98 01              a1 = sp + 0x198
 10173: 50 20 0c 01 d3 05        ra = 268, jump @648
      :                          @532 [@dyn 134]
 10179: 82 65 50                 s0 = u64 [s1 + 0x50]
 10182: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10185: 82 66 48                 s1 = u64 [s1 + 0x48]
 10188: 33 07 02                 a0 = 0x2
 10191: 33 08                    a1 = 0
 10193: 33 09                    a2 = 0
 10195: 64 5a                    a3 = s0
 10197: 33 00 0e 01              ra = 0x10e
 10201: 0a 64                    ecalli 100 // 'log'
 10203: 01                       fallthrough
      :                          @533 [@dyn 135]
 10204: 82 17 48                 a0 = u64 [sp + 0x48]
 10207: c8 67 07                 a0 = a0 + s1
 10210: 53 27 00 f0 21           jump @539 if a0 <u 4294963200
      :                          @534
 10215: 82 18 08                 a1 = u64 [sp + 0x8]
 10218: 95 87 00 10              a0 = a1 + 0x1000
 10222: 01                       fallthrough
      :                          @535
 10223: 82 78                    a1 = u64 [a0]
 10225: c9 87 09                 a2 = a0 - a1
 10228: ab 59 0f                 jump @539 if a2 != s0
      :                          @536
 10231: c9 68 09                 a2 = a1 - s1
 10234: 01                       fallthrough
      :                          @537
 10235: 82 7a                    a3 = u64 [a0]
 10237: ab 8a f2                 jump @535 if a3 != a1
      :                          @538
 10240: 7b 79                    u64 [a0] = a2
 10242: 01                       fallthrough
      :                          @539
 10243: 95 16 ff 07              s1 = sp + 0x7ff
 10247: 95 66 99 03              s1 = s1 + 0x399
 10251: 82 67 78                 a0 = u64 [s1 + 0x78]
 10254: 33 08 05                 a1 = 0x5
 10257: 50 20 10 01 92 15        ra = 272, jump @984
      :                          @540 [@dyn 136]
 10263: 95 18 55                 a1 = sp + 0x55
 10266: 33 09 03                 a2 = 0x3
 10269: 95 1a 98 00              a3 = sp + 0x98
 10273: 33 0c 00 01              a5 = 0x100
 10277: 82 17 38                 a0 = u64 [sp + 0x38]
 10280: 33 0b                    a4 = 0
 10282: 0a 02                    ecalli 2 // 'read'
 10284: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10288: 95 17 ff 07              a0 = sp + 0x7ff
 10292: 95 77 19 04              a0 = a0 + 0x419
 10296: 7b 67 28                 u64 [s1 + 0x28] = a0
 10299: 33 07 18 0e 01           a0 = 0x10e18
 10304: 7b 17 98 01              u64 [sp + 0x198] = a0
 10308: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10313: 49 21 b8 01              u64 [sp + 440] = 0
 10317: 95 17 ff 07              a0 = sp + 0x7ff
 10321: 95 77 b1 03              a0 = a0 + 0x3b1
 10325: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10329: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10334: 82 17 10                 a0 = u64 [sp + 0x10]
 10337: 7b 67 18                 u64 [s1 + 0x18] = a0
 10340: 82 17 40                 a0 = u64 [sp + 0x40]
 10343: 7b 67 20                 u64 [s1 + 0x20] = a0
 10346: 7b 67 30                 u64 [s1 + 0x30] = a0
 10349: 95 17 ff 07              a0 = sp + 0x7ff
 10353: 95 77 e1 03              a0 = a0 + 0x3e1
 10357: 95 18 98 01              a1 = sp + 0x198
 10361: 50 20 12 01 17 05        ra = 274, jump @648
      :                          @541 [@dyn 137]
 10367: 82 65 50                 s0 = u64 [s1 + 0x50]
 10370: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10373: 82 66 48                 s1 = u64 [s1 + 0x48]
 10376: 33 07 02                 a0 = 0x2
 10379: 33 08                    a1 = 0
 10381: 33 09                    a2 = 0
 10383: 64 5a                    a3 = s0
 10385: 33 00 14 01              ra = 0x114
 10389: 0a 64                    ecalli 100 // 'log'
 10391: 01                       fallthrough
      :                          @542 [@dyn 138]
 10392: 82 17 48                 a0 = u64 [sp + 0x48]
 10395: c8 67 07                 a0 = a0 + s1
 10398: 53 27 00 f0 21           jump @548 if a0 <u 4294963200
      :                          @543
 10403: 82 18 08                 a1 = u64 [sp + 0x8]
 10406: 95 87 00 10              a0 = a1 + 0x1000
 10410: 01                       fallthrough
      :                          @544
 10411: 82 78                    a1 = u64 [a0]
 10413: c9 87 09                 a2 = a0 - a1
 10416: ab 59 0f                 jump @548 if a2 != s0
      :                          @545
 10419: c9 68 09                 a2 = a1 - s1
 10422: 01                       fallthrough
      :                          @546
 10423: 82 7a                    a3 = u64 [a0]
 10425: ab 8a f2                 jump @544 if a3 != a1
      :                          @547
 10428: 7b 79                    u64 [a0] = a2
 10430: 01                       fallthrough
      :                          @548
 10431: 95 16 ff 07              s1 = sp + 0x7ff
 10435: 95 66 99 03              s1 = s1 + 0x399
 10439: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10443: 33 08 06                 a1 = 0x6
 10446: 50 20 16 01 d5 14        ra = 278, jump @984
      :                          @549 [@dyn 139]
 10452: 95 17 55                 a0 = sp + 0x55
 10455: 33 08 03                 a1 = 0x3
 10458: 33 09                    a2 = 0
 10460: 33 0a                    a3 = 0
 10462: 0a 03                    ecalli 3 // 'write'
 10464: 7b 67                    u64 [s1] = a0
 10466: 82 17 10                 a0 = u64 [sp + 0x10]
 10469: 7b 67 18                 u64 [s1 + 0x18] = a0
 10472: 33 07 48 0e 01           a0 = 0x10e48
 10477: 7b 17 98 01              u64 [sp + 0x198] = a0
 10481: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10486: 49 21 b8 01              u64 [sp + 440] = 0
 10490: 95 17 ff 07              a0 = sp + 0x7ff
 10494: 95 77 b1 03              a0 = a0 + 0x3b1
 10498: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10502: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10507: 82 17 40                 a0 = u64 [sp + 0x40]
 10510: 7b 67 20                 u64 [s1 + 0x20] = a0
 10513: 7b 66 28                 u64 [s1 + 0x28] = s1
 10516: 7b 67 30                 u64 [s1 + 0x30] = a0
 10519: 95 17 ff 07              a0 = sp + 0x7ff
 10523: 95 77 e1 03              a0 = a0 + 0x3e1
 10527: 95 18 98 01              a1 = sp + 0x198
 10531: 50 20 18 01 6d 04        ra = 280, jump @648
      :                          @550 [@dyn 140]
 10537: 82 65 50                 s0 = u64 [s1 + 0x50]
 10540: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10543: 82 66 48                 s1 = u64 [s1 + 0x48]
 10546: 33 07 02                 a0 = 0x2
 10549: 33 08                    a1 = 0
 10551: 33 09                    a2 = 0
 10553: 64 5a                    a3 = s0
 10555: 33 00 1a 01              ra = 0x11a
 10559: 0a 64                    ecalli 100 // 'log'
 10561: 01                       fallthrough
      :                          @551 [@dyn 141]
 10562: 82 17 48                 a0 = u64 [sp + 0x48]
 10565: c8 67 07                 a0 = a0 + s1
 10568: 53 27 00 f0 21           jump @557 if a0 <u 4294963200
      :                          @552
 10573: 82 18 08                 a1 = u64 [sp + 0x8]
 10576: 95 87 00 10              a0 = a1 + 0x1000
 10580: 01                       fallthrough
      :                          @553
 10581: 82 78                    a1 = u64 [a0]
 10583: c9 87 09                 a2 = a0 - a1
 10586: ab 59 0f                 jump @557 if a2 != s0
      :                          @554
 10589: c9 68 09                 a2 = a1 - s1
 10592: 01                       fallthrough
      :                          @555
 10593: 82 7a                    a3 = u64 [a0]
 10595: ab 8a f2                 jump @553 if a3 != a1
      :                          @556
 10598: 7b 79                    u64 [a0] = a2
 10600: 01                       fallthrough
      :                          @557
 10601: 95 16 ff 07              s1 = sp + 0x7ff
 10605: 95 66 99 03              s1 = s1 + 0x399
 10609: 82 67                    a0 = u64 [s1]
 10611: 33 08 07                 a1 = 0x7
 10614: 50 20 1c 01 2d 14        ra = 284, jump @984
      :                          @558 [@dyn 142]
 10620: 82 15 30                 s0 = u64 [sp + 0x30]
 10623: 01                       fallthrough
      :                          @559
 10624: 95 18 98 00              a1 = sp + 0x98
 10628: 82 17 38                 a0 = u64 [sp + 0x38]
 10631: 0a 04                    ecalli 4 // 'info'
 10633: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10637: 33 08 08                 a1 = 0x8
 10640: 50 20 1e 01 13 14        ra = 286, jump @984
      :                          @560 [@dyn 143]
 10646: 7b 65 18                 u64 [s1 + 0x18] = s0
 10649: 82 18 40                 a1 = u64 [sp + 0x40]
 10652: 7b 68 20                 u64 [s1 + 0x20] = a1
 10655: 95 17 ff 07              a0 = sp + 0x7ff
 10659: 95 77 19 04              a0 = a0 + 0x419
 10663: 7b 67 28                 u64 [s1 + 0x28] = a0
 10666: 7b 68 30                 u64 [s1 + 0x30] = a1
 10669: 33 07 78 0e 01           a0 = 0x10e78
 10674: 7b 17 98 01              u64 [sp + 0x198] = a0
 10678: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10683: 49 21 b8 01              u64 [sp + 440] = 0
 10687: 95 17 ff 07              a0 = sp + 0x7ff
 10691: 95 77 b1 03              a0 = a0 + 0x3b1
 10695: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10699: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10704: 95 17 ff 07              a0 = sp + 0x7ff
 10708: 95 77 e1 03              a0 = a0 + 0x3e1
 10712: 95 18 98 01              a1 = sp + 0x198
 10716: 50 20 20 01 b4 03        ra = 288, jump @648
      :                          @561 [@dyn 144]
 10722: 82 65 50                 s0 = u64 [s1 + 0x50]
 10725: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10728: 95 17 ff 07              a0 = sp + 0x7ff
 10732: 95 77 99 03              a0 = a0 + 0x399
 10736: 82 76 48                 s1 = u64 [a0 + 0x48]
 10739: 33 07 02                 a0 = 0x2
 10742: 33 08                    a1 = 0
 10744: 33 09                    a2 = 0
 10746: 64 5a                    a3 = s0
 10748: 33 00 22 01              ra = 0x122
 10752: 0a 64                    ecalli 100 // 'log'
 10754: 01                       fallthrough
      :                          @562 [@dyn 145]
 10755: 82 17 48                 a0 = u64 [sp + 0x48]
 10758: c8 67 07                 a0 = a0 + s1
 10761: 53 27 00 f0 25           jump @568 if a0 <u 4294963200
      :                          @563
 10766: 33 07 20 00 03           a0 = 0x30020
 10771: 95 77 00 10              a0 = a0 + 0x1000
 10775: 01                       fallthrough
      :                          @564
 10776: 82 78                    a1 = u64 [a0]
 10778: c9 87 09                 a2 = a0 - a1
 10781: ab 59 11                 jump @568 if a2 != s0
      :                          @565
 10784: c9 68 09                 a2 = a1 - s1
 10787: 01                       fallthrough
      :                          @566
 10788: 82 7a                    a3 = u64 [a0]
 10790: ab 8a f2                 jump @564 if a3 != a1
      :                          @567
 10793: 7b 79                    u64 [a0] = a2
 10795: 0a                       ecalli 0 // 'gas'
 10796: 28 04                    jump @569
      :                          @568
 10798: 0a                       ecalli 0 // 'gas'
 10799: 01                       fallthrough
      :                          @569
 10800: 95 16 ff 07              s1 = sp + 0x7ff
 10804: 95 66 99 03              s1 = s1 + 0x399
 10808: 7b 67                    u64 [s1] = a0
 10810: 33 08 09                 a1 = 0x9
 10813: 50 20 24 01 66 13        ra = 292, jump @984
      :                          @570 [@dyn 146]
 10819: 7b 66 48                 u64 [s1 + 0x48] = s1
 10822: 82 17 40                 a0 = u64 [sp + 0x40]
 10825: 7b 67 50                 u64 [s1 + 0x50] = a0
 10828: 33 07 a8 0e 01           a0 = 0x10ea8
 10833: 7b 17 98 01              u64 [sp + 0x198] = a0
 10837: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 10842: 49 21 b8 01              u64 [sp + 440] = 0
 10846: 95 17 ff 07              a0 = sp + 0x7ff
 10850: 95 77 e1 03              a0 = a0 + 0x3e1
 10854: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10858: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 10863: 95 17 ff 07              a0 = sp + 0x7ff
 10867: 95 77 b1 03              a0 = a0 + 0x3b1
 10871: 95 18 98 01              a1 = sp + 0x198
 10875: 50 20 26 01 15 03        ra = 294, jump @648
      :                          @571 [@dyn 147]
 10881: 82 65 20                 s0 = u64 [s1 + 0x20]
 10884: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10887: 82 66 18                 s1 = u64 [s1 + 0x18]
 10890: 33 07 02                 a0 = 0x2
 10893: 33 08                    a1 = 0
 10895: 33 09                    a2 = 0
 10897: 64 5a                    a3 = s0
 10899: 33 00 28 01              ra = 0x128
 10903: 0a 64                    ecalli 100 // 'log'
 10905: 01                       fallthrough
      :                          @572 [@dyn 148]
 10906: 82 17 48                 a0 = u64 [sp + 0x48]
 10909: c8 67 07                 a0 = a0 + s1
 10912: 53 27 00 f0 25           jump @578 if a0 <u 4294963200
      :                          @573
 10917: 33 07 20 00 03           a0 = 0x30020
 10922: 95 77 00 10              a0 = a0 + 0x1000
 10926: 01                       fallthrough
      :                          @574
 10927: 82 78                    a1 = u64 [a0]
 10929: c9 87 09                 a2 = a0 - a1
 10932: ab 59 11                 jump @578 if a2 != s0
      :                          @575
 10935: c9 68 09                 a2 = a1 - s1
 10938: 01                       fallthrough
      :                          @576
 10939: 82 7a                    a3 = u64 [a0]
 10941: ab 8a f2                 jump @574 if a3 != a1
      :                          @577
 10944: 7b 79                    u64 [a0] = a2
 10946: 33 0b                    a4 = 0
 10948: 01                       fallthrough
      :                          @578
 10949: 49 21 b0 01              u64 [sp + 432] = 0
 10953: 49 21 a8 01              u64 [sp + 424] = 0
 10957: 49 21 a0 01              u64 [sp + 416] = 0
 10961: 49 21 98 01              u64 [sp + 408] = 0
 10965: 82 19 20                 a2 = u64 [sp + 0x20]
 10968: 82 1a 28                 a3 = u64 [sp + 0x28]
 10971: 55 19 21 79              jump @589 if a2 >=u 33
      :                          @579
 10975: 97 a6 20                 s1 = a3 << 0x20
 10978: 98 66 20                 s1 = s1 >> 0x20
 10981: 95 17 98 01              a0 = sp + 0x198
 10985: 95 15 98 01              s0 = sp + 0x198
 10989: 82 18 18                 a1 = u64 [sp + 0x18]
 10992: 50 20 2a 01 15 05        ra = 298, jump @698
      :                          @580 [@dyn 149]
 10998: 3a 08 00 00 03           a1 = u64 [0x30000]
 11003: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 11013: ca 76 07                 a0 = s1 * a0
 11016: ae 87 2c                 jump @585 if a0 >=u a1
      :                          @581
 11019: 82 18 28                 a1 = u64 [sp + 0x28]
 11022: 51 18 09 18              jump @583 if a1 == 9
      :                          @582
 11026: 0a 08                    ecalli 8 // 'checkpoint'
 11028: 33 0a 6d 05 01           a3 = 0x1056d
 11033: 33 07 02                 a0 = 0x2
 11036: 33 0b 11                 a4 = 0x11
 11039: 33 08                    a1 = 0
 11041: 33 09                    a2 = 0
 11043: 0a 64                    ecalli 100 // 'log'
 11045: 01                       fallthrough
      :                          @583
 11046: 95 67 2a                 a0 = s1 + 0x2a
 11049: 33 08 07                 a1 = 0x7
 11052: 50 20 2c 01 77 12        ra = 300, jump @984
      :                          @584 [@dyn 150]
 11058: 32 07                    jump [a0]
      :                          @585
 11060: 95 17 98 01              a0 = sp + 0x198
 11064: 0a 10                    ecalli 16 // 'oyield'
 11066: 33 0a 02 04 01           a3 = 0x10402
 11071: 33 07 02                 a0 = 0x2
 11074: 33 0b 10                 a4 = 0x10
 11077: 33 08                    a1 = 0
 11079: 33 09                    a2 = 0
 11081: 0a 64                    ecalli 100 // 'log'
 11083: 33 08 20                 a1 = 0x20
 11086: 28 41 e4                 jump @230
      :                          @586
 11089: 00                       trap
      :                          @587
 11090: 00                       trap
      :                          @588
 11091: 00                       trap
      :                          @589
 11092: 00                       trap
      :                          @590
 11093: 00                       trap
      :                          @591 [export #2: 'on_transfer']
 11094: 33 07 00 00 01           a0 = 0x10000
 11099: 33 08                    a1 = 0
 11101: 32 00                    ret
      :                          @592
 11103: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 11106: 7b 10 40                 u64 [sp + 0x40] = ra
 11109: 7b 15 38                 u64 [sp + 0x38] = s0
 11112: 7b 16 30                 u64 [sp + 0x30] = s1
 11115: c8 89 09                 a2 = a2 + a1
 11118: ac 89 53                 jump @600 if a2 <u a1
      :                          @593
 11121: 64 75                    s0 = a0
 11123: 82 77                    a0 = u64 [a0]
 11125: 97 78 01                 a1 = a0 << 0x1
 11128: 33 0a 08                 a3 = 0x8
 11131: e4 a9 09                 a2 = maxu(a2, a3)
 11134: e4 98 06                 s1 = maxu(a1, a2)
 11137: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 11140: 98 88 3f                 a1 = a1 >> 0x3f
 11143: 51 07 12                 jump @595 if a0 == 0
      :                          @594
 11146: 82 59 08                 a2 = u64 [s0 + 0x8]
 11149: 7b 19 18                 u64 [sp + 0x18] = a2
 11152: 49 11 20 01              u64 [sp + 32] = 0x1
 11156: 7b 17 28                 u64 [sp + 0x28] = a0
 11159: 28 06                    jump @596
      :                          @595
 11161: 49 11 20                 u64 [sp + 32] = 0
 11164: 01                       fallthrough
      :                          @596
 11165: 64 17                    a0 = sp
 11167: 95 1a 18                 a3 = sp + 0x18
 11170: 64 69                    a2 = s1
 11172: 50 20 2e 01 33           ra = 302, jump @604
      :                          @597 [@dyn 151]
 11177: 82 18                    a1 = u64 [sp]
 11179: 82 17 08                 a0 = u64 [sp + 0x8]
 11182: 51 08 14                 jump @601 if a1 == 0
      :                          @598
 11185: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 11195: aa 87 0d                 jump @602 if a0 == a1
      :                          @599
 11198: 52 07 18                 jump @603 if a0 != 0
      :                          @600
 11201: 00                       trap
      :                          @601
 11202: 7b 57 08                 u64 [s0 + 0x8] = a0
 11205: 7b 56                    u64 [s0] = s1
 11207: 01                       fallthrough
      :                          @602
 11208: 82 10 40                 ra = u64 [sp + 0x40]
 11211: 82 15 38                 s0 = u64 [sp + 0x38]
 11214: 82 16 30                 s1 = u64 [sp + 0x30]
 11217: 95 11 48                 sp = sp + 0x48
 11220: 32 00                    ret
      :                          @603
 11222: 00                       trap
      :                          @604
 11223: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 11226: 7b 10 30                 u64 [sp + 0x30] = ra
 11229: 7b 15 28                 u64 [sp + 0x28] = s0
 11232: 7b 16 20                 u64 [sp + 0x20] = s1
 11235: 64 96                    s1 = a2
 11237: 64 73                    t1 = a0
 11239: 51 08 6f                 jump @614 if a1 == 0
      :                          @605
 11242: 82 a7 08                 a0 = u64 [a3 + 0x8]
 11245: 51 07 72                 jump @615 if a0 == 0
      :                          @606
 11248: 82 a9 10                 a2 = u64 [a3 + 0x10]
 11251: 51 09 9f 00              jump @622 if a2 == 0
      :                          @607
 11255: 82 a8                    a1 = u64 [a3]
 11257: 33 02 00 10              t0 = 0x1000
 11261: 33 04 20 00 03           t2 = 0x30020
 11266: c8 24 07                 a0 = t2 + t0
 11269: 01                       fallthrough
      :                          @608
 11270: 82 7a                    a3 = u64 [a0]
 11272: c8 6a 05                 s0 = a3 + s1
 11275: ac a5 c3 00              jump @628 if s0 <u a3
      :                          @609
 11279: 95 5b 01                 a4 = s0 + 0x1
 11282: 88 bc 01                 a5 = a4 <u 0x1
 11285: d8 b2 0b                 a4 = t0 <u a4
 11288: d4 cb 0b                 a4 = a4 | a5
 11291: 52 0b b3 00              jump @628 if a4 != 0
      :                          @610
 11295: 82 7b                    a4 = u64 [a0]
 11297: ab ab e5                 jump @608 if a4 != a3
      :                          @611
 11300: 7b 75                    u64 [a0] = s0
 11302: 33 0c                    a5 = 0
 11304: 7b 13 18                 u64 [sp + 0x18] = t1
 11307: c9 54 07                 a0 = t2 - s0
 11310: 95 77 00 10              a0 = a0 + 0x1000
 11314: 7b 17 10                 u64 [sp + 0x10] = a0
 11317: 7b 18 08                 u64 [sp + 0x8] = a1
 11320: 64 95                    s0 = a2
 11322: 7b 14                    u64 [sp] = t2
 11324: 50 20 30 01 c9 03        ra = 304, jump @698
      :                          @612 [@dyn 152]
 11330: 54 25 00 10 94 00        jump @629 if s0 <=u 4096
      :                          @613
 11336: 82 13 18                 t1 = u64 [sp + 0x18]
 11339: 82 18 10                 a1 = u64 [sp + 0x10]
 11342: 33 07                    a0 = 0
 11344: 7b 38 08                 u64 [t1 + 0x8] = a1
 11347: 28 b1 00                 jump @635
      :                          @614
 11350: 49 13 08                 u64 [t1 + 8] = 0
 11353: 33 07 01                 a0 = 0x1
 11356: 28 a8 00                 jump @635
      :                          @615
 11359: 33 07 00 10              a0 = 0x1000
 11363: 33 02 20 00 03           t0 = 0x30020
 11368: c8 72 09                 a2 = t0 + a0
 11371: 01                       fallthrough
      :                          @616
 11372: 82 9b                    a4 = u64 [a2]
 11374: c8 6b 0a                 a3 = a4 + s1
 11377: ac ba 5d                 jump @628 if a3 <u a4
      :                          @617
 11380: 95 ac 01                 a5 = a3 + 0x1
 11383: 88 c8 01                 a1 = a5 <u 0x1
 11386: d8 c7 0c                 a5 = a0 <u a5
 11389: d4 c8 08                 a1 = a1 | a5
 11392: 52 08 4e                 jump @628 if a1 != 0
      :                          @618
 11395: 82 98                    a1 = u64 [a2]
 11397: ab b8 e7                 jump @616 if a1 != a4
      :                          @619
 11400: 7b 9a                    u64 [a2] = a3
 11402: 33 0c                    a5 = 0
 11404: 01                       fallthrough
      :                          @620
 11405: ab b8 df                 jump @616 if a1 != a4
      :                          @621
 11408: 28 30                    jump @627
      :                          @622
 11410: 33 07 00 10              a0 = 0x1000
 11414: 33 02 20 00 03           t0 = 0x30020
 11419: c8 72 09                 a2 = t0 + a0
 11422: 01                       fallthrough
      :                          @623
 11423: 82 9b                    a4 = u64 [a2]
 11425: c8 6b 0a                 a3 = a4 + s1
 11428: ac ba 2a                 jump @628 if a3 <u a4
      :                          @624
 11431: 95 ac 01                 a5 = a3 + 0x1
 11434: 88 c8 01                 a1 = a5 <u 0x1
 11437: d8 c7 0c                 a5 = a0 <u a5
 11440: d4 c8 08                 a1 = a1 | a5
 11443: 52 08 1b                 jump @628 if a1 != 0
      :                          @625
 11446: 82 98                    a1 = u64 [a2]
 11448: ab b8 e7                 jump @623 if a1 != a4
      :                          @626
 11451: 7b 9a                    u64 [a2] = a3
 11453: 33 0c                    a5 = 0
 11455: 01                       fallthrough
      :                          @627
 11456: c9 a2 07                 a0 = t0 - a3
 11459: 95 78 00 10              a1 = a0 + 0x1000
 11463: 33 07                    a0 = 0
 11465: 7b 38 08                 u64 [t1 + 0x8] = a1
 11468: 28 38                    jump @635
      :                          @628
 11470: 33 07 01                 a0 = 0x1
 11473: 7b 37 08                 u64 [t1 + 0x8] = a0
 11476: 28 30                    jump @635
      :                          @629
 11478: 64 5c                    a5 = s0
 11480: 82 18                    a1 = u64 [sp]
 11482: 95 87 00 10              a0 = a1 + 0x1000
 11486: 82 13 18                 t1 = u64 [sp + 0x18]
 11489: 82 15 08                 s0 = u64 [sp + 0x8]
 11492: 01                       fallthrough
      :                          @630
 11493: 82 78                    a1 = u64 [a0]
 11495: c9 87 09                 a2 = a0 - a1
 11498: ab 59 11                 jump @634 if a2 != s0
      :                          @631
 11501: c9 c8 09                 a2 = a1 - a5
 11504: 01                       fallthrough
      :                          @632
 11505: 82 7a                    a3 = u64 [a0]
 11507: ab 8a f2                 jump @630 if a3 != a1
      :                          @633
 11510: 7b 79                    u64 [a0] = a2
 11512: 33 0b                    a4 = 0
 11514: 01                       fallthrough
      :                          @634
 11515: 82 18 10                 a1 = u64 [sp + 0x10]
 11518: 33 07                    a0 = 0
 11520: 7b 38 08                 u64 [t1 + 0x8] = a1
 11523: 01                       fallthrough
      :                          @635
 11524: 7b 36 10                 u64 [t1 + 0x10] = s1
 11527: 7b 37                    u64 [t1] = a0
 11529: 82 10 30                 ra = u64 [sp + 0x30]
 11532: 82 15 28                 s0 = u64 [sp + 0x28]
 11535: 82 16 20                 s1 = u64 [sp + 0x20]
 11538: 95 11 38                 sp = sp + 0x38
 11541: 32 00                    ret
      :                          @636
 11543: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 11546: 7b 10 40                 u64 [sp + 0x40] = ra
 11549: 7b 15 38                 u64 [sp + 0x38] = s0
 11552: 7b 16 30                 u64 [sp + 0x30] = s1
 11555: 95 88 01                 a1 = a1 + 0x1
 11558: 51 08 54                 jump @644 if a1 == 0
      :                          @637
 11561: 64 75                    s0 = a0
 11563: 82 77                    a0 = u64 [a0]
 11565: 97 79 01                 a2 = a0 << 0x1
 11568: 33 0a 08                 a3 = 0x8
 11571: e4 a8 08                 a1 = maxu(a1, a3)
 11574: e4 89 06                 s1 = maxu(a2, a1)
 11577: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 11580: 98 88 3f                 a1 = a1 >> 0x3f
 11583: 51 07 12                 jump @639 if a0 == 0
      :                          @638
 11586: 82 59 08                 a2 = u64 [s0 + 0x8]
 11589: 7b 19 18                 u64 [sp + 0x18] = a2
 11592: 49 11 20 01              u64 [sp + 32] = 0x1
 11596: 7b 17 28                 u64 [sp + 0x28] = a0
 11599: 28 06                    jump @640
      :                          @639
 11601: 49 11 20                 u64 [sp + 32] = 0
 11604: 01                       fallthrough
      :                          @640
 11605: 64 17                    a0 = sp
 11607: 95 1a 18                 a3 = sp + 0x18
 11610: 64 69                    a2 = s1
 11612: 50 20 32 01 7b fe        ra = 306, jump @604
      :                          @641 [@dyn 153]
 11618: 82 18                    a1 = u64 [sp]
 11620: 82 17 08                 a0 = u64 [sp + 0x8]
 11623: 51 08 14                 jump @645 if a1 == 0
      :                          @642
 11626: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 11636: aa 87 0d                 jump @646 if a0 == a1
      :                          @643
 11639: 52 07 18                 jump @647 if a0 != 0
      :                          @644
 11642: 00                       trap
      :                          @645
 11643: 7b 57 08                 u64 [s0 + 0x8] = a0
 11646: 7b 56                    u64 [s0] = s1
 11648: 01                       fallthrough
      :                          @646
 11649: 82 10 40                 ra = u64 [sp + 0x40]
 11652: 82 15 38                 s0 = u64 [sp + 0x38]
 11655: 82 16 30                 s1 = u64 [sp + 0x30]
 11658: 95 11 48                 sp = sp + 0x48
 11661: 32 00                    ret
      :                          @647
 11663: 00                       trap
      :                          @648
 11664: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 11667: 7b 10 30                 u64 [sp + 0x30] = ra
 11670: 7b 15 28                 u64 [sp + 0x28] = s0
 11673: 7b 16 20                 u64 [sp + 0x20] = s1
 11676: 64 89                    a2 = a1
 11678: 82 8a 08                 a3 = u64 [a1 + 0x8]
 11681: 64 75                    s0 = a0
 11683: 51 0a 35                 jump @653 if a3 == 0
      :                          @649
 11686: 82 98                    a1 = u64 [a2]
 11688: 33 07                    a0 = 0
 11690: 95 8b 08                 a4 = a1 + 0x8
 11693: 01                       fallthrough
      :                          @650
 11694: 82 bc                    a5 = u64 [a4]
 11696: c8 c7 07                 a0 = a0 + a5
 11699: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 11702: 95 bb 10                 a4 = a4 + 0x10
 11705: 52 0a f5                 jump @650 if a3 != 0
      :                          @651
 11708: 82 9a 18                 a3 = u64 [a2 + 0x18]
 11711: 51 0a 24                 jump @655 if a3 == 0
      :                          @652
 11714: 82 88 08                 a1 = u64 [a1 + 0x8]
 11717: 8e 88                    a1 = a1 >u 0
 11719: 88 7a 10                 a3 = a0 <u 0x10
 11722: 85 aa 01                 a3 = a3 ^ 0x1
 11725: d4 a8 08                 a1 = a1 | a3
 11728: 89 7a                    a3 = a0 <s 0
 11730: e0 a8 08                 a1 = a1 & ~a3
 11733: 52 08 0a                 jump @654 if a1 != 0
      :                          @653
 11736: 33 07                    a0 = 0
 11738: 33 08 01                 a1 = 0x1
 11741: 28 48                    jump @663
      :                          @654
 11743: 97 77 01                 a0 = a0 << 0x1
 11746: 01                       fallthrough
      :                          @655
 11747: 51 07 3e                 jump @662 if a0 == 0
      :                          @656
 11750: 57 07 77                 jump @668 if a0 <s 0
      :                          @657
 11753: 64 53                    t1 = s0
 11755: 33 08 00 10              a1 = 0x1000
 11759: 33 02 20 00 03           t0 = 0x30020
 11764: c8 82 0b                 a4 = t0 + a1
 11767: 01                       fallthrough
      :                          @658
 11768: 82 bc                    a5 = u64 [a4]
 11770: c8 7c 0a                 a3 = a5 + a0
 11773: ac ca 5e                 jump @666 if a3 <u a5
      :                          @659
 11776: 95 a5 01                 s0 = a3 + 0x1
 11779: 88 56 01                 s1 = s0 <u 0x1
 11782: d8 58 05                 s0 = a1 <u s0
 11785: d4 65 05                 s0 = s0 | s1
 11788: 52 05 4f                 jump @666 if s0 != 0
      :                          @660
 11791: 82 b6                    s1 = u64 [a4]
 11793: ab c6 e7                 jump @658 if s1 != a5
      :                          @661
 11796: 7b ba                    u64 [a4] = a3
 11798: c9 a2 08                 a1 = t0 - a3
 11801: 95 88 00 10              a1 = a1 + 0x1000
 11805: 64 35                    s0 = t1
 11807: 28 06                    jump @663
      :                          @662
 11809: 33 08 01                 a1 = 0x1
 11812: 01                       fallthrough
      :                          @663
 11813: 7b 17                    u64 [sp] = a0
 11815: 7b 18 08                 u64 [sp + 0x8] = a1
 11818: 49 11 10                 u64 [sp + 16] = 0
 11821: 33 08 c8 0e 01           a1 = 0x10ec8
 11826: 64 17                    a0 = sp
 11828: 50 20 34 01 6e 0a        ra = 308, jump @868
      :                          @664 [@dyn 154]
 11834: 52 07 22                 jump @667 if a0 != 0
      :                          @665
 11837: 82 17 10                 a0 = u64 [sp + 0x10]
 11840: 82 18 08                 a1 = u64 [sp + 0x8]
 11843: 82 19                    a2 = u64 [sp]
 11845: 7b 57 10                 u64 [s0 + 0x10] = a0
 11848: 7b 58 08                 u64 [s0 + 0x8] = a1
 11851: 7b 59                    u64 [s0] = a2
 11853: 82 10 30                 ra = u64 [sp + 0x30]
 11856: 82 15 28                 s0 = u64 [sp + 0x28]
 11859: 82 16 20                 s1 = u64 [sp + 0x20]
 11862: 95 11 38                 sp = sp + 0x38
 11865: 32 00                    ret
      :                          @666
 11867: 00                       trap
      :                          @667
 11868: 00                       trap
      :                          @668
 11869: 00                       trap
      :                          @669 [@dyn 155]
 11870: 82 72                    t0 = u64 [a0]
 11872: 33 09 00 f0              a2 = 0xfffffffffffff000
 11876: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
 11880: ac 9a 27                 jump @675 if a3 <u a2
      :                          @670
 11883: 82 77 08                 a0 = u64 [a0 + 0x8]
 11886: 33 09 20 00 03           a2 = 0x30020
 11891: 95 99 00 10              a2 = a2 + 0x1000
 11895: 01                       fallthrough
      :                          @671
 11896: 82 9a                    a3 = u64 [a2]
 11898: c9 a9 0b                 a4 = a2 - a3
 11901: ab 7b 12                 jump @675 if a4 != a0
      :                          @672
 11904: c9 2a 0b                 a4 = a3 - t0
 11907: 01                       fallthrough
      :                          @673
 11908: 82 9c                    a5 = u64 [a2]
 11910: ab ac f2                 jump @671 if a5 != a3
      :                          @674
 11913: 7b 9b                    u64 [a2] = a4
 11915: 33 08                    a1 = 0
 11917: 32 00                    ret
      :                          @675
 11919: 32 00                    ret
      :                          @676 [@dyn 156]
 11921: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 11924: 7b 10 18                 u64 [sp + 0x18] = ra
 11927: 7b 15 10                 u64 [sp + 0x10] = s0
 11930: 7b 16 08                 u64 [sp + 0x8] = s1
 11933: 64 75                    s0 = a0
 11935: 82 7a 10                 a3 = u64 [a0 + 0x10]
 11938: 82 77                    a0 = u64 [a0]
 11940: c9 a7 07                 a0 = a0 - a3
 11943: 64 96                    s1 = a2
 11945: ac 97 2b                 jump @679 if a0 <u a2
      :                          @677
 11948: 7b 1a                    u64 [sp] = a3
 11950: 82 57 08                 a0 = u64 [s0 + 0x8]
 11953: c8 a7 07                 a0 = a0 + a3
 11956: 64 69                    a2 = s1
 11958: 50 20 3a 01 4f 01        ra = 314, jump @698
      :                          @678 [@dyn 157]
 11964: 82 17                    a0 = u64 [sp]
 11966: c8 76 06                 s1 = s1 + a0
 11969: 7b 56 10                 u64 [s0 + 0x10] = s1
 11972: 33 07                    a0 = 0
 11974: 82 10 18                 ra = u64 [sp + 0x18]
 11977: 82 15 10                 s0 = u64 [sp + 0x10]
 11980: 82 16 08                 s1 = u64 [sp + 0x8]
 11983: 95 11 20                 sp = sp + 0x20
 11986: 32 00                    ret
      :                          @679
 11988: 64 57                    a0 = s0
 11990: 7b 18                    u64 [sp] = a1
 11992: 64 a8                    a1 = a3
 11994: 64 69                    a2 = s1
 11996: 50 20 3c 01 83 fc        ra = 316, jump @592
      :                          @680 [@dyn 158]
 12002: 82 18                    a1 = u64 [sp]
 12004: 82 5a 10                 a3 = u64 [s0 + 0x10]
 12007: 28 c5                    jump @677
      :                          @681 [@dyn 159]
 12009: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 12012: 7b 10 20                 u64 [sp + 0x20] = ra
 12015: 7b 15 18                 u64 [sp + 0x18] = s0
 12018: 7b 16 10                 u64 [sp + 0x10] = s1
 12021: 64 86                    s1 = a1
 12023: 83 88                    i32 a1 = a1 + 0
 12025: 33 09 80 00              a2 = 0x80
 12029: 64 7a                    a3 = a0
 12031: ae 98 2c                 jump @686 if a1 >=u a2
      :                          @682
 12034: 82 a8 10                 a1 = u64 [a3 + 0x10]
 12037: 82 a7                    a0 = u64 [a3]
 12039: ab 78 13                 jump @685 if a1 != a0
      :                          @683
 12042: 64 a7                    a0 = a3
 12044: 64 a5                    s0 = a3
 12046: 50 20 40 01 09 fe        ra = 320, jump @636
      :                          @684 [@dyn 160]
 12052: 64 5a                    a3 = s0
 12054: 82 58 10                 a1 = u64 [s0 + 0x10]
 12057: 01                       fallthrough
      :                          @685
 12058: 82 a7 08                 a0 = u64 [a3 + 0x8]
 12061: c8 87 07                 a0 = a0 + a1
 12064: 78 76                    u8 [a0] = s1
 12066: 95 88 01                 a1 = a1 + 0x1
 12069: 7b a8 10                 u64 [a3 + 0x10] = a1
 12072: 28 ac 00                 jump @694
      :                          @686
 12075: 8b 67 0b                 i32 a0 = s1 >> 0xb
 12078: 48 11 0c                 u32 [sp + 12] = 0
 12081: 52 07 1c                 jump @688 if a0 != 0
      :                          @687
 12084: 98 67 06                 a0 = s1 >> 0x6
 12087: 86 77 c0 00              a0 = a0 | 0xc0
 12091: 78 17 0c                 u8 [sp + 0xc] = a0
 12094: 84 67 3f                 a0 = s1 & 0x3f
 12097: 86 77 80 00              a0 = a0 | 0x80
 12101: 78 17 0d                 u8 [sp + 0xd] = a0
 12104: 33 06 02                 s1 = 0x2
 12107: 28 63                    jump @691
      :                          @688
 12109: 8b 67 10                 i32 a0 = s1 >> 0x10
 12112: 52 07 29                 jump @690 if a0 != 0
      :                          @689
 12115: 98 67 0c                 a0 = s1 >> 0xc
 12118: 86 77 e0 00              a0 = a0 | 0xe0
 12122: 78 17 0c                 u8 [sp + 0xc] = a0
 12125: 97 67 34                 a0 = s1 << 0x34
 12128: 98 77 3a                 a0 = a0 >> 0x3a
 12131: 95 77 80 00              a0 = a0 + 0x80
 12135: 78 17 0d                 u8 [sp + 0xd] = a0
 12138: 84 67 3f                 a0 = s1 & 0x3f
 12141: 86 77 80 00              a0 = a0 | 0x80
 12145: 78 17 0e                 u8 [sp + 0xe] = a0
 12148: 33 06 03                 s1 = 0x3
 12151: 28 37                    jump @691
      :                          @690
 12153: 97 67 2b                 a0 = s1 << 0x2b
 12156: 98 77 3d                 a0 = a0 >> 0x3d
 12159: 95 77 f0 00              a0 = a0 + 0xf0
 12163: 78 17 0c                 u8 [sp + 0xc] = a0
 12166: 97 67 2e                 a0 = s1 << 0x2e
 12169: 98 77 3a                 a0 = a0 >> 0x3a
 12172: 95 77 80 00              a0 = a0 + 0x80
 12176: 78 17 0d                 u8 [sp + 0xd] = a0
 12179: 97 67 34                 a0 = s1 << 0x34
 12182: 98 77 3a                 a0 = a0 >> 0x3a
 12185: 95 77 80 00              a0 = a0 + 0x80
 12189: 78 17 0e                 u8 [sp + 0xe] = a0
 12192: 84 67 3f                 a0 = s1 & 0x3f
 12195: 86 77 80 00              a0 = a0 | 0x80
 12199: 78 17 0f                 u8 [sp + 0xf] = a0
 12202: 33 06 04                 s1 = 0x4
 12205: 01                       fallthrough
      :                          @691
 12206: 82 a5 10                 s0 = u64 [a3 + 0x10]
 12209: 82 a7                    a0 = u64 [a3]
 12211: c9 57 07                 a0 = a0 - s0
 12214: ac 67 2e                 jump @695 if a0 <u s1
      :                          @692
 12217: 7b 1a                    u64 [sp] = a3
 12219: 82 a7 08                 a0 = u64 [a3 + 0x8]
 12222: c8 57 07                 a0 = a0 + s0
 12225: 95 18 0c                 a1 = sp + 0xc
 12228: 64 69                    a2 = s1
 12230: 50 20 42 01 3f           ra = 322, jump @698
      :                          @693 [@dyn 161]
 12235: c8 56 06                 s1 = s1 + s0
 12238: 82 17                    a0 = u64 [sp]
 12240: 7b 76 10                 u64 [a0 + 0x10] = s1
 12243: 01                       fallthrough
      :                          @694
 12244: 33 07                    a0 = 0
 12246: 82 10 20                 ra = u64 [sp + 0x20]
 12249: 82 15 18                 s0 = u64 [sp + 0x18]
 12252: 82 16 10                 s1 = u64 [sp + 0x10]
 12255: 95 11 28                 sp = sp + 0x28
 12258: 32 00                    ret
      :                          @695
 12260: 64 a7                    a0 = a3
 12262: 64 58                    a1 = s0
 12264: 64 69                    a2 = s1
 12266: 64 a5                    s0 = a3
 12268: 50 20 44 01 73 fb        ra = 324, jump @592
      :                          @696 [@dyn 162]
 12274: 64 5a                    a3 = s0
 12276: 82 55 10                 s0 = u64 [s0 + 0x10]
 12279: 28 c2                    jump @692
      :                          @697 [@dyn 163]
 12281: 64 8a                    a3 = a1
 12283: 33 08 c8 0e 01           a1 = 0x10ec8
 12288: 64 a9                    a2 = a3
 12290: 28 a0 08                 jump @868
      :                          @698
 12293: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 12296: 7b 10 18                 u64 [sp + 0x18] = ra
 12299: 7b 15 10                 u64 [sp + 0x10] = s0
 12302: 7b 16 08                 u64 [sp + 0x8] = s1
 12305: 53 19 10 64              jump @707 if a2 <u 16
      :                          @699
 12309: 8d 7a                    i32 a3 = -a0
 12311: 84 a2 07                 t0 = a3 & 0x7
 12314: c8 27 0b                 a4 = a0 + t0
 12317: 51 02 15                 jump @702 if t0 == 0
      :                          @700
 12320: 64 8c                    a5 = a1
 12322: 64 75                    s0 = a0
 12324: 01                       fallthrough
      :                          @701
 12325: 7c ca                    a3 = u8 [a5]
 12327: 78 5a                    u8 [s0] = a3
 12329: 95 55 01                 s0 = s0 + 0x1
 12332: 95 cc 01                 a5 = a5 + 0x1
 12335: ac b5 f6                 jump @701 if s0 <u a4
      :                          @702
 12338: c8 28 03                 t1 = a1 + t0
 12341: c9 29 02                 t0 = a2 - t0
 12344: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 12347: 84 38 07                 a1 = t1 & 0x7
 12350: c8 4b 0a                 a3 = a4 + t2
 12353: 51 08 3b                 jump @709 if a1 == 0
      :                          @703
 12356: 58 04 4b                 jump @712 if t2 <=s 0
      :                          @704
 12359: 97 38 03                 a1 = t1 << 0x3
 12362: 84 80 38                 ra = a1 & 0x38
 12365: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 12368: 82 c5                    s0 = u64 [a5]
 12370: 8d 88                    i32 a1 = -a1
 12372: 84 88 38                 a1 = a1 & 0x38
 12375: 95 cc 08                 a5 = a5 + 0x8
 12378: 01                       fallthrough
      :                          @705
 12379: 82 c6                    s1 = u64 [a5]
 12381: d0 05 05                 s0 = s0 >> ra
 12384: cf 86 09                 a2 = s1 << a1
 12387: d4 59 09                 a2 = a2 | s0
 12390: 7b b9                    u64 [a4] = a2
 12392: 95 bb 08                 a4 = a4 + 0x8
 12395: 95 cc 08                 a5 = a5 + 0x8
 12398: 64 65                    s0 = s1
 12400: ac ab eb                 jump @705 if a4 <u a3
      :                          @706
 12403: 28 1c                    jump @712
      :                          @707
 12405: 64 7a                    a3 = a0
 12407: 52 09 21                 jump @713 if a2 != 0
      :                          @708
 12410: 28 2f                    jump @715
      :                          @709
 12412: 58 04 13                 jump @712 if t2 <=s 0
      :                          @710
 12415: 64 38                    a1 = t1
 12417: 01                       fallthrough
      :                          @711
 12418: 82 89                    a2 = u64 [a1]
 12420: 7b b9                    u64 [a4] = a2
 12422: 95 bb 08                 a4 = a4 + 0x8
 12425: 95 88 08                 a1 = a1 + 0x8
 12428: ac ab f6                 jump @711 if a4 <u a3
      :                          @712
 12431: c8 43 08                 a1 = t1 + t2
 12434: 84 29 07                 a2 = t0 & 0x7
 12437: 51 09 14                 jump @715 if a2 == 0
      :                          @713
 12440: c8 a9 09                 a2 = a2 + a3
 12443: 01                       fallthrough
      :                          @714
 12444: 7c 8b                    a4 = u8 [a1]
 12446: 78 ab                    u8 [a3] = a4
 12448: 95 aa 01                 a3 = a3 + 0x1
 12451: 95 88 01                 a1 = a1 + 0x1
 12454: ac 9a f6                 jump @714 if a3 <u a2
      :                          @715
 12457: 82 10 18                 ra = u64 [sp + 0x18]
 12460: 82 15 10                 s0 = u64 [sp + 0x10]
 12463: 82 16 08                 s1 = u64 [sp + 0x8]
 12466: 95 11 20                 sp = sp + 0x20
 12469: 32 00                    ret
      :                          @716
 12471: 53 19 10 48              jump @725 if a2 <u 16
      :                          @717
 12475: 8d 7a                    i32 a3 = -a0
 12477: 84 aa 07                 a3 = a3 & 0x7
 12480: c8 a7 0b                 a4 = a0 + a3
 12483: 51 0a 0e                 jump @720 if a3 == 0
      :                          @718
 12486: 64 7c                    a5 = a0
 12488: 01                       fallthrough
      :                          @719
 12489: 78 c8                    u8 [a5] = a1
 12491: 95 cc 01                 a5 = a5 + 0x1
 12494: ac bc fb                 jump @719 if a5 <u a4
      :                          @720
 12497: c9 a9 03                 t1 = a2 - a3
 12500: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 12503: c8 cb 0a                 a3 = a4 + a5
 12506: 58 0c 1d                 jump @723 if a5 <=s 0
      :                          @721
 12509: 84 82 ff 00              t0 = a1 & 0xff
 12513: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 12523: ca 92 0c                 a5 = t0 * a2
 12526: 01                       fallthrough
      :                          @722
 12527: 7b bc                    u64 [a4] = a5
 12529: 95 bb 08                 a4 = a4 + 0x8
 12532: ac ab fb                 jump @722 if a4 <u a3
      :                          @723
 12535: 84 39 07                 a2 = t1 & 0x7
 12538: 52 09 0a                 jump @726 if a2 != 0
      :                          @724
 12541: 28 13                    jump @728
      :                          @725
 12543: 64 7a                    a3 = a0
 12545: 51 09 0f                 jump @728 if a2 == 0
      :                          @726
 12548: c8 a9 09                 a2 = a2 + a3
 12551: 01                       fallthrough
      :                          @727
 12552: 78 a8                    u8 [a3] = a1
 12554: 95 aa 01                 a3 = a3 + 0x1
 12557: ac 9a fb                 jump @727 if a3 <u a2
      :                          @728
 12560: 32 00                    ret
      :                          @729 [@dyn 164]
 12562: 82 77                    a0 = u64 [a0]
 12564: 01                       fallthrough
      :                          @730
 12565: 28                       jump @730
      :                          @731
 12566: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 12569: 7b 10 58                 u64 [sp + 0x58] = ra
 12572: 7b 15 50                 u64 [sp + 0x50] = s0
 12575: 7b 16 48                 u64 [sp + 0x48] = s1
 12578: 7b 19 08                 u64 [sp + 0x8] = a2
 12581: 7b 18                    u64 [sp] = a1
 12583: 98 7a 04                 a3 = a0 >> 0x4
 12586: 33 09 27                 a2 = 0x27
 12589: 33 0b 9f 05 01           a4 = 0x1059f
 12594: 53 2a 71 02 7b           jump @734 if a3 <u 625
      :                          @732
 12599: 33 09 27                 a2 = 0x27
 12602: 95 1c 46                 a5 = sp + 0x46
 12605: 3a 08 08 00 03           a1 = u64 [0x30008]
 12610: 7b 18 18                 u64 [sp + 0x18] = a1
 12613: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
 12619: 33 03 7b 14              t1 = 0x147b
 12623: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
 12629: 01                       fallthrough
      :                          @733
 12630: 64 70                    ra = a0
 12632: 82 17 18                 a0 = u64 [sp + 0x18]
 12635: d6 70 07                 a0 = ra mulhu a0
 12638: 98 77 0b                 a0 = a0 >> 0xb
 12641: 82 18 10                 a1 = u64 [sp + 0x10]
 12644: c0 87 02                 i32 t0 = a0 * a1
 12647: c8 02 05                 s0 = t0 + ra
 12650: 97 52 30                 t0 = s0 << 0x30
 12653: 98 28 32                 a1 = t0 >> 0x32
 12656: ca 38 08                 a1 = a1 * t1
 12659: 98 8a 11                 a3 = a1 >> 0x11
 12662: 98 88 10                 a1 = a1 >> 0x10
 12665: 84 88 fe 07              a1 = a1 & 0x7fe
 12669: 96 aa 9c                 a3 = a3 * 0xffffffffffffff9c
 12672: c8 5a 0a                 a3 = a3 + s0
 12675: 97 aa 31                 a3 = a3 << 0x31
 12678: 98 aa 30                 a3 = a3 >> 0x30
 12681: c8 b8 08                 a1 = a1 + a4
 12684: 7c 85                    s0 = u8 [a1]
 12686: 7c 88 01                 a1 = u8 [a1 + 0x1]
 12689: c8 ba 0a                 a3 = a3 + a4
 12692: 7c a6 01                 s1 = u8 [a3 + 0x1]
 12695: 7c aa                    a3 = u8 [a3]
 12697: 78 c8 ff                 u8 [a5 + 0xffffffffffffffff] = a1
 12700: 78 c5 fe                 u8 [a5 + 0xfffffffffffffffe] = s0
 12703: 78 c6 01                 u8 [a5 + 0x1] = s1
 12706: 78 ca                    u8 [a5] = a3
 12708: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
 12711: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 12714: ac 04 ac                 jump @733 if t2 <u ra
      :                          @734
 12717: 54 17 63 36              jump @736 if a0 <=u 99
      :                          @735
 12721: 97 78 30                 a1 = a0 << 0x30
 12724: 98 88 32                 a1 = a1 >> 0x32
 12727: 96 88 7b 14              a1 = a1 * 0x147b
 12731: 98 88 11                 a1 = a1 >> 0x11
 12734: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
 12737: c8 a7 07                 a0 = a0 + a3
 12740: 97 77 31                 a0 = a0 << 0x31
 12743: 98 77 30                 a0 = a0 >> 0x30
 12746: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 12749: c8 b7 07                 a0 = a0 + a4
 12752: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 12755: 7c 77                    a0 = u8 [a0]
 12757: 95 1c 21                 a5 = sp + 0x21
 12760: c8 9c 0c                 a5 = a5 + a2
 12763: 78 ca 01                 u8 [a5 + 0x1] = a3
 12766: 78 c7                    u8 [a5] = a0
 12768: 64 87                    a0 = a1
 12770: 01                       fallthrough
      :                          @736
 12771: 55 17 0a 14              jump @738 if a0 >=u 10
      :                          @737
 12775: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 12778: 95 18 21                 a1 = sp + 0x21
 12781: c8 98 08                 a1 = a1 + a2
 12784: 83 77 30                 i32 a0 = a0 + 0x30
 12787: 78 87                    u8 [a1] = a0
 12789: 28 1c                    jump @739
      :                          @738
 12791: 97 77 01                 a0 = a0 << 0x1
 12794: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 12797: c8 b7 07                 a0 = a0 + a4
 12800: 7c 78 01                 a1 = u8 [a0 + 0x1]
 12803: 7c 77                    a0 = u8 [a0]
 12805: 95 1a 21                 a3 = sp + 0x21
 12808: c8 9a 0a                 a3 = a3 + a2
 12811: 78 a8 01                 u8 [a3 + 0x1] = a1
 12814: 78 a7                    u8 [a3] = a0
 12816: 01                       fallthrough
      :                          @739
 12817: 95 1b 21                 a4 = sp + 0x21
 12820: c8 9b 0b                 a4 = a4 + a2
 12823: 9a 9c 27                 a5 = 0x27 - a2
 12826: 33 09 80 05 01           a2 = 0x10580
 12831: 82 17 08                 a0 = u64 [sp + 0x8]
 12834: 82 18                    a1 = u64 [sp]
 12836: 33 0a                    a3 = 0
 12838: 50 20 4a 01 13           ra = 330, jump @741
      :                          @740 [@dyn 165]
 12843: 82 10 58                 ra = u64 [sp + 0x58]
 12846: 82 15 50                 s0 = u64 [sp + 0x50]
 12849: 82 16 48                 s1 = u64 [sp + 0x48]
 12852: 95 11 60                 sp = sp + 0x60
 12855: 32 00                    ret
      :                          @741
 12857: 95 11 98                 sp = sp + 0xffffffffffffff98
 12860: 7b 10 60                 u64 [sp + 0x60] = ra
 12863: 7b 15 58                 u64 [sp + 0x58] = s0
 12866: 7b 16 50                 u64 [sp + 0x50] = s1
 12869: 7b 1b 18                 u64 [sp + 0x18] = a4
 12872: 51 08 4f                 jump @748 if a1 == 0
      :                          @742
 12875: 80 76 34                 s1 = u32 [a0 + 0x34]
 12878: 84 68 01                 a1 = s1 & 0x1
 12881: 33 0b 2b                 a4 = 0x2b
 12884: 33 05 00 00 11           s0 = 0x110000
 12889: db 8b 05                 s0 = a4 if a1 != 0
 12892: 7b 15 28                 u64 [sp + 0x28] = s0
 12895: c8 c8 02                 t0 = a1 + a5
 12898: 84 68 04                 a1 = s1 & 0x4
 12901: 51 08 42                 jump @749 if a1 == 0
      :                          @743
 12904: 7b 19 30                 u64 [sp + 0x30] = a2
 12907: 33 08                    a1 = 0
 12909: 51 0a 1a                 jump @746 if a3 == 0
      :                          @744
 12912: 64 a5                    s0 = a3
 12914: 01                       fallthrough
      :                          @745
 12915: 7d 9b                    a4 = i8 [a2]
 12917: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 12920: 85 bb 01                 a4 = a4 ^ 0x1
 12923: c8 b8 08                 a1 = a1 + a4
 12926: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 12929: 95 99 01                 a2 = a2 + 0x1
 12932: 52 05 ef                 jump @745 if s0 != 0
      :                          @746
 12935: c8 82 02                 t0 = t0 + a1
 12938: 7b 1a 38                 u64 [sp + 0x38] = a3
 12941: 82 78                    a1 = u64 [a0]
 12943: 7b 1c 20                 u64 [sp + 0x20] = a5
 12946: 52 08 23                 jump @750 if a1 != 0
      :                          @747
 12949: 28 41                    jump @755
      :                          @748
 12951: 81 76 34                 s1 = i32 [a0 + 0x34]
 12954: 95 c2 01                 t0 = a5 + 0x1
 12957: 49 11 28 2d              u64 [sp + 40] = 0x2d
 12961: 84 68 04                 a1 = s1 & 0x4
 12964: 52 08 c4                 jump @743 if a1 != 0
      :                          @749
 12967: 49 11 30                 u64 [sp + 48] = 0
 12970: 7b 1a 38                 u64 [sp + 0x38] = a3
 12973: 82 78                    a1 = u64 [a0]
 12975: 7b 1c 20                 u64 [sp + 0x20] = a5
 12978: 51 08 24                 jump @755 if a1 == 0
      :                          @750
 12981: 82 75 08                 s0 = u64 [a0 + 0x8]
 12984: ae 52 1e                 jump @755 if t0 >=u s0
      :                          @751
 12987: 84 66 08                 s1 = s1 & 0x8
 12990: 52 06 51                 jump @758 if s1 != 0
      :                          @752
 12993: 7c 79 38                 a2 = u8 [a0 + 0x38]
 12996: c9 25 0a                 a3 = s0 - t0
 12999: 5a 19 01 a4 00           jump @765 if a2 >s 1
      :                          @753
 13004: 52 09 b1 00              jump @767 if a2 != 0
      :                          @754
 13008: 7b 1a 10                 u64 [sp + 0x10] = a3
 13011: 28 b0 00                 jump @768
      :                          @755
 13014: 82 75 20                 s0 = u64 [a0 + 0x20]
 13017: 82 76 28                 s1 = u64 [a0 + 0x28]
 13020: 64 57                    a0 = s0
 13022: 64 68                    a1 = s1
 13024: 82 19 28                 a2 = u64 [sp + 0x28]
 13027: 82 1a 30                 a3 = u64 [sp + 0x30]
 13030: 82 1b 38                 a4 = u64 [sp + 0x38]
 13033: 50 20 4c 01 76 01        ra = 332, jump @788
      :                          @756 [@dyn 166]
 13039: 33 08 01                 a1 = 0x1
 13042: 52 07 bf 00              jump @773 if a0 != 0
      :                          @757
 13046: 82 6c 18                 a5 = u64 [s1 + 0x18]
 13049: 64 57                    a0 = s0
 13051: 82 18 18                 a1 = u64 [sp + 0x18]
 13054: 82 19 20                 a2 = u64 [sp + 0x20]
 13057: 82 10 60                 ra = u64 [sp + 0x60]
 13060: 82 15 58                 s0 = u64 [sp + 0x58]
 13063: 82 16 50                 s1 = u64 [sp + 0x50]
 13066: 95 11 68                 sp = sp + 0x68
 13069: 32 0c                    jump [a5]
      :                          @758
 13071: 7b 12 40                 u64 [sp + 0x40] = t0
 13074: 81 78 30                 a1 = i32 [a0 + 0x30]
 13077: 7b 18 08                 u64 [sp + 0x8] = a1
 13080: 7c 79 38                 a2 = u8 [a0 + 0x38]
 13083: 7b 19                    u64 [sp] = a2
 13085: 82 79 20                 a2 = u64 [a0 + 0x20]
 13088: 82 76 28                 s1 = u64 [a0 + 0x28]
 13091: 48 17 30 30              u32 [a0 + 48] = 0x30
 13095: 7b 17 10                 u64 [sp + 0x10] = a0
 13098: 46 17 38 01              u8 [a0 + 56] = 0x1
 13102: 7b 19 48                 u64 [sp + 0x48] = a2
 13105: 64 97                    a0 = a2
 13107: 64 68                    a1 = s1
 13109: 82 19 28                 a2 = u64 [sp + 0x28]
 13112: 82 1a 30                 a3 = u64 [sp + 0x30]
 13115: 82 1b 38                 a4 = u64 [sp + 0x38]
 13118: 50 20 4e 01 21 01        ra = 334, jump @788
      :                          @759 [@dyn 167]
 13124: 52 07 69                 jump @772 if a0 != 0
      :                          @760
 13127: 82 17 40                 a0 = u64 [sp + 0x40]
 13130: c9 75 05                 s0 = s0 - a0
 13133: 95 55 01                 s0 = s0 + 0x1
 13136: 01                       fallthrough
      :                          @761
 13137: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 13140: 51 05 cb 00              jump @783 if s0 == 0
      :                          @762
 13144: 82 69 20                 a2 = u64 [s1 + 0x20]
 13147: 33 08 30                 a1 = 0x30
 13150: 82 17 48                 a0 = u64 [sp + 0x48]
 13153: b4 90 02 50 01           ra = 336, jump [a2]
      :                          @763 [@dyn 168]
 13158: 51 07 eb                 jump @761 if a0 == 0
      :                          @764
 13161: 28 44                    jump @772
      :                          @765
 13163: 52 19 02 12              jump @767 if a2 != 2
      :                          @766
 13167: 98 a9 01                 a2 = a3 >> 0x1
 13170: 95 a8 01                 a1 = a3 + 0x1
 13173: 98 88 01                 a1 = a1 >> 0x1
 13176: 7b 18 10                 u64 [sp + 0x10] = a1
 13179: 28 08                    jump @768
      :                          @767
 13181: 64 a9                    a2 = a3
 13183: 49 11 10                 u64 [sp + 16] = 0
 13186: 01                       fallthrough
      :                          @768
 13187: 82 78 20                 a1 = u64 [a0 + 0x20]
 13190: 7b 18 48                 u64 [sp + 0x48] = a1
 13193: 82 76 28                 s1 = u64 [a0 + 0x28]
 13196: 81 77 30                 a0 = i32 [a0 + 0x30]
 13199: 7b 17 40                 u64 [sp + 0x40] = a0
 13202: 95 95 01                 s0 = a2 + 0x1
 13205: 01                       fallthrough
      :                          @769
 13206: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 13209: 51 05 28                 jump @774 if s0 == 0
      :                          @770
 13212: 82 69 20                 a2 = u64 [s1 + 0x20]
 13215: 82 17 48                 a0 = u64 [sp + 0x48]
 13218: 82 18 40                 a1 = u64 [sp + 0x40]
 13221: b4 90 02 52 01           ra = 338, jump [a2]
      :                          @771 [@dyn 169]
 13226: 51 07 ec                 jump @769 if a0 == 0
      :                          @772
 13229: 33 08 01                 a1 = 0x1
 13232: 01                       fallthrough
      :                          @773
 13233: 64 87                    a0 = a1
 13235: 82 10 60                 ra = u64 [sp + 0x60]
 13238: 82 15 58                 s0 = u64 [sp + 0x58]
 13241: 82 16 50                 s1 = u64 [sp + 0x50]
 13244: 95 11 68                 sp = sp + 0x68
 13247: 32 00                    ret
      :                          @774
 13249: 82 15 48                 s0 = u64 [sp + 0x48]
 13252: 64 57                    a0 = s0
 13254: 64 68                    a1 = s1
 13256: 82 19 28                 a2 = u64 [sp + 0x28]
 13259: 82 1a 30                 a3 = u64 [sp + 0x30]
 13262: 82 1b 38                 a4 = u64 [sp + 0x38]
 13265: 50 20 54 01 8e 00        ra = 340, jump @788
      :                          @775 [@dyn 170]
 13271: 33 08 01                 a1 = 0x1
 13274: 52 07 d7                 jump @773 if a0 != 0
      :                          @776
 13277: 82 6a 18                 a3 = u64 [s1 + 0x18]
 13280: 64 57                    a0 = s0
 13282: 82 18 18                 a1 = u64 [sp + 0x18]
 13285: 82 19 20                 a2 = u64 [sp + 0x20]
 13288: b4 a0 02 56 01           ra = 342, jump [a3]
      :                          @777 [@dyn 171]
 13293: 33 08 01                 a1 = 0x1
 13296: 52 07 c1                 jump @773 if a0 != 0
      :                          @778
 13299: 82 17 10                 a0 = u64 [sp + 0x10]
 13302: 9a 77                    a0 = -a0
 13304: 7b 17 38                 u64 [sp + 0x38] = a0
 13307: 33 05 ff                 s0 = 0xffffffffffffffff
 13310: 01                       fallthrough
      :                          @779
 13311: 82 17 38                 a0 = u64 [sp + 0x38]
 13314: c8 57 07                 a0 = a0 + s0
 13317: 51 17 ff 45              jump @786 if a0 == 4294967295
      :                          @780
 13321: 82 69 20                 a2 = u64 [s1 + 0x20]
 13324: 82 17 48                 a0 = u64 [sp + 0x48]
 13327: 82 18 40                 a1 = u64 [sp + 0x40]
 13330: b4 90 02 58 01           ra = 344, jump [a2]
      :                          @781 [@dyn 172]
 13335: 95 55 01                 s0 = s0 + 0x1
 13338: 51 07 e5                 jump @779 if a0 == 0
      :                          @782
 13341: 28 39                    jump @787
      :                          @783
 13343: 82 6a 18                 a3 = u64 [s1 + 0x18]
 13346: 82 17 48                 a0 = u64 [sp + 0x48]
 13349: 82 18 18                 a1 = u64 [sp + 0x18]
 13352: 82 19 20                 a2 = u64 [sp + 0x20]
 13355: b4 a0 02 5a 01           ra = 346, jump [a3]
      :                          @784 [@dyn 173]
 13360: 33 08 01                 a1 = 0x1
 13363: 52 07 7e ff              jump @773 if a0 != 0
      :                          @785
 13367: 33 08                    a1 = 0
 13369: 82 17 10                 a0 = u64 [sp + 0x10]
 13372: 82 19 08                 a2 = u64 [sp + 0x8]
 13375: 7a 79 30                 u32 [a0 + 0x30] = a2
 13378: 82 19                    a2 = u64 [sp]
 13380: 78 79 38                 u8 [a0 + 0x38] = a2
 13383: 28 6a ff                 jump @773
      :                          @786
 13386: 82 15 10                 s0 = u64 [sp + 0x10]
 13389: 82 17 10                 a0 = u64 [sp + 0x10]
 13392: d8 75 08                 a1 = s0 <u a0
 13395: 28 5e ff                 jump @773
      :                          @787
 13398: 82 17 10                 a0 = u64 [sp + 0x10]
 13401: d8 75 08                 a1 = s0 <u a0
 13404: 28 55 ff                 jump @773
      :                          @788
 13407: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 13410: 7b 10 20                 u64 [sp + 0x20] = ra
 13413: 7b 15 18                 u64 [sp + 0x18] = s0
 13416: 7b 16 10                 u64 [sp + 0x10] = s1
 13419: 83 9c                    i32 a5 = a2 + 0
 13421: 33 02 00 00 11           t0 = 0x110000
 13426: 64 a6                    s1 = a3
 13428: 64 85                    s0 = a1
 13430: 64 7a                    a3 = a0
 13432: aa 2c 21                 jump @791 if a5 == t0
      :                          @789
 13435: 82 5c 20                 a5 = u64 [s0 + 0x20]
 13438: 64 a7                    a0 = a3
 13440: 64 98                    a1 = a2
 13442: 7b 1b 08                 u64 [sp + 0x8] = a4
 13445: 7b 1a                    u64 [sp] = a3
 13447: b4 c0 02 5c 01           ra = 348, jump [a5]
      :                          @790 [@dyn 174]
 13452: 82 1a                    a3 = u64 [sp]
 13454: 82 1b 08                 a4 = u64 [sp + 0x8]
 13457: 64 78                    a1 = a0
 13459: 33 07 01                 a0 = 0x1
 13462: 52 08 20                 jump @794 if a1 != 0
      :                          @791
 13465: 51 06 1a                 jump @793 if s1 == 0
      :                          @792
 13468: 82 5c 18                 a5 = u64 [s0 + 0x18]
 13471: 64 a7                    a0 = a3
 13473: 64 68                    a1 = s1
 13475: 64 b9                    a2 = a4
 13477: 82 10 20                 ra = u64 [sp + 0x20]
 13480: 82 15 18                 s0 = u64 [sp + 0x18]
 13483: 82 16 10                 s1 = u64 [sp + 0x10]
 13486: 95 11 28                 sp = sp + 0x28
 13489: 32 0c                    jump [a5]
      :                          @793
 13491: 33 07                    a0 = 0
 13493: 01                       fallthrough
      :                          @794
 13494: 82 10 20                 ra = u64 [sp + 0x20]
 13497: 82 15 18                 s0 = u64 [sp + 0x18]
 13500: 82 16 10                 s1 = u64 [sp + 0x10]
 13503: 95 11 28                 sp = sp + 0x28
 13506: 32 00                    ret
      :                          @795
 13508: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 13511: 7b 10 40                 u64 [sp + 0x40] = ra
 13514: 7b 15 38                 u64 [sp + 0x38] = s0
 13517: 7b 16 30                 u64 [sp + 0x30] = s1
 13520: 82 74                    t2 = u64 [a0]
 13522: 82 7a 10                 a3 = u64 [a0 + 0x10]
 13525: d4 a4 0b                 a4 = t2 | a3
 13528: 64 93                    t1 = a2
 13530: 64 85                    s0 = a1
 13532: 51 0b ab 03              jump @867 if a4 == 0
      :                          @796
 13536: 7b 17 08                 u64 [sp + 0x8] = a0
 13539: 51 0a f5 00              jump @815 if a3 == 0
      :                          @797
 13543: 82 7c 18                 a5 = u64 [a0 + 0x18]
 13546: 33 0a                    a3 = 0
 13548: 49 11 18 02              u64 [sp + 24] = 0x2
 13552: 95 53 02                 t1 = s0 + 0x2
 13555: 95 cc 01                 a5 = a5 + 0x1
 13558: 33 00 00 00 11           ra = 0x110000
 13563: 33 07 df 00              a0 = 0xdf
 13567: 7b 15 10                 u64 [sp + 0x10] = s0
 13570: 64 59                    a2 = s0
 13572: 28 12                    jump @800
      :                          @798
 13574: 95 98 01                 a1 = a2 + 0x1
 13577: 01                       fallthrough
      :                          @799
 13578: c9 9a 0a                 a3 = a3 - a2
 13581: c8 8a 0a                 a3 = a3 + a1
 13584: 64 89                    a2 = a1
 13586: aa 05 bc 00              jump @814 if s0 == ra
      :                          @800
 13590: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 13593: 51 0c 68                 jump @809 if a5 == 0
      :                          @801
 13596: aa 39 b2 00              jump @814 if a2 == t1
      :                          @802
 13600: 7d 98                    a1 = i8 [a2]
 13602: 84 85 ff 00              s0 = a1 & 0xff
 13606: 59 08 e0                 jump @798 if a1 >=s 0
      :                          @803
 13609: 7c 98 01                 a1 = u8 [a2 + 0x1]
 13612: 84 56 1f                 s1 = s0 & 0x1f
 13615: 84 8b 3f                 a4 = a1 & 0x3f
 13618: ae 57 35                 jump @807 if a0 >=u s0
      :                          @804
 13621: 7c 98 02                 a1 = u8 [a2 + 0x2]
 13624: 97 bb 06                 a4 = a4 << 0x6
 13627: 84 88 3f                 a1 = a1 & 0x3f
 13630: d4 8b 02                 t0 = a4 | a1
 13633: 53 25 f0 00 31           jump @808 if s0 <u 240
      :                          @805
 13638: 7c 98 03                 a1 = u8 [a2 + 0x3]
 13641: 97 66 3d                 s1 = s1 << 0x3d
 13644: 98 66 2b                 s1 = s1 >> 0x2b
 13647: 97 22 06                 t0 = t0 << 0x6
 13650: 84 88 3f                 a1 = a1 & 0x3f
 13653: d4 82 05                 s0 = t0 | a1
 13656: d4 65 05                 s0 = s0 | s1
 13659: aa 05 73                 jump @814 if s0 == ra
      :                          @806
 13662: 95 98 04                 a1 = a2 + 0x4
 13665: 33 07 df 00              a0 = 0xdf
 13669: 28 a5                    jump @799
      :                          @807
 13671: 95 98 02                 a1 = a2 + 0x2
 13674: 97 65 06                 s0 = s1 << 0x6
 13677: d4 b5 05                 s0 = s0 | a4
 13680: 28 9a                    jump @799
      :                          @808
 13682: 95 98 03                 a1 = a2 + 0x3
 13685: 97 66 0c                 s1 = s1 << 0xc
 13688: d4 62 05                 s0 = t0 | s1
 13691: 33 07 df 00              a0 = 0xdf
 13695: 28 8b                    jump @799
      :                          @809
 13697: aa 39 4d                 jump @814 if a2 == t1
      :                          @810
 13700: 7d 98                    a1 = i8 [a2]
 13702: 59 08 b6 02              jump @857 if a1 >=s 0
      :                          @811
 13706: 84 88 ff 00              a1 = a1 & 0xff
 13710: 33 0b e0 00              a4 = 0xe0
 13714: ac b8 aa 02              jump @857 if a1 <u a4
      :                          @812
 13718: 33 0b f0 00              a4 = 0xf0
 13722: ac b8 a2 02              jump @857 if a1 <u a4
      :                          @813
 13726: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 13729: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 13732: 84 bb 3f                 a4 = a4 & 0x3f
 13735: 84 cc 3f                 a5 = a5 & 0x3f
 13738: 7c 99 03                 a2 = u8 [a2 + 0x3]
 13741: 97 88 3d                 a1 = a1 << 0x3d
 13744: 98 88 2b                 a1 = a1 >> 0x2b
 13747: 97 bb 0c                 a4 = a4 << 0xc
 13750: 97 cc 06                 a5 = a5 << 0x6
 13753: d4 cb 0b                 a4 = a4 | a5
 13756: 84 99 3f                 a2 = a2 & 0x3f
 13759: d4 b9 09                 a2 = a2 | a4
 13762: d4 98 08                 a1 = a1 | a2
 13765: 33 09 00 00 11           a2 = 0x110000
 13770: ab 98 72 02              jump @857 if a1 != a2
      :                          @814
 13774: 82 13 18                 t1 = u64 [sp + 0x18]
 13777: 82 15 10                 s0 = u64 [sp + 0x10]
 13780: 82 17 08                 a0 = u64 [sp + 0x8]
 13783: 01                       fallthrough
      :                          @815
 13784: 51 04 af 02              jump @867 if t2 == 0
      :                          @816
 13788: 82 7c 08                 a5 = u64 [a0 + 0x8]
 13791: 7b 13 18                 u64 [sp + 0x18] = t1
 13794: 7b 15 10                 u64 [sp + 0x10] = s0
 13797: 55 13 20 29              jump @822 if t1 >=u 32
      :                          @817
 13801: 33 09                    a2 = 0
 13803: 51 03 1c                 jump @820 if t1 == 0
      :                          @818
 13806: 64 58                    a1 = s0
 13808: 64 3a                    a3 = t1
 13810: 01                       fallthrough
      :                          @819
 13811: 7d 8b                    a4 = i8 [a1]
 13813: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 13816: 85 bb 01                 a4 = a4 ^ 0x1
 13819: c8 b9 09                 a2 = a2 + a4
 13822: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13825: 95 88 01                 a1 = a1 + 0x1
 13828: 52 0a ef                 jump @819 if a3 != 0
      :                          @820
 13831: ac c9 95 01              jump @839 if a2 <u a5
      :                          @821
 13835: 28 7c 02                 jump @867
      :                          @822
 13838: 7b 1c                    u64 [sp] = a5
 13840: 95 58 07                 a1 = s0 + 0x7
 13843: 64 5c                    a5 = s0
 13845: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 13848: c9 5c 0b                 a4 = a5 - s0
 13851: c8 b3 02                 t0 = t1 + a4
 13854: 84 2a 07                 a3 = t0 & 0x7
 13857: 33 08                    a1 = 0
 13859: aa c5 17                 jump @824 if s0 == a5
      :                          @823
 13862: 7d c6                    s1 = i8 [a5]
 13864: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 13867: 85 69 01                 a2 = s1 ^ 0x1
 13870: c8 98 08                 a1 = a1 + a2
 13873: 95 bb 01                 a4 = a4 + 0x1
 13876: 95 cc 01                 a5 = a5 + 0x1
 13879: 52 0b ef                 jump @823 if a4 != 0
      :                          @824
 13882: 33 0b                    a4 = 0
 13884: 51 0a 1e                 jump @827 if a3 == 0
      :                          @825
 13887: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 13890: c8 5c 0c                 a5 = a5 + s0
 13893: 01                       fallthrough
      :                          @826
 13894: 7d c7                    a0 = i8 [a5]
 13896: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 13899: 85 77 01                 a0 = a0 ^ 0x1
 13902: c8 7b 0b                 a4 = a4 + a0
 13905: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13908: 95 cc 01                 a5 = a5 + 0x1
 13911: 52 0a ef                 jump @826 if a3 != 0
      :                          @827
 13914: 98 20 03                 ra = t0 >> 0x3
 13917: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 13927: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 13937: 7b 17 28                 u64 [sp + 0x28] = a0
 13940: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 13950: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 13960: 7b 17 20                 u64 [sp + 0x20] = a0
 13963: c8 8b 09                 a2 = a4 + a1
 13966: 28 2d                    jump @829
      :                          @828
 13968: 97 45 03                 s0 = t2 << 0x3
 13971: c8 35 05                 s0 = s0 + t1
 13974: c9 40 00                 ra = ra - t2
 13977: 84 46 03                 s1 = t2 & 0x3
 13980: 82 1b 28                 a4 = u64 [sp + 0x28]
 13983: d2 b2 07                 a0 = t0 & a4
 13986: 98 28 08                 a1 = t0 >> 0x8
 13989: d2 b8 08                 a1 = a1 & a4
 13992: c8 87 07                 a0 = a0 + a1
 13995: 82 18 20                 a1 = u64 [sp + 0x20]
 13998: ca 87 07                 a0 = a0 * a1
 14001: 98 77 30                 a0 = a0 >> 0x30
 14004: c8 79 09                 a2 = a2 + a0
 14007: 52 06 8e 00              jump @836 if s1 != 0
      :                          @829
 14011: 51 00 79                 jump @834 if ra == 0
      :                          @830
 14014: 64 53                    t1 = s0
 14016: 33 07 c0 00              a0 = 0xc0
 14020: e6 70 04                 t2 = minu(ra, a0)
 14023: 33 02                    t0 = 0
 14025: 98 48 02                 a1 = t2 >> 0x2
 14028: 51 08 c4                 jump @828 if a1 == 0
      :                          @831
 14031: 97 88 05                 a1 = a1 << 0x5
 14034: c8 38 08                 a1 = a1 + t1
 14037: 64 36                    s1 = t1
 14039: 01                       fallthrough
      :                          @832
 14040: 82 67                    a0 = u64 [s1]
 14042: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 14045: 98 cc 07                 a5 = a5 >> 0x7
 14048: 98 77 06                 a0 = a0 >> 0x6
 14051: 82 6b 08                 a4 = u64 [s1 + 0x8]
 14054: d4 c7 07                 a0 = a0 | a5
 14057: d2 a7 07                 a0 = a0 & a3
 14060: c8 27 07                 a0 = a0 + t0
 14063: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 14066: 98 cc 07                 a5 = a5 >> 0x7
 14069: 82 65 10                 s0 = u64 [s1 + 0x10]
 14072: 98 bb 06                 a4 = a4 >> 0x6
 14075: d4 cb 0b                 a4 = a4 | a5
 14078: d2 ab 0b                 a4 = a4 & a3
 14081: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 14084: 98 cc 07                 a5 = a5 >> 0x7
 14087: 98 55 06                 s0 = s0 >> 0x6
 14090: d4 5c 0c                 a5 = a5 | s0
 14093: 82 65 18                 s0 = u64 [s1 + 0x18]
 14096: d2 ac 0c                 a5 = a5 & a3
 14099: c8 cb 0b                 a4 = a4 + a5
 14102: c8 b7 07                 a0 = a0 + a4
 14105: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 14108: 98 bb 07                 a4 = a4 >> 0x7
 14111: 98 55 06                 s0 = s0 >> 0x6
 14114: d4 5b 0b                 a4 = a4 | s0
 14117: d2 ab 0b                 a4 = a4 & a3
 14120: 95 66 20                 s1 = s1 + 0x20
 14123: c8 7b 02                 t0 = a4 + a0
 14126: ab 86 aa                 jump @832 if s1 != a1
      :                          @833
 14129: 28 5f ff                 jump @828
      :                          @834
 14132: 82 13 18                 t1 = u64 [sp + 0x18]
 14135: 82 15 10                 s0 = u64 [sp + 0x10]
 14138: 82 17 08                 a0 = u64 [sp + 0x8]
 14141: 82 1c                    a5 = u64 [sp]
 14143: ac c9 5d                 jump @839 if a2 <u a5
      :                          @835
 14146: 28 45 01                 jump @867
      :                          @836
 14149: 33 08                    a1 = 0
 14151: 84 47 fc 00              a0 = t2 & 0xfc
 14155: 97 77 03                 a0 = a0 << 0x3
 14158: c8 73 0b                 a4 = t1 + a0
 14161: 97 66 03                 s1 = s1 << 0x3
 14164: 82 13 18                 t1 = u64 [sp + 0x18]
 14167: 82 15 10                 s0 = u64 [sp + 0x10]
 14170: 01                       fallthrough
      :                          @837
 14171: 82 b7                    a0 = u64 [a4]
 14173: 95 bb 08                 a4 = a4 + 0x8
 14176: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 14179: 98 cc 07                 a5 = a5 >> 0x7
 14182: 98 77 06                 a0 = a0 >> 0x6
 14185: d4 c7 07                 a0 = a0 | a5
 14188: d2 a7 07                 a0 = a0 & a3
 14191: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 14194: c8 78 08                 a1 = a1 + a0
 14197: 52 06 e6                 jump @837 if s1 != 0
      :                          @838
 14200: 82 1a 28                 a3 = u64 [sp + 0x28]
 14203: d2 a8 07                 a0 = a1 & a3
 14206: 98 88 08                 a1 = a1 >> 0x8
 14209: d2 a8 08                 a1 = a1 & a3
 14212: c8 87 07                 a0 = a0 + a1
 14215: 82 18 20                 a1 = u64 [sp + 0x20]
 14218: ca 87 07                 a0 = a0 * a1
 14221: 98 77 30                 a0 = a0 >> 0x30
 14224: c8 79 09                 a2 = a2 + a0
 14227: 82 17 08                 a0 = u64 [sp + 0x8]
 14230: 82 1c                    a5 = u64 [sp]
 14232: ae c9 ef 00              jump @867 if a2 >=u a5
      :                          @839
 14236: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 14239: 33 08                    a1 = 0
 14241: 33 0b 01                 a4 = 0x1
 14244: c9 9c 0c                 a5 = a5 - a2
 14247: ad ab 0c                 jump @842 if a4 <s a3
      :                          @840
 14250: 51 0a 1a                 jump @844 if a3 == 0
      :                          @841
 14253: 64 c8                    a1 = a5
 14255: 49 01                    u64 [sp + 0] = 0
 14257: 28 16                    jump @845
      :                          @842
 14259: 52 1a 02 11              jump @844 if a3 != 2
      :                          @843
 14263: 98 c8 01                 a1 = a5 >> 0x1
 14266: 95 c9 01                 a2 = a5 + 0x1
 14269: 98 99 01                 a2 = a2 >> 0x1
 14272: 7b 19                    u64 [sp] = a2
 14274: 28 05                    jump @845
      :                          @844
 14276: 7b 1c                    u64 [sp] = a5
 14278: 01                       fallthrough
      :                          @845
 14279: 82 79 20                 a2 = u64 [a0 + 0x20]
 14282: 7b 19 28                 u64 [sp + 0x28] = a2
 14285: 82 75 28                 s0 = u64 [a0 + 0x28]
 14288: 81 77 30                 a0 = i32 [a0 + 0x30]
 14291: 7b 17 20                 u64 [sp + 0x20] = a0
 14294: 95 86 01                 s1 = a1 + 0x1
 14297: 01                       fallthrough
      :                          @846
 14298: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 14301: 51 06 19                 jump @850 if s1 == 0
      :                          @847
 14304: 82 59 20                 a2 = u64 [s0 + 0x20]
 14307: 82 17 28                 a0 = u64 [sp + 0x28]
 14310: 82 18 20                 a1 = u64 [sp + 0x20]
 14313: b4 90 02 5e 01           ra = 350, jump [a2]
      :                          @848 [@dyn 175]
 14318: 51 07 ec                 jump @846 if a0 == 0
      :                          @849
 14321: 33 07 01                 a0 = 0x1
 14324: 28 72                    jump @863
      :                          @850
 14326: 82 5a 18                 a3 = u64 [s0 + 0x18]
 14329: 82 17 28                 a0 = u64 [sp + 0x28]
 14332: 82 18 10                 a1 = u64 [sp + 0x10]
 14335: 82 19 18                 a2 = u64 [sp + 0x18]
 14338: b4 a0 02 60 01           ra = 352, jump [a3]
      :                          @851 [@dyn 176]
 14343: 64 78                    a1 = a0
 14345: 33 07 01                 a0 = 0x1
 14348: 52 08 5a                 jump @863 if a1 != 0
      :                          @852
 14351: 82 17                    a0 = u64 [sp]
 14353: 9a 77                    a0 = -a0
 14355: 7b 17 18                 u64 [sp + 0x18] = a0
 14358: 33 06 ff                 s1 = 0xffffffffffffffff
 14361: 01                       fallthrough
      :                          @853
 14362: 82 17 18                 a0 = u64 [sp + 0x18]
 14365: c8 67 07                 a0 = a0 + s1
 14368: 33 08 ff                 a1 = 0xffffffffffffffff
 14371: aa 87 34                 jump @861 if a0 == a1
      :                          @854
 14374: 82 59 20                 a2 = u64 [s0 + 0x20]
 14377: 82 17 28                 a0 = u64 [sp + 0x28]
 14380: 82 18 20                 a1 = u64 [sp + 0x20]
 14383: b4 90 02 62 01           ra = 354, jump [a2]
      :                          @855 [@dyn 177]
 14388: 95 66 01                 s1 = s1 + 0x1
 14391: 51 07 e3                 jump @853 if a0 == 0
      :                          @856
 14394: 28 26                    jump @862
      :                          @857
 14396: 82 13 18                 t1 = u64 [sp + 0x18]
 14399: 82 15 10                 s0 = u64 [sp + 0x10]
 14402: 51 0a 35                 jump @865 if a3 == 0
      :                          @858
 14405: ae 3a 2f                 jump @864 if a3 >=u t1
      :                          @859
 14408: c8 a5 08                 a1 = s0 + a3
 14411: 7d 88                    a1 = i8 [a1]
 14413: 33 09 c0                 a2 = 0xffffffffffffffc0
 14416: af 98 27                 jump @865 if a1 >=s a2
      :                          @860
 14419: 33 08                    a1 = 0
 14421: 28 25                    jump @866
      :                          @861
 14423: 82 16                    s1 = u64 [sp]
 14425: 82 17                    a0 = u64 [sp]
 14427: d8 76 07                 a0 = s1 <u a0
 14430: 28 08                    jump @863
      :                          @862
 14432: 82 17                    a0 = u64 [sp]
 14434: d8 76 07                 a0 = s1 <u a0
 14437: 01                       fallthrough
      :                          @863
 14438: 82 10 40                 ra = u64 [sp + 0x40]
 14441: 82 15 38                 s0 = u64 [sp + 0x38]
 14444: 82 16 30                 s1 = u64 [sp + 0x30]
 14447: 95 11 48                 sp = sp + 0x48
 14450: 32 00                    ret
      :                          @864
 14452: ab 3a df                 jump @860 if a3 != t1
      :                          @865
 14455: 64 58                    a1 = s0
 14457: 01                       fallthrough
      :                          @866
 14458: 82 17 08                 a0 = u64 [sp + 0x8]
 14461: db 8a 03                 t1 = a3 if a1 != 0
 14464: db 88 05                 s0 = a1 if a1 != 0
 14467: 52 04 59 fd              jump @816 if t2 != 0
      :                          @867
 14471: 82 78 28                 a1 = u64 [a0 + 0x28]
 14474: 82 77 20                 a0 = u64 [a0 + 0x20]
 14477: 82 8c 18                 a5 = u64 [a1 + 0x18]
 14480: 64 58                    a1 = s0
 14482: 64 39                    a2 = t1
 14484: 82 10 40                 ra = u64 [sp + 0x40]
 14487: 82 15 38                 s0 = u64 [sp + 0x38]
 14490: 82 16 30                 s1 = u64 [sp + 0x30]
 14493: 95 11 48                 sp = sp + 0x48
 14496: 32 0c                    jump [a5]
      :                          @868
 14498: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 14502: 7b 10 80 00              u64 [sp + 0x80] = ra
 14506: 7b 15 78                 u64 [sp + 0x78] = s0
 14509: 7b 16 70                 u64 [sp + 0x70] = s1
 14512: 49 11 60 20              u64 [sp + 96] = 0x20
 14516: 33 0a 03                 a3 = 0x3
 14519: 78 1a 68                 u8 [sp + 0x68] = a3
 14522: 82 96 20                 s1 = u64 [a2 + 0x20]
 14525: 49 11 30                 u64 [sp + 48] = 0
 14528: 49 11 40                 u64 [sp + 64] = 0
 14531: 7b 17 50                 u64 [sp + 0x50] = a0
 14534: 7b 18 58                 u64 [sp + 0x58] = a1
 14537: 51 06 0a 01              jump @890 if s1 == 0
      :                          @869
 14541: 82 97 28                 a0 = u64 [a2 + 0x28]
 14544: 51 07 79 01              jump @900 if a0 == 0
      :                          @870
 14548: 49 11 28                 u64 [sp + 40] = 0
 14551: 82 95                    s0 = u64 [a2]
 14553: 7b 19 08                 u64 [sp + 0x8] = a2
 14556: 82 98 10                 a1 = u64 [a2 + 0x10]
 14559: 7b 18 18                 u64 [sp + 0x18] = a1
 14562: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 14565: 97 88 03                 a1 = a1 << 0x3
 14568: 98 88 03                 a1 = a1 >> 0x3
 14571: 95 88 01                 a1 = a1 + 0x1
 14574: 7b 18                    u64 [sp] = a1
 14576: 95 55 08                 s0 = s0 + 0x8
 14579: 96 78 38                 a1 = a0 * 0x38
 14582: 95 66 18                 s1 = s1 + 0x18
 14585: 33 07 48 01              a0 = 0x148
 14589: 7b 17 10                 u64 [sp + 0x10] = a0
 14592: 01                       fallthrough
      :                          @871
 14593: 7b 18 20                 u64 [sp + 0x20] = a1
 14596: 82 59                    a2 = u64 [s0]
 14598: 51 09 18                 jump @874 if a2 == 0
      :                          @872
 14601: 82 1a 58                 a3 = u64 [sp + 0x58]
 14604: 82 17 50                 a0 = u64 [sp + 0x50]
 14607: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 14610: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14613: b4 a0 02 64 01           ra = 356, jump [a3]
      :                          @873 [@dyn 178]
 14618: 52 07 55 01              jump @903 if a0 != 0
      :                          @874
 14622: 81 67 10                 a0 = i32 [s1 + 0x10]
 14625: 7a 17 60                 u32 [sp + 0x60] = a0
 14628: 7c 67 18                 a0 = u8 [s1 + 0x18]
 14631: 78 17 68                 u8 [sp + 0x68] = a0
 14634: 81 67 14                 a0 = i32 [s1 + 0x14]
 14637: 7a 17 64                 u32 [sp + 0x64] = a0
 14640: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 14643: 82 67                    a0 = u64 [s1]
 14645: 51 08 26                 jump @879 if a1 == 0
      :                          @875
 14648: 52 18 01 16              jump @877 if a1 != 1
      :                          @876
 14652: 97 77 04                 a0 = a0 << 0x4
 14655: 82 18 18                 a1 = u64 [sp + 0x18]
 14658: c8 87 07                 a0 = a0 + a1
 14661: 82 78 08                 a1 = u64 [a0 + 0x8]
 14664: 82 19 10                 a2 = u64 [sp + 0x10]
 14667: aa 98 07                 jump @878 if a1 == a2
      :                          @877
 14670: 33 08                    a1 = 0
 14672: 28 0f                    jump @880
      :                          @878
 14674: 82 77                    a0 = u64 [a0]
 14676: 82 77                    a0 = u64 [a0]
 14678: 33 08 01                 a1 = 0x1
 14681: 28 06                    jump @880
      :                          @879
 14683: 33 08 01                 a1 = 0x1
 14686: 01                       fallthrough
      :                          @880
 14687: 7b 18 30                 u64 [sp + 0x30] = a1
 14690: 7b 17 38                 u64 [sp + 0x38] = a0
 14693: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 14696: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 14699: 51 08 26                 jump @885 if a1 == 0
      :                          @881
 14702: 52 18 01 16              jump @883 if a1 != 1
      :                          @882
 14706: 97 77 04                 a0 = a0 << 0x4
 14709: 82 18 18                 a1 = u64 [sp + 0x18]
 14712: c8 87 07                 a0 = a0 + a1
 14715: 82 78 08                 a1 = u64 [a0 + 0x8]
 14718: 82 19 10                 a2 = u64 [sp + 0x10]
 14721: aa 98 07                 jump @884 if a1 == a2
      :                          @883
 14724: 33 08                    a1 = 0
 14726: 28 0f                    jump @886
      :                          @884
 14728: 82 77                    a0 = u64 [a0]
 14730: 82 77                    a0 = u64 [a0]
 14732: 33 08 01                 a1 = 0x1
 14735: 28 06                    jump @886
      :                          @885
 14737: 33 08 01                 a1 = 0x1
 14740: 01                       fallthrough
      :                          @886
 14741: 7b 18 40                 u64 [sp + 0x40] = a1
 14744: 7b 17 48                 u64 [sp + 0x48] = a0
 14747: 82 67 08                 a0 = u64 [s1 + 0x8]
 14750: 97 77 04                 a0 = a0 << 0x4
 14753: 82 18 18                 a1 = u64 [sp + 0x18]
 14756: c8 78 08                 a1 = a1 + a0
 14759: 82 87                    a0 = u64 [a1]
 14761: 82 89 08                 a2 = u64 [a1 + 0x8]
 14764: 95 18 30                 a1 = sp + 0x30
 14767: b4 90 02 66 01           ra = 358, jump [a2]
      :                          @887 [@dyn 179]
 14772: 52 07 bb 00              jump @903 if a0 != 0
      :                          @888
 14776: 95 55 10                 s0 = s0 + 0x10
 14779: 82 18 20                 a1 = u64 [sp + 0x20]
 14782: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 14785: 95 66 38                 s1 = s1 + 0x38
 14788: 82 17 28                 a0 = u64 [sp + 0x28]
 14791: 95 77 01                 a0 = a0 + 0x1
 14794: 7b 17 28                 u64 [sp + 0x28] = a0
 14797: 52 08 34 ff              jump @871 if a1 != 0
      :                          @889
 14801: 28 6b                    jump @898
      :                          @890
 14803: 82 97 18                 a0 = u64 [a2 + 0x18]
 14806: 51 07 73                 jump @900 if a0 == 0
      :                          @891
 14809: 82 95 10                 s0 = u64 [a2 + 0x10]
 14812: 33 0a                    a3 = 0
 14814: 97 78 04                 a1 = a0 << 0x4
 14817: c8 58 08                 a1 = a1 + s0
 14820: 7b 18 20                 u64 [sp + 0x20] = a1
 14823: 7b 19 08                 u64 [sp + 0x8] = a2
 14826: 82 96                    s1 = u64 [a2]
 14828: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 14831: 97 77 04                 a0 = a0 << 0x4
 14834: 98 77 04                 a0 = a0 >> 0x4
 14837: 95 77 01                 a0 = a0 + 0x1
 14840: 7b 17                    u64 [sp] = a0
 14842: 95 66 08                 s1 = s1 + 0x8
 14845: 01                       fallthrough
      :                          @892
 14846: 7b 1a 28                 u64 [sp + 0x28] = a3
 14849: 82 69                    a2 = u64 [s1]
 14851: 51 09 17                 jump @895 if a2 == 0
      :                          @893
 14854: 82 1a 58                 a3 = u64 [sp + 0x58]
 14857: 82 17 50                 a0 = u64 [sp + 0x50]
 14860: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 14863: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14866: b4 a0 02 68 01           ra = 360, jump [a3]
      :                          @894 [@dyn 180]
 14871: 52 07 58                 jump @903 if a0 != 0
      :                          @895
 14874: 82 57                    a0 = u64 [s0]
 14876: 82 59 08                 a2 = u64 [s0 + 0x8]
 14879: 95 18 30                 a1 = sp + 0x30
 14882: b4 90 02 6a 01           ra = 362, jump [a2]
      :                          @896 [@dyn 181]
 14887: 52 07 48                 jump @903 if a0 != 0
      :                          @897
 14890: 95 66 10                 s1 = s1 + 0x10
 14893: 95 55 10                 s0 = s0 + 0x10
 14896: 82 1a 28                 a3 = u64 [sp + 0x28]
 14899: 95 aa 01                 a3 = a3 + 0x1
 14902: 82 17 20                 a0 = u64 [sp + 0x20]
 14905: ab 75 c5                 jump @892 if s0 != a0
      :                          @898
 14908: 82 19 08                 a2 = u64 [sp + 0x8]
 14911: 82 1a                    a3 = u64 [sp]
 14913: 82 97 08                 a0 = u64 [a2 + 0x8]
 14916: ac 7a 0d                 jump @901 if a3 <u a0
      :                          @899
 14919: 28 2d                    jump @904
      :                          @900
 14921: 33 0a                    a3 = 0
 14923: 82 97 08                 a0 = u64 [a2 + 0x8]
 14926: 54 07 26                 jump @904 if a0 <=u 0
      :                          @901
 14929: 82 97                    a0 = u64 [a2]
 14931: 97 a8 04                 a1 = a3 << 0x4
 14934: c8 87 09                 a2 = a0 + a1
 14937: 82 1a 58                 a3 = u64 [sp + 0x58]
 14940: 82 17 50                 a0 = u64 [sp + 0x50]
 14943: 82 98                    a1 = u64 [a2]
 14945: 82 99 08                 a2 = u64 [a2 + 0x8]
 14948: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14951: b4 a0 02 6c 01           ra = 364, jump [a3]
      :                          @902 [@dyn 182]
 14956: 51 07 08                 jump @904 if a0 == 0
      :                          @903
 14959: 33 07 01                 a0 = 0x1
 14962: 28 05                    jump @905
      :                          @904
 14964: 33 07                    a0 = 0
 14966: 01                       fallthrough
      :                          @905
 14967: 82 10 80 00              ra = u64 [sp + 0x80]
 14971: 82 15 78                 s0 = u64 [sp + 0x78]
 14974: 82 16 70                 s1 = u64 [sp + 0x70]
 14977: 95 11 88 00              sp = sp + 0x88
 14981: 32 00                    ret
      :                          @906 [@dyn 183]
 14983: 32 00                    ret
      :                          @907 [@dyn 184]
 14985: 95 11 88                 sp = sp + 0xffffffffffffff88
 14988: 7b 10 70                 u64 [sp + 0x70] = ra
 14991: 7b 15 68                 u64 [sp + 0x68] = s0
 14994: 7b 16 60                 u64 [sp + 0x60] = s1
 14997: 64 93                    t1 = a2
 14999: 33 0c                    a5 = 0
 15001: 33 02                    t0 = 0
 15003: 33 0b                    a4 = 0
 15005: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
 15015: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 15021: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 15031: 82 79 10                 a2 = u64 [a0 + 0x10]
 15034: 7b 19 48                 u64 [sp + 0x48] = a2
 15037: 82 79                    a2 = u64 [a0]
 15039: 7b 19 30                 u64 [sp + 0x30] = a2
 15042: 82 77 08                 a0 = u64 [a0 + 0x8]
 15045: 7b 17 28                 u64 [sp + 0x28] = a0
 15048: 7b 18 50                 u64 [sp + 0x50] = a1
 15051: 95 88 08                 a1 = a1 + 0x8
 15054: 7b 18                    u64 [sp] = a1
 15056: 33 07 91 05 01           a0 = 0x10591
 15061: 7b 17 08                 u64 [sp + 0x8] = a0
 15064: 33 05 0a                 s0 = 0xa
 15067: 7b 13 20                 u64 [sp + 0x20] = t1
 15070: 7b 14 18                 u64 [sp + 0x18] = t2
 15073: 7b 10 10                 u64 [sp + 0x10] = ra
 15076: 28 3a                    jump @911
      :                          @908
 15078: c8 89 07                 a0 = a2 + a1
 15081: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 15084: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 15087: 88 77 01                 a0 = a0 <u 0x1
 15090: 01                       fallthrough
      :                          @909
 15091: 82 1a 48                 a3 = u64 [sp + 0x48]
 15094: 78 a7                    u8 [a3] = a0
 15096: 82 17 28                 a0 = u64 [sp + 0x28]
 15099: 82 7a 18                 a3 = u64 [a0 + 0x18]
 15102: 82 17 30                 a0 = u64 [sp + 0x30]
 15105: b4 a0 02 72 01           ra = 370, jump [a3]
      :                          @910 [@dyn 185]
 15110: 64 52                    t0 = s0
 15112: 82 13 20                 t1 = u64 [sp + 0x20]
 15115: 82 14 18                 t2 = u64 [sp + 0x18]
 15118: 82 10 10                 ra = u64 [sp + 0x10]
 15121: 82 1c 58                 a5 = u64 [sp + 0x58]
 15124: 33 05 0a                 s0 = 0xa
 15127: 82 1b 38                 a4 = u64 [sp + 0x38]
 15130: 52 07 67 01              jump @952 if a0 != 0
      :                          @911
 15134: 84 b7 ff 00              a0 = a4 & 0xff
 15138: 52 07 5b 01              jump @951 if a0 != 0
      :                          @912
 15142: 7b 12 40                 u64 [sp + 0x40] = t0
 15145: ae c3 0a                 jump @915 if t1 >=u a5
      :                          @913
 15148: 28 f4 00                 jump @942
      :                          @914
 15151: ac c3 f1 00              jump @942 if t1 <u a5
      :                          @915
 15155: c9 c3 08                 a1 = t1 - a5
 15158: 82 16 50                 s1 = u64 [sp + 0x50]
 15161: c8 c6 06                 s1 = s1 + a5
 15164: 55 18 10 1d              jump @921 if a1 >=u 16
      :                          @916
 15168: aa c3 dd 00              jump @941 if t1 == a5
      :                          @917
 15172: 33 0a                    a3 = 0
 15174: 01                       fallthrough
      :                          @918
 15175: c8 a6 07                 a0 = s1 + a3
 15178: 7c 77                    a0 = u8 [a0]
 15180: aa 57 aa 00              jump @936 if a0 == s0
      :                          @919
 15184: 95 aa 01                 a3 = a3 + 0x1
 15187: ab a8 f4                 jump @918 if a1 != a3
      :                          @920
 15190: 28 c7 00                 jump @941
      :                          @921
 15193: 95 69 07                 a2 = s1 + 0x7
 15196: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 15199: c9 6a 07                 a0 = a3 - s1
 15202: d3 6a 0a                 a3 = a3 ^ s1
 15205: 88 aa 01                 a3 = a3 <u 0x1
 15208: 88 7b 01                 a4 = a0 <u 0x1
 15211: d4 ba 0a                 a3 = a3 | a4
 15214: 7b 1c 58                 u64 [sp + 0x58] = a5
 15217: 51 0a 44                 jump @927 if a3 == 0
      :                          @922
 15220: 33 07                    a0 = 0
 15222: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 15225: 01                       fallthrough
      :                          @923
 15226: 82 1b 58                 a4 = u64 [sp + 0x58]
 15229: 82 19                    a2 = u64 [sp]
 15231: c8 9b 0b                 a4 = a4 + a2
 15234: 01                       fallthrough
      :                          @924
 15235: c8 76 0c                 a5 = s1 + a0
 15238: 82 cc                    a5 = u64 [a5]
 15240: c8 7b 09                 a2 = a4 + a0
 15243: 82 99                    a2 = u64 [a2]
 15245: d3 0c 05                 s0 = a5 ^ ra
 15248: c8 45 05                 s0 = s0 + t2
 15251: e0 c5 0c                 a5 = s0 & ~a5
 15254: d3 09 05                 s0 = a2 ^ ra
 15257: 3a 0a 10 00 03           a3 = u64 [0x30010]
 15262: c8 45 05                 s0 = s0 + t2
 15265: e0 95 09                 a2 = s0 & ~a2
 15268: d4 c9 09                 a2 = a2 | a5
 15271: d2 a9 09                 a2 = a2 & a3
 15274: 52 09 1f                 jump @930 if a2 != 0
      :                          @925
 15277: 95 77 10                 a0 = a0 + 0x10
 15280: ae 72 d3                 jump @924 if t0 >=u a0
      :                          @926
 15283: 28 16                    jump @930
      :                          @927
 15285: c8 a6 0b                 a4 = s1 + a3
 15288: 7c bb                    a4 = u8 [a4]
 15290: aa 5b 54                 jump @939 if a4 == s0
      :                          @928
 15293: 95 aa 01                 a3 = a3 + 0x1
 15296: ab a7 f5                 jump @927 if a0 != a3
      :                          @929
 15299: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 15302: ae 72 b4                 jump @923 if t0 >=u a0
      :                          @930
 15305: aa 87 99 00              jump @948 if a0 == a1
      :                          @931
 15309: 33 0a                    a3 = 0
 15311: c8 76 06                 s1 = s1 + a0
 15314: c9 73 08                 a1 = t1 - a0
 15317: 82 1c 58                 a5 = u64 [sp + 0x58]
 15320: c9 c8 08                 a1 = a1 - a5
 15323: 33 05 0a                 s0 = 0xa
 15326: 82 12 40                 t0 = u64 [sp + 0x40]
 15329: 01                       fallthrough
      :                          @932
 15330: c8 a6 09                 a2 = s1 + a3
 15333: 7c 99                    a2 = u8 [a2]
 15335: aa 59 0b                 jump @935 if a2 == s0
      :                          @933
 15338: 95 aa 01                 a3 = a3 + 0x1
 15341: ab a8 f5                 jump @932 if a1 != a3
      :                          @934
 15344: 28 2d                    jump @941
      :                          @935
 15346: c8 7a 0a                 a3 = a3 + a0
 15349: 01                       fallthrough
      :                          @936
 15350: c8 ca 0a                 a3 = a3 + a5
 15353: 95 ac 01                 a5 = a3 + 0x1
 15356: ae 3a 33 ff              jump @914 if a3 >=u t1
      :                          @937
 15360: 82 17 50                 a0 = u64 [sp + 0x50]
 15363: c8 7a 0a                 a3 = a3 + a0
 15366: 7c a7                    a0 = u8 [a3]
 15368: ab 57 27 ff              jump @914 if a0 != s0
      :                          @938
 15372: 28 5d                    jump @949
      :                          @939
 15374: 82 1c 58                 a5 = u64 [sp + 0x58]
 15377: c8 ca 0a                 a3 = a3 + a5
 15380: 95 ac 01                 a5 = a3 + 0x1
 15383: ac 3a e9                 jump @937 if a3 <u t1
      :                          @940
 15386: 28 15 ff                 jump @914
      :                          @941
 15389: 64 3c                    a5 = t1
 15391: 01                       fallthrough
      :                          @942
 15392: 7b 1c 58                 u64 [sp + 0x58] = a5
 15395: 49 11 38 01              u64 [sp + 56] = 0x1
 15399: 64 25                    s0 = t0
 15401: 64 36                    s1 = t1
 15403: aa 32 52                 jump @951 if t0 == t1
      :                          @943
 15406: 82 17 48                 a0 = u64 [sp + 0x48]
 15409: 7c 77                    a0 = u8 [a0]
 15411: 51 07 1d                 jump @946 if a0 == 0
      :                          @944
 15414: 82 17 28                 a0 = u64 [sp + 0x28]
 15417: 82 7a 18                 a3 = u64 [a0 + 0x18]
 15420: 33 09 04                 a2 = 0x4
 15423: 82 17 30                 a0 = u64 [sp + 0x30]
 15426: 82 18 08                 a1 = u64 [sp + 0x8]
 15429: b4 a0 02 74 01           ra = 372, jump [a3]
      :                          @945 [@dyn 186]
 15434: 82 12 40                 t0 = u64 [sp + 0x40]
 15437: 52 07 34                 jump @952 if a0 != 0
      :                          @946
 15440: c9 26 09                 a2 = s1 - t0
 15443: 82 18 50                 a1 = u64 [sp + 0x50]
 15446: c8 28 08                 a1 = a1 + t0
 15449: ab 26 8d fe              jump @908 if s1 != t0
      :                          @947
 15453: 33 07                    a0 = 0
 15455: 28 94 fe                 jump @909
      :                          @948
 15458: 64 3c                    a5 = t1
 15460: 82 12 40                 t0 = u64 [sp + 0x40]
 15463: 28 b9                    jump @942
      :                          @949
 15465: 49 11 38                 u64 [sp + 56] = 0
 15468: 64 c6                    s1 = a5
 15470: 64 c5                    s0 = a5
 15472: 7b 1c 58                 u64 [sp + 0x58] = a5
 15475: 82 17 48                 a0 = u64 [sp + 0x48]
 15478: 7c 77                    a0 = u8 [a0]
 15480: 52 07 be                 jump @944 if a0 != 0
      :                          @950
 15483: 28 d5                    jump @946
      :                          @951
 15485: 33 07                    a0 = 0
 15487: 28 06                    jump @953
      :                          @952
 15489: 33 07 01                 a0 = 0x1
 15492: 01                       fallthrough
      :                          @953
 15493: 82 10 70                 ra = u64 [sp + 0x70]
 15496: 82 15 68                 s0 = u64 [sp + 0x68]
 15499: 82 16 60                 s1 = u64 [sp + 0x60]
 15502: 95 11 78                 sp = sp + 0x78
 15505: 32 00                    ret
      :                          @954 [@dyn 187]
 15507: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15510: 7b 10 20                 u64 [sp + 0x20] = ra
 15513: 7b 15 18                 u64 [sp + 0x18] = s0
 15516: 7b 16 10                 u64 [sp + 0x10] = s1
 15519: 82 75 10                 s0 = u64 [a0 + 0x10]
 15522: 7c 59                    a2 = u8 [s0]
 15524: 82 7b                    a4 = u64 [a0]
 15526: 82 76 08                 s1 = u64 [a0 + 0x8]
 15529: 51 09 33                 jump @958 if a2 == 0
      :                          @955
 15532: 82 6a 18                 a3 = u64 [s1 + 0x18]
 15535: 7b 18 08                 u64 [sp + 0x8] = a1
 15538: 33 08 91 05 01           a1 = 0x10591
 15543: 33 09 04                 a2 = 0x4
 15546: 64 b7                    a0 = a4
 15548: 7b 1b                    u64 [sp] = a4
 15550: b4 a0 02 78 01           ra = 376, jump [a3]
      :                          @956 [@dyn 188]
 15555: 82 18 08                 a1 = u64 [sp + 0x8]
 15558: 82 1b                    a4 = u64 [sp]
 15560: 51 07 14                 jump @958 if a0 == 0
      :                          @957
 15563: 33 07 01                 a0 = 0x1
 15566: 82 10 20                 ra = u64 [sp + 0x20]
 15569: 82 15 18                 s0 = u64 [sp + 0x18]
 15572: 82 16 10                 s1 = u64 [sp + 0x10]
 15575: 95 11 28                 sp = sp + 0x28
 15578: 32 00                    ret
      :                          @958
 15580: 83 87                    i32 a0 = a1 + 0
 15582: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 15585: 88 77 01                 a0 = a0 <u 0x1
 15588: 78 57                    u8 [s0] = a0
 15590: 82 6c 20                 a5 = u64 [s1 + 0x20]
 15593: 64 b7                    a0 = a4
 15595: 82 10 20                 ra = u64 [sp + 0x20]
 15598: 82 15 18                 s0 = u64 [sp + 0x18]
 15601: 82 16 10                 s1 = u64 [sp + 0x10]
 15604: 95 11 28                 sp = sp + 0x28
 15607: 32 0c                    jump [a5]
      :                          @959 [@dyn 189]
 15609: 64 8a                    a3 = a1
 15611: 33 08 f8 0e 01           a1 = 0x10ef8
 15616: 64 a9                    a2 = a3
 15618: 28 a0 fb                 jump @868
      :                          @960
 15621: 51 08 9b 00              jump @981 if a1 == 0
      :                          @961
 15625: 64 79                    a2 = a0
 15627: 7c 77                    a0 = u8 [a0]
 15629: 51 07 91 00              jump @980 if a0 == 0
      :                          @962
 15633: 51 27 ff 00 90 00        jump @982 if a0 == 255
      :                          @963
 15639: 6c 7a                    a3 = sext.b a0
 15641: 57 0a 09                 jump @965 if a3 <s 0
      :                          @964
 15644: 33 0a                    a3 = 0
 15646: 33 08                    a1 = 0
 15648: 28 73                    jump @979
      :                          @965
 15650: 55 27 c0 00 0d           jump @967 if a0 >=u 192
      :                          @966
 15655: 33 0a 01                 a3 = 0x1
 15658: 33 0b 80                 a4 = 0xffffffffffffff80
 15661: 28 4a                    jump @976
      :                          @967
 15663: 55 27 e0 00 0e           jump @969 if a0 >=u 224
      :                          @968
 15668: 33 0a 02                 a3 = 0x2
 15671: 33 0b 40 ff              a4 = 0xffffffffffffff40
 15675: 28 3c                    jump @976
      :                          @969
 15677: 55 27 f0 00 0e           jump @971 if a0 >=u 240
      :                          @970
 15682: 33 0a 03                 a3 = 0x3
 15685: 33 0b 20 ff              a4 = 0xffffffffffffff20
 15689: 28 2e                    jump @976
      :                          @971
 15691: 55 27 f8 00 0e           jump @973 if a0 >=u 248
      :                          @972
 15696: 33 0a 04                 a3 = 0x4
 15699: 33 0b 10 ff              a4 = 0xffffffffffffff10
 15703: 28 20                    jump @976
      :                          @973
 15705: 55 27 fc 00 0e           jump @975 if a0 >=u 252
      :                          @974
 15710: 33 0a 05                 a3 = 0x5
 15713: 33 0b 08 ff              a4 = 0xffffffffffffff08
 15717: 28 12                    jump @976
      :                          @975
 15719: 88 7a fe 00              a3 = a0 <u 0xfe
 15723: 33 0b 04 ff              a4 = 0xffffffffffffff04
 15727: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 15731: 85 aa 07                 a3 = a3 ^ 0x7
 15734: 01                       fallthrough
      :                          @976
 15735: ae 8a 2b                 jump @983 if a3 >=u a1
      :                          @977
 15738: 33 08                    a1 = 0
 15740: c8 b7 07                 a0 = a0 + a4
 15743: 64 ab                    a4 = a3
 15745: 01                       fallthrough
      :                          @978
 15746: c8 b9 0c                 a5 = a2 + a4
 15749: 7c cc                    a5 = u8 [a5]
 15751: 97 88 08                 a1 = a1 << 0x8
 15754: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 15757: d4 c8 08                 a1 = a1 | a5
 15760: 52 0b f2                 jump @978 if a4 != 0
      :                          @979
 15763: 8a a9 03                 i32 a2 = a3 << 0x3
 15766: cf 97 07                 a0 = a0 << a2
 15769: c8 87 07                 a0 = a0 + a1
 15772: 32 00                    ret
      :                          @980
 15774: 32 00                    ret
      :                          @981
 15776: 00                       trap
      :                          @982
 15777: 00                       trap
      :                          @983
 15778: 00                       trap
      :                          @984
 15779: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 15783: 7b 10 00 01              u64 [sp + 0x100] = ra
 15787: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 15791: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 15795: 7b 17                    u64 [sp] = a0
 15797: 78 18 0f                 u8 [sp + 0xf] = a1
 15800: 7b 17 10                 u64 [sp + 0x10] = a0
 15803: 95 16 0f                 s1 = sp + 0xf
 15806: 33 05 01                 s0 = 0x1
 15809: 95 17 0f                 a0 = sp + 0xf
 15812: 33 08 01                 a1 = 0x1
 15815: 95 19 10                 a2 = sp + 0x10
 15818: 33 0a 08                 a3 = 0x8
 15821: 0a 03                    ecalli 3 // 'write'
 15823: 7b 16 60                 u64 [sp + 0x60] = s1
 15826: 33 07 80 01              a0 = 0x180
 15830: 7b 17 68                 u64 [sp + 0x68] = a0
 15833: 64 17                    a0 = sp
 15835: 7b 17 70                 u64 [sp + 0x70] = a0
 15838: 33 07 10                 a0 = 0x10
 15841: 7b 17 78                 u64 [sp + 0x78] = a0
 15844: 49 21 80 00 02           u64 [sp + 128] = 0x2
 15849: 49 21 90 00 02           u64 [sp + 144] = 0x2
 15854: 49 21 a0 00              u64 [sp + 160] = 0
 15858: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 15868: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 15872: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 15877: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 15882: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 15887: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 15891: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 15895: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 15900: 33 08 28 0f 01           a1 = 0x10f28
 15905: 7b 18 30                 u64 [sp + 0x30] = a1
 15908: 49 11 38 02              u64 [sp + 56] = 0x2
 15912: 95 18 80 00              a1 = sp + 0x80
 15916: 7b 18 50                 u64 [sp + 0x50] = a1
 15919: 49 11 58 02              u64 [sp + 88] = 0x2
 15923: 95 18 60                 a1 = sp + 0x60
 15926: 7b 18 40                 u64 [sp + 0x40] = a1
 15929: 49 11 48 02              u64 [sp + 72] = 0x2
 15933: 95 17 18                 a0 = sp + 0x18
 15936: 95 18 30                 a1 = sp + 0x30
 15939: 50 20 7c 01 4d ef        ra = 380, jump @648
      :                          @985 [@dyn 190]
 15945: 82 15 20                 s0 = u64 [sp + 0x20]
 15948: 82 1b 28                 a4 = u64 [sp + 0x28]
 15951: 82 16 18                 s1 = u64 [sp + 0x18]
 15954: 33 07 02                 a0 = 0x2
 15957: 33 08                    a1 = 0
 15959: 33 09                    a2 = 0
 15961: 64 5a                    a3 = s0
 15963: 33 00 7e 01              ra = 0x17e
 15967: 0a 64                    ecalli 100 // 'log'
 15969: 01                       fallthrough
      :                          @986 [@dyn 191]
 15970: 33 07 00 f0              a0 = 0xfffffffffffff000
 15974: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 15978: ac 78 23                 jump @992 if a1 <u a0
      :                          @987
 15981: 33 07 20 00 03           a0 = 0x30020
 15986: 95 77 00 10              a0 = a0 + 0x1000
 15990: 01                       fallthrough
      :                          @988
 15991: 82 78                    a1 = u64 [a0]
 15993: c9 87 09                 a2 = a0 - a1
 15996: ab 59 11                 jump @992 if a2 != s0
      :                          @989
 15999: c9 68 09                 a2 = a1 - s1
 16002: 01                       fallthrough
      :                          @990
 16003: 82 7a                    a3 = u64 [a0]
 16005: ab 8a f2                 jump @988 if a3 != a1
      :                          @991
 16008: 7b 79                    u64 [a0] = a2
 16010: 33 0b                    a4 = 0
 16012: 01                       fallthrough
      :                          @992
 16013: 82 10 00 01              ra = u64 [sp + 0x100]
 16017: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 16021: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 16025: 95 11 08 01              sp = sp + 0x108
 16029: 32 00                    ret
      :                          @993 [@dyn 192]
 16031: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 16035: 7b 10 90 00              u64 [sp + 0x90] = ra
 16039: 7b 15 88 00              u64 [sp + 0x88] = s0
 16043: 7b 16 80 00              u64 [sp + 0x80] = s1
 16047: 64 85                    s0 = a1
 16049: 82 86 28                 s1 = u64 [a1 + 0x28]
 16052: 82 8a 20                 a3 = u64 [a1 + 0x20]
 16055: 82 6b 18                 a4 = u64 [s1 + 0x18]
 16058: 7b 17 10                 u64 [sp + 0x10] = a0
 16061: 33 08 80 05 01           a1 = 0x10580
 16066: 33 09 01                 a2 = 0x1
 16069: 7b 1a 18                 u64 [sp + 0x18] = a3
 16072: 64 a7                    a0 = a3
 16074: 7b 1b 08                 u64 [sp + 0x8] = a4
 16077: b4 b0 02 82 01           ra = 386, jump [a4]
      :                          @994 [@dyn 193]
 16082: 51 07 09                 jump @996 if a0 == 0
      :                          @995
 16085: 33 09 01                 a2 = 0x1
 16088: 28 d2 00                 jump @1008
      :                          @996
 16091: 80 58 34                 a1 = u32 [s0 + 0x34]
 16094: 84 87 04                 a0 = a1 & 0x4
 16097: 52 07 21                 jump @1000 if a0 != 0
      :                          @997
 16100: 82 17 10                 a0 = u64 [sp + 0x10]
 16103: 64 58                    a1 = s0
 16105: 50 20 84 01 d5 00        ra = 388, jump @1009
      :                          @998 [@dyn 194]
 16111: 33 09 01                 a2 = 0x1
 16114: 52 07 b8 00              jump @1008 if a0 != 0
      :                          @999
 16118: 82 57 28                 a0 = u64 [s0 + 0x28]
 16121: 82 5a 20                 a3 = u64 [s0 + 0x20]
 16124: 82 7b 18                 a4 = u64 [a0 + 0x18]
 16127: 28 99 00                 jump @1006
      :                          @1000
 16130: 7b 18                    u64 [sp] = a1
 16132: 33 08 9b 05 01           a1 = 0x1059b
 16137: 33 09 01                 a2 = 0x1
 16140: 82 17 18                 a0 = u64 [sp + 0x18]
 16143: 82 1a 08                 a3 = u64 [sp + 0x8]
 16146: b4 a0 02 86 01           ra = 390, jump [a3]
      :                          @1001 [@dyn 195]
 16151: 33 09 01                 a2 = 0x1
 16154: 82 18 18                 a1 = u64 [sp + 0x18]
 16157: 52 07 8d 00              jump @1008 if a0 != 0
      :                          @1002
 16161: 46 11 3f 01              u8 [sp + 63] = 0x1
 16165: 7b 18 20                 u64 [sp + 0x20] = a1
 16168: 7b 16 28                 u64 [sp + 0x28] = s1
 16171: 95 17 3f                 a0 = sp + 0x3f
 16174: 7b 17 30                 u64 [sp + 0x30] = a0
 16177: 81 57 30                 a0 = i32 [s0 + 0x30]
 16180: 7c 58 38                 a1 = u8 [s0 + 0x38]
 16183: 82 59                    a2 = u64 [s0]
 16185: 82 5a 08                 a3 = u64 [s0 + 0x8]
 16188: 82 5b 10                 a4 = u64 [s0 + 0x10]
 16191: 82 5c 18                 a5 = u64 [s0 + 0x18]
 16194: 82 16                    s1 = u64 [sp]
 16196: 7a 16 74                 u32 [sp + 0x74] = s1
 16199: 7a 17 70                 u32 [sp + 0x70] = a0
 16202: 78 18 78                 u8 [sp + 0x78] = a1
 16205: 7b 19 40                 u64 [sp + 0x40] = a2
 16208: 7b 1a 48                 u64 [sp + 0x48] = a3
 16211: 7b 1b 50                 u64 [sp + 0x50] = a4
 16214: 7b 1c 58                 u64 [sp + 0x58] = a5
 16217: 95 17 20                 a0 = sp + 0x20
 16220: 7b 17 60                 u64 [sp + 0x60] = a0
 16223: 33 07 f8 0e 01           a0 = 0x10ef8
 16228: 7b 17 68                 u64 [sp + 0x68] = a0
 16231: 95 18 40                 a1 = sp + 0x40
 16234: 82 17 10                 a0 = u64 [sp + 0x10]
 16237: 50 20 88 01 51           ra = 392, jump @1009
      :                          @1003 [@dyn 196]
 16242: 52 07 63 ff              jump @995 if a0 != 0
      :                          @1004
 16246: 82 18 68                 a1 = u64 [sp + 0x68]
 16249: 82 17 60                 a0 = u64 [sp + 0x60]
 16252: 82 8a 18                 a3 = u64 [a1 + 0x18]
 16255: 33 08 99 05 01           a1 = 0x10599
 16260: 33 09 02                 a2 = 0x2
 16263: b4 a0 02 8a 01           ra = 394, jump [a3]
      :                          @1005 [@dyn 197]
 16268: 82 1a 18                 a3 = u64 [sp + 0x18]
 16271: 82 1b 08                 a4 = u64 [sp + 0x8]
 16274: 33 09 01                 a2 = 0x1
 16277: 52 07 15                 jump @1008 if a0 != 0
      :                          @1006
 16280: 33 08 9c 05 01           a1 = 0x1059c
 16285: 33 09 01                 a2 = 0x1
 16288: 64 a7                    a0 = a3
 16290: b4 b0 02 8c 01           ra = 396, jump [a4]
      :                          @1007 [@dyn 198]
 16295: 64 79                    a2 = a0
 16297: 01                       fallthrough
      :                          @1008
 16298: 64 97                    a0 = a2
 16300: 82 10 90 00              ra = u64 [sp + 0x90]
 16304: 82 15 88 00              s0 = u64 [sp + 0x88]
 16308: 82 16 80 00              s1 = u64 [sp + 0x80]
 16312: 95 11 98 00              sp = sp + 0x98
 16316: 32 00                    ret
      :                          @1009
 16318: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 16322: 7b 10 80 00              u64 [sp + 0x80] = ra
 16326: 64 82                    t0 = a1
 16328: 80 88 34                 a1 = u32 [a1 + 0x34]
 16331: 84 89 10                 a2 = a1 & 0x10
 16334: 52 09 1b                 jump @1012 if a2 != 0
      :                          @1010
 16337: 84 88 20                 a1 = a1 & 0x20
 16340: 52 08 5c                 jump @1016 if a1 != 0
      :                          @1011
 16343: 7c 77                    a0 = u8 [a0]
 16345: 33 08 01                 a1 = 0x1
 16348: 64 29                    a2 = t0
 16350: 82 10 80 00              ra = u64 [sp + 0x80]
 16354: 95 11 88 00              sp = sp + 0x88
 16358: 28 30 f1                 jump @731
      :                          @1012
 16361: 7c 77                    a0 = u8 [a0]
 16363: 33 0a 81 00              a3 = 0x81
 16367: 95 18 7f                 a1 = sp + 0x7f
 16370: 33 03 57                 t1 = 0x57
 16373: 01                       fallthrough
      :                          @1013
 16374: 64 ab                    a4 = a3
 16376: 84 7a 0f                 a3 = a0 & 0xf
 16379: 97 77 38                 a0 = a0 << 0x38
 16382: 98 77 3c                 a0 = a0 >> 0x3c
 16385: 88 ac 0a                 a5 = a3 <u 0xa
 16388: 33 09 30                 a2 = 0x30
 16391: da c3 09                 a2 = t1 if a5 == 0
 16394: be a9 09                 i32 a2 = a2 + a3
 16397: 78 89                    u8 [a1] = a2
 16399: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 16402: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 16405: 52 07 e1                 jump @1013 if a0 != 0
      :                          @1014
 16408: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 16411: 56 27 80 00 73           jump @1022 if a0 >u 128
      :                          @1015
 16416: 9a ac 81 00              a5 = 0x81 - a3
 16420: 64 1b                    a4 = sp
 16422: c8 7b 0b                 a4 = a4 + a0
 16425: 33 09 9d 05 01           a2 = 0x1059d
 16430: 28 48                    jump @1020
      :                          @1016
 16432: 7c 77                    a0 = u8 [a0]
 16434: 33 0a 81 00              a3 = 0x81
 16438: 95 18 7f                 a1 = sp + 0x7f
 16441: 33 03 37                 t1 = 0x37
 16444: 01                       fallthrough
      :                          @1017
 16445: 64 ab                    a4 = a3
 16447: 84 7a 0f                 a3 = a0 & 0xf
 16450: 97 77 38                 a0 = a0 << 0x38
 16453: 98 77 3c                 a0 = a0 >> 0x3c
 16456: 88 ac 0a                 a5 = a3 <u 0xa
 16459: 33 09 30                 a2 = 0x30
 16462: da c3 09                 a2 = t1 if a5 == 0
 16465: be a9 09                 i32 a2 = a2 + a3
 16468: 78 89                    u8 [a1] = a2
 16470: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 16473: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 16476: 52 07 e1                 jump @1017 if a0 != 0
      :                          @1018
 16479: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 16482: 56 27 80 00 2c           jump @1022 if a0 >u 128
      :                          @1019
 16487: 9a ac 81 00              a5 = 0x81 - a3
 16491: 64 1b                    a4 = sp
 16493: c8 7b 0b                 a4 = a4 + a0
 16496: 33 09 9d 05 01           a2 = 0x1059d
 16501: 01                       fallthrough
      :                          @1020
 16502: 33 08 01                 a1 = 0x1
 16505: 33 0a 02                 a3 = 0x2
 16508: 64 27                    a0 = t0
 16510: 50 20 8e 01 bb f1        ra = 398, jump @741
      :                          @1021 [@dyn 199]
 16516: 82 10 80 00              ra = u64 [sp + 0x80]
 16520: 95 11 88 00              sp = sp + 0x88
 16524: 32 00                    ret
      :                          @1022
 16526: 00                       trap
